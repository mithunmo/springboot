//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for adActiveUserDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="adActiveUserDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="activeUserId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="userId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="loginDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="logoutDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="sessionId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="240"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "adActiveUserDomain", propOrder = {
    "activeUserId",
    "userId",
    "loginDate",
    "logoutDate",
    "sessionId",
    "createdby",
    "lastupdateby"
})
public class AdActiveUserDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int activeUserId;
    protected int userId;
    @XmlElement(required = true)
    protected XMLGregorianCalendar loginDate;
    @XmlElement(required = true)
    protected XMLGregorianCalendar logoutDate;
    @XmlElement(required = true)
    protected String sessionId;
    protected int createdby;
    protected int lastupdateby;

    /**
     * Default no-arg constructor
     * 
     */
    public AdActiveUserDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public AdActiveUserDomain(final int activeUserId, final int userId, final XMLGregorianCalendar loginDate, final XMLGregorianCalendar logoutDate, final String sessionId, final int createdby, final int lastupdateby) {
        this.activeUserId = activeUserId;
        this.userId = userId;
        this.loginDate = loginDate;
        this.logoutDate = logoutDate;
        this.sessionId = sessionId;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
    }

    /**
     * Gets the value of the activeUserId property.
     * 
     */
    public int getActiveUserId() {
        return activeUserId;
    }

    /**
     * Sets the value of the activeUserId property.
     * 
     */
    public void setActiveUserId(int value) {
        this.activeUserId = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     */
    public void setUserId(int value) {
        this.userId = value;
    }

    /**
     * Gets the value of the loginDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getLoginDate() {
        return loginDate;
    }

    /**
     * Sets the value of the loginDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setLoginDate(XMLGregorianCalendar value) {
        this.loginDate = value;
    }

    /**
     * Gets the value of the logoutDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getLogoutDate() {
        return logoutDate;
    }

    /**
     * Sets the value of the logoutDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setLogoutDate(XMLGregorianCalendar value) {
        this.logoutDate = value;
    }

    /**
     * Gets the value of the sessionId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSessionId() {
        return sessionId;
    }

    /**
     * Sets the value of the sessionId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSessionId(String value) {
        this.sessionId = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theActiveUserId;
            theActiveUserId = this.getActiveUserId();
            strategy.appendField(locator, this, "activeUserId", buffer, theActiveUserId);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            XMLGregorianCalendar theLoginDate;
            theLoginDate = this.getLoginDate();
            strategy.appendField(locator, this, "loginDate", buffer, theLoginDate);
        }
        {
            XMLGregorianCalendar theLogoutDate;
            theLogoutDate = this.getLogoutDate();
            strategy.appendField(locator, this, "logoutDate", buffer, theLogoutDate);
        }
        {
            String theSessionId;
            theSessionId = this.getSessionId();
            strategy.appendField(locator, this, "sessionId", buffer, theSessionId);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AdActiveUserDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AdActiveUserDomain that = ((AdActiveUserDomain) object);
        {
            int lhsActiveUserId;
            lhsActiveUserId = this.getActiveUserId();
            int rhsActiveUserId;
            rhsActiveUserId = that.getActiveUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activeUserId", lhsActiveUserId), LocatorUtils.property(thatLocator, "activeUserId", rhsActiveUserId), lhsActiveUserId, rhsActiveUserId)) {
                return false;
            }
        }
        {
            int lhsUserId;
            lhsUserId = this.getUserId();
            int rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsLoginDate;
            lhsLoginDate = this.getLoginDate();
            XMLGregorianCalendar rhsLoginDate;
            rhsLoginDate = that.getLoginDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "loginDate", lhsLoginDate), LocatorUtils.property(thatLocator, "loginDate", rhsLoginDate), lhsLoginDate, rhsLoginDate)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsLogoutDate;
            lhsLogoutDate = this.getLogoutDate();
            XMLGregorianCalendar rhsLogoutDate;
            rhsLogoutDate = that.getLogoutDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "logoutDate", lhsLogoutDate), LocatorUtils.property(thatLocator, "logoutDate", rhsLogoutDate), lhsLogoutDate, rhsLogoutDate)) {
                return false;
            }
        }
        {
            String lhsSessionId;
            lhsSessionId = this.getSessionId();
            String rhsSessionId;
            rhsSessionId = that.getSessionId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sessionId", lhsSessionId), LocatorUtils.property(thatLocator, "sessionId", rhsSessionId), lhsSessionId, rhsSessionId)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theActiveUserId;
            theActiveUserId = this.getActiveUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activeUserId", theActiveUserId), currentHashCode, theActiveUserId);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            XMLGregorianCalendar theLoginDate;
            theLoginDate = this.getLoginDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "loginDate", theLoginDate), currentHashCode, theLoginDate);
        }
        {
            XMLGregorianCalendar theLogoutDate;
            theLogoutDate = this.getLogoutDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "logoutDate", theLogoutDate), currentHashCode, theLogoutDate);
        }
        {
            String theSessionId;
            theSessionId = this.getSessionId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sessionId", theSessionId), currentHashCode, theSessionId);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof AdActiveUserDomain) {
            final AdActiveUserDomain copy = ((AdActiveUserDomain) draftCopy);
            int sourceActiveUserId;
            sourceActiveUserId = this.getActiveUserId();
            int copyActiveUserId = strategy.copy(LocatorUtils.property(locator, "activeUserId", sourceActiveUserId), sourceActiveUserId);
            copy.setActiveUserId(copyActiveUserId);
            int sourceUserId;
            sourceUserId = this.getUserId();
            int copyUserId = strategy.copy(LocatorUtils.property(locator, "userId", sourceUserId), sourceUserId);
            copy.setUserId(copyUserId);
            if (this.loginDate!= null) {
                XMLGregorianCalendar sourceLoginDate;
                sourceLoginDate = this.getLoginDate();
                XMLGregorianCalendar copyLoginDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "loginDate", sourceLoginDate), sourceLoginDate));
                copy.setLoginDate(copyLoginDate);
            } else {
                copy.loginDate = null;
            }
            if (this.logoutDate!= null) {
                XMLGregorianCalendar sourceLogoutDate;
                sourceLogoutDate = this.getLogoutDate();
                XMLGregorianCalendar copyLogoutDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "logoutDate", sourceLogoutDate), sourceLogoutDate));
                copy.setLogoutDate(copyLogoutDate);
            } else {
                copy.logoutDate = null;
            }
            if (this.sessionId!= null) {
                String sourceSessionId;
                sourceSessionId = this.getSessionId();
                String copySessionId = ((String) strategy.copy(LocatorUtils.property(locator, "sessionId", sourceSessionId), sourceSessionId));
                copy.setSessionId(copySessionId);
            } else {
                copy.sessionId = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new AdActiveUserDomain();
    }

}
