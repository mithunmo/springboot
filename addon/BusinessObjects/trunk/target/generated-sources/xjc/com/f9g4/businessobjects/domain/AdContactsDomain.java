//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for adContactsDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="adContactsDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="contactId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="userId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="workphone">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="40"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="workext">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="20"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="cellphone">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="40"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fax">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="40"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="langCode">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="10"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "adContactsDomain", propOrder = {
    "contactId",
    "userId",
    "workphone",
    "workext",
    "cellphone",
    "fax",
    "langCode",
    "createdby",
    "lastupdateby"
})
public class AdContactsDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int contactId;
    protected int userId;
    @XmlElement(required = true)
    protected String workphone;
    @XmlElement(required = true)
    protected String workext;
    @XmlElement(required = true)
    protected String cellphone;
    @XmlElement(required = true)
    protected String fax;
    @XmlElement(required = true, defaultValue = "en-US")
    protected String langCode;
    protected int createdby;
    protected int lastupdateby;

    /**
     * Default no-arg constructor
     * 
     */
    public AdContactsDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public AdContactsDomain(final int contactId, final int userId, final String workphone, final String workext, final String cellphone, final String fax, final String langCode, final int createdby, final int lastupdateby) {
        this.contactId = contactId;
        this.userId = userId;
        this.workphone = workphone;
        this.workext = workext;
        this.cellphone = cellphone;
        this.fax = fax;
        this.langCode = langCode;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
    }

    /**
     * Gets the value of the contactId property.
     * 
     */
    public int getContactId() {
        return contactId;
    }

    /**
     * Sets the value of the contactId property.
     * 
     */
    public void setContactId(int value) {
        this.contactId = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     */
    public void setUserId(int value) {
        this.userId = value;
    }

    /**
     * Gets the value of the workphone property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWorkphone() {
        return workphone;
    }

    /**
     * Sets the value of the workphone property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWorkphone(String value) {
        this.workphone = value;
    }

    /**
     * Gets the value of the workext property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWorkext() {
        return workext;
    }

    /**
     * Sets the value of the workext property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWorkext(String value) {
        this.workext = value;
    }

    /**
     * Gets the value of the cellphone property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCellphone() {
        return cellphone;
    }

    /**
     * Sets the value of the cellphone property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCellphone(String value) {
        this.cellphone = value;
    }

    /**
     * Gets the value of the fax property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFax() {
        return fax;
    }

    /**
     * Sets the value of the fax property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFax(String value) {
        this.fax = value;
    }

    /**
     * Gets the value of the langCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLangCode() {
        return langCode;
    }

    /**
     * Sets the value of the langCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLangCode(String value) {
        this.langCode = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theContactId;
            theContactId = this.getContactId();
            strategy.appendField(locator, this, "contactId", buffer, theContactId);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            String theWorkphone;
            theWorkphone = this.getWorkphone();
            strategy.appendField(locator, this, "workphone", buffer, theWorkphone);
        }
        {
            String theWorkext;
            theWorkext = this.getWorkext();
            strategy.appendField(locator, this, "workext", buffer, theWorkext);
        }
        {
            String theCellphone;
            theCellphone = this.getCellphone();
            strategy.appendField(locator, this, "cellphone", buffer, theCellphone);
        }
        {
            String theFax;
            theFax = this.getFax();
            strategy.appendField(locator, this, "fax", buffer, theFax);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            strategy.appendField(locator, this, "langCode", buffer, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AdContactsDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AdContactsDomain that = ((AdContactsDomain) object);
        {
            int lhsContactId;
            lhsContactId = this.getContactId();
            int rhsContactId;
            rhsContactId = that.getContactId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactId", lhsContactId), LocatorUtils.property(thatLocator, "contactId", rhsContactId), lhsContactId, rhsContactId)) {
                return false;
            }
        }
        {
            int lhsUserId;
            lhsUserId = this.getUserId();
            int rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            String lhsWorkphone;
            lhsWorkphone = this.getWorkphone();
            String rhsWorkphone;
            rhsWorkphone = that.getWorkphone();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "workphone", lhsWorkphone), LocatorUtils.property(thatLocator, "workphone", rhsWorkphone), lhsWorkphone, rhsWorkphone)) {
                return false;
            }
        }
        {
            String lhsWorkext;
            lhsWorkext = this.getWorkext();
            String rhsWorkext;
            rhsWorkext = that.getWorkext();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "workext", lhsWorkext), LocatorUtils.property(thatLocator, "workext", rhsWorkext), lhsWorkext, rhsWorkext)) {
                return false;
            }
        }
        {
            String lhsCellphone;
            lhsCellphone = this.getCellphone();
            String rhsCellphone;
            rhsCellphone = that.getCellphone();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cellphone", lhsCellphone), LocatorUtils.property(thatLocator, "cellphone", rhsCellphone), lhsCellphone, rhsCellphone)) {
                return false;
            }
        }
        {
            String lhsFax;
            lhsFax = this.getFax();
            String rhsFax;
            rhsFax = that.getFax();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fax", lhsFax), LocatorUtils.property(thatLocator, "fax", rhsFax), lhsFax, rhsFax)) {
                return false;
            }
        }
        {
            String lhsLangCode;
            lhsLangCode = this.getLangCode();
            String rhsLangCode;
            rhsLangCode = that.getLangCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "langCode", lhsLangCode), LocatorUtils.property(thatLocator, "langCode", rhsLangCode), lhsLangCode, rhsLangCode)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theContactId;
            theContactId = this.getContactId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactId", theContactId), currentHashCode, theContactId);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            String theWorkphone;
            theWorkphone = this.getWorkphone();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "workphone", theWorkphone), currentHashCode, theWorkphone);
        }
        {
            String theWorkext;
            theWorkext = this.getWorkext();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "workext", theWorkext), currentHashCode, theWorkext);
        }
        {
            String theCellphone;
            theCellphone = this.getCellphone();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cellphone", theCellphone), currentHashCode, theCellphone);
        }
        {
            String theFax;
            theFax = this.getFax();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fax", theFax), currentHashCode, theFax);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "langCode", theLangCode), currentHashCode, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof AdContactsDomain) {
            final AdContactsDomain copy = ((AdContactsDomain) draftCopy);
            int sourceContactId;
            sourceContactId = this.getContactId();
            int copyContactId = strategy.copy(LocatorUtils.property(locator, "contactId", sourceContactId), sourceContactId);
            copy.setContactId(copyContactId);
            int sourceUserId;
            sourceUserId = this.getUserId();
            int copyUserId = strategy.copy(LocatorUtils.property(locator, "userId", sourceUserId), sourceUserId);
            copy.setUserId(copyUserId);
            if (this.workphone!= null) {
                String sourceWorkphone;
                sourceWorkphone = this.getWorkphone();
                String copyWorkphone = ((String) strategy.copy(LocatorUtils.property(locator, "workphone", sourceWorkphone), sourceWorkphone));
                copy.setWorkphone(copyWorkphone);
            } else {
                copy.workphone = null;
            }
            if (this.workext!= null) {
                String sourceWorkext;
                sourceWorkext = this.getWorkext();
                String copyWorkext = ((String) strategy.copy(LocatorUtils.property(locator, "workext", sourceWorkext), sourceWorkext));
                copy.setWorkext(copyWorkext);
            } else {
                copy.workext = null;
            }
            if (this.cellphone!= null) {
                String sourceCellphone;
                sourceCellphone = this.getCellphone();
                String copyCellphone = ((String) strategy.copy(LocatorUtils.property(locator, "cellphone", sourceCellphone), sourceCellphone));
                copy.setCellphone(copyCellphone);
            } else {
                copy.cellphone = null;
            }
            if (this.fax!= null) {
                String sourceFax;
                sourceFax = this.getFax();
                String copyFax = ((String) strategy.copy(LocatorUtils.property(locator, "fax", sourceFax), sourceFax));
                copy.setFax(copyFax);
            } else {
                copy.fax = null;
            }
            if (this.langCode!= null) {
                String sourceLangCode;
                sourceLangCode = this.getLangCode();
                String copyLangCode = ((String) strategy.copy(LocatorUtils.property(locator, "langCode", sourceLangCode), sourceLangCode));
                copy.setLangCode(copyLangCode);
            } else {
                copy.langCode = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new AdContactsDomain();
    }

}
