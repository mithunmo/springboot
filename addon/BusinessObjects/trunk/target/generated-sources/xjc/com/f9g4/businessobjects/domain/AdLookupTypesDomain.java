//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for adLookupTypesDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="adLookupTypesDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="lookupTypeId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lookuptype">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="60"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lookupDescription">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="langCode">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="10"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="activeStatus">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lookupValues" type="{http://domain.businessobjects.f9g4.com}adLookupValuesDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "adLookupTypesDomain", propOrder = {
    "lookupTypeId",
    "lookuptype",
    "lookupDescription",
    "langCode",
    "activeStatus",
    "lookupValues",
    "createdby",
    "lastupdateby"
})
public class AdLookupTypesDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int lookupTypeId;
    @XmlElement(required = true)
    protected String lookuptype;
    @XmlElement(required = true)
    protected String lookupDescription;
    @XmlElement(required = true, defaultValue = "en-US")
    protected String langCode;
    protected int activeStatus;
    protected List<AdLookupValuesDomain> lookupValues;
    protected int createdby;
    protected int lastupdateby;

    /**
     * Default no-arg constructor
     * 
     */
    public AdLookupTypesDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public AdLookupTypesDomain(final int lookupTypeId, final String lookuptype, final String lookupDescription, final String langCode, final int activeStatus, final List<AdLookupValuesDomain> lookupValues, final int createdby, final int lastupdateby) {
        this.lookupTypeId = lookupTypeId;
        this.lookuptype = lookuptype;
        this.lookupDescription = lookupDescription;
        this.langCode = langCode;
        this.activeStatus = activeStatus;
        this.lookupValues = lookupValues;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
    }

    /**
     * Gets the value of the lookupTypeId property.
     * 
     */
    public int getLookupTypeId() {
        return lookupTypeId;
    }

    /**
     * Sets the value of the lookupTypeId property.
     * 
     */
    public void setLookupTypeId(int value) {
        this.lookupTypeId = value;
    }

    /**
     * Gets the value of the lookuptype property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLookuptype() {
        return lookuptype;
    }

    /**
     * Sets the value of the lookuptype property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLookuptype(String value) {
        this.lookuptype = value;
    }

    /**
     * Gets the value of the lookupDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLookupDescription() {
        return lookupDescription;
    }

    /**
     * Sets the value of the lookupDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLookupDescription(String value) {
        this.lookupDescription = value;
    }

    /**
     * Gets the value of the langCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLangCode() {
        return langCode;
    }

    /**
     * Sets the value of the langCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLangCode(String value) {
        this.langCode = value;
    }

    /**
     * Gets the value of the activeStatus property.
     * 
     */
    public int getActiveStatus() {
        return activeStatus;
    }

    /**
     * Sets the value of the activeStatus property.
     * 
     */
    public void setActiveStatus(int value) {
        this.activeStatus = value;
    }

    /**
     * Gets the value of the lookupValues property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the lookupValues property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLookupValues().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdLookupValuesDomain }
     * 
     * 
     */
    public List<AdLookupValuesDomain> getLookupValues() {
        if (lookupValues == null) {
            lookupValues = new ArrayList<AdLookupValuesDomain>();
        }
        return this.lookupValues;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theLookupTypeId;
            theLookupTypeId = this.getLookupTypeId();
            strategy.appendField(locator, this, "lookupTypeId", buffer, theLookupTypeId);
        }
        {
            String theLookuptype;
            theLookuptype = this.getLookuptype();
            strategy.appendField(locator, this, "lookuptype", buffer, theLookuptype);
        }
        {
            String theLookupDescription;
            theLookupDescription = this.getLookupDescription();
            strategy.appendField(locator, this, "lookupDescription", buffer, theLookupDescription);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            strategy.appendField(locator, this, "langCode", buffer, theLangCode);
        }
        {
            int theActiveStatus;
            theActiveStatus = this.getActiveStatus();
            strategy.appendField(locator, this, "activeStatus", buffer, theActiveStatus);
        }
        {
            List<AdLookupValuesDomain> theLookupValues;
            theLookupValues = this.getLookupValues();
            strategy.appendField(locator, this, "lookupValues", buffer, theLookupValues);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AdLookupTypesDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AdLookupTypesDomain that = ((AdLookupTypesDomain) object);
        {
            int lhsLookupTypeId;
            lhsLookupTypeId = this.getLookupTypeId();
            int rhsLookupTypeId;
            rhsLookupTypeId = that.getLookupTypeId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupTypeId", lhsLookupTypeId), LocatorUtils.property(thatLocator, "lookupTypeId", rhsLookupTypeId), lhsLookupTypeId, rhsLookupTypeId)) {
                return false;
            }
        }
        {
            String lhsLookuptype;
            lhsLookuptype = this.getLookuptype();
            String rhsLookuptype;
            rhsLookuptype = that.getLookuptype();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookuptype", lhsLookuptype), LocatorUtils.property(thatLocator, "lookuptype", rhsLookuptype), lhsLookuptype, rhsLookuptype)) {
                return false;
            }
        }
        {
            String lhsLookupDescription;
            lhsLookupDescription = this.getLookupDescription();
            String rhsLookupDescription;
            rhsLookupDescription = that.getLookupDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupDescription", lhsLookupDescription), LocatorUtils.property(thatLocator, "lookupDescription", rhsLookupDescription), lhsLookupDescription, rhsLookupDescription)) {
                return false;
            }
        }
        {
            String lhsLangCode;
            lhsLangCode = this.getLangCode();
            String rhsLangCode;
            rhsLangCode = that.getLangCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "langCode", lhsLangCode), LocatorUtils.property(thatLocator, "langCode", rhsLangCode), lhsLangCode, rhsLangCode)) {
                return false;
            }
        }
        {
            int lhsActiveStatus;
            lhsActiveStatus = this.getActiveStatus();
            int rhsActiveStatus;
            rhsActiveStatus = that.getActiveStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activeStatus", lhsActiveStatus), LocatorUtils.property(thatLocator, "activeStatus", rhsActiveStatus), lhsActiveStatus, rhsActiveStatus)) {
                return false;
            }
        }
        {
            List<AdLookupValuesDomain> lhsLookupValues;
            lhsLookupValues = this.getLookupValues();
            List<AdLookupValuesDomain> rhsLookupValues;
            rhsLookupValues = that.getLookupValues();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupValues", lhsLookupValues), LocatorUtils.property(thatLocator, "lookupValues", rhsLookupValues), lhsLookupValues, rhsLookupValues)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theLookupTypeId;
            theLookupTypeId = this.getLookupTypeId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupTypeId", theLookupTypeId), currentHashCode, theLookupTypeId);
        }
        {
            String theLookuptype;
            theLookuptype = this.getLookuptype();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookuptype", theLookuptype), currentHashCode, theLookuptype);
        }
        {
            String theLookupDescription;
            theLookupDescription = this.getLookupDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupDescription", theLookupDescription), currentHashCode, theLookupDescription);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "langCode", theLangCode), currentHashCode, theLangCode);
        }
        {
            int theActiveStatus;
            theActiveStatus = this.getActiveStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activeStatus", theActiveStatus), currentHashCode, theActiveStatus);
        }
        {
            List<AdLookupValuesDomain> theLookupValues;
            theLookupValues = this.getLookupValues();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupValues", theLookupValues), currentHashCode, theLookupValues);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof AdLookupTypesDomain) {
            final AdLookupTypesDomain copy = ((AdLookupTypesDomain) draftCopy);
            int sourceLookupTypeId;
            sourceLookupTypeId = this.getLookupTypeId();
            int copyLookupTypeId = strategy.copy(LocatorUtils.property(locator, "lookupTypeId", sourceLookupTypeId), sourceLookupTypeId);
            copy.setLookupTypeId(copyLookupTypeId);
            if (this.lookuptype!= null) {
                String sourceLookuptype;
                sourceLookuptype = this.getLookuptype();
                String copyLookuptype = ((String) strategy.copy(LocatorUtils.property(locator, "lookuptype", sourceLookuptype), sourceLookuptype));
                copy.setLookuptype(copyLookuptype);
            } else {
                copy.lookuptype = null;
            }
            if (this.lookupDescription!= null) {
                String sourceLookupDescription;
                sourceLookupDescription = this.getLookupDescription();
                String copyLookupDescription = ((String) strategy.copy(LocatorUtils.property(locator, "lookupDescription", sourceLookupDescription), sourceLookupDescription));
                copy.setLookupDescription(copyLookupDescription);
            } else {
                copy.lookupDescription = null;
            }
            if (this.langCode!= null) {
                String sourceLangCode;
                sourceLangCode = this.getLangCode();
                String copyLangCode = ((String) strategy.copy(LocatorUtils.property(locator, "langCode", sourceLangCode), sourceLangCode));
                copy.setLangCode(copyLangCode);
            } else {
                copy.langCode = null;
            }
            int sourceActiveStatus;
            sourceActiveStatus = this.getActiveStatus();
            int copyActiveStatus = strategy.copy(LocatorUtils.property(locator, "activeStatus", sourceActiveStatus), sourceActiveStatus);
            copy.setActiveStatus(copyActiveStatus);
            if ((this.lookupValues!= null)&&(!this.lookupValues.isEmpty())) {
                List<AdLookupValuesDomain> sourceLookupValues;
                sourceLookupValues = this.getLookupValues();
                @SuppressWarnings("unchecked")
                List<AdLookupValuesDomain> copyLookupValues = ((List<AdLookupValuesDomain> ) strategy.copy(LocatorUtils.property(locator, "lookupValues", sourceLookupValues), sourceLookupValues));
                copy.lookupValues = null;
                List<AdLookupValuesDomain> uniqueLookupValuesl = copy.getLookupValues();
                uniqueLookupValuesl.addAll(copyLookupValues);
            } else {
                copy.lookupValues = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new AdLookupTypesDomain();
    }

}
