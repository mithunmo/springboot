//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for adUserMembershipDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="adUserMembershipDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="membershipid">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="membershipPricingId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="membershipPrice">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="userId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="paymentStatusId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="paymentStatus">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;minLength value="1"/>
 *               &lt;maxLength value="240"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="effectiveDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="experiationDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="autopay">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="autopayWithdrawDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="membershipAuthSubmit" type="{http://domain.businessobjects.f9g4.com}trMembershipAuthSubmitDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="memPricingOption" type="{http://domain.businessobjects.f9g4.com}stMemPricingOptionsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "adUserMembershipDomain", propOrder = {
    "membershipid",
    "membershipPricingId",
    "membershipPrice",
    "userId",
    "paymentStatusId",
    "paymentStatus",
    "effectiveDate",
    "experiationDate",
    "autopay",
    "autopayWithdrawDate",
    "createdby",
    "lastupdateby",
    "membershipAuthSubmit",
    "memPricingOption"
})
public class AdUserMembershipDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int membershipid;
    protected int membershipPricingId;
    @XmlElement(required = true)
    protected BigDecimal membershipPrice;
    protected int userId;
    protected int paymentStatusId;
    @XmlElement(required = true)
    protected String paymentStatus;
    @XmlElement(required = true)
    protected XMLGregorianCalendar effectiveDate;
    @XmlElement(required = true)
    protected XMLGregorianCalendar experiationDate;
    protected int autopay;
    protected int autopayWithdrawDate;
    protected int createdby;
    protected int lastupdateby;
    protected List<TrMembershipAuthSubmitDomain> membershipAuthSubmit;
    protected List<StMemPricingOptionsDomain> memPricingOption;

    /**
     * Default no-arg constructor
     * 
     */
    public AdUserMembershipDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public AdUserMembershipDomain(final int membershipid, final int membershipPricingId, final BigDecimal membershipPrice, final int userId, final int paymentStatusId, final String paymentStatus, final XMLGregorianCalendar effectiveDate, final XMLGregorianCalendar experiationDate, final int autopay, final int autopayWithdrawDate, final int createdby, final int lastupdateby, final List<TrMembershipAuthSubmitDomain> membershipAuthSubmit, final List<StMemPricingOptionsDomain> memPricingOption) {
        this.membershipid = membershipid;
        this.membershipPricingId = membershipPricingId;
        this.membershipPrice = membershipPrice;
        this.userId = userId;
        this.paymentStatusId = paymentStatusId;
        this.paymentStatus = paymentStatus;
        this.effectiveDate = effectiveDate;
        this.experiationDate = experiationDate;
        this.autopay = autopay;
        this.autopayWithdrawDate = autopayWithdrawDate;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
        this.membershipAuthSubmit = membershipAuthSubmit;
        this.memPricingOption = memPricingOption;
    }

    /**
     * Gets the value of the membershipid property.
     * 
     */
    public int getMembershipid() {
        return membershipid;
    }

    /**
     * Sets the value of the membershipid property.
     * 
     */
    public void setMembershipid(int value) {
        this.membershipid = value;
    }

    /**
     * Gets the value of the membershipPricingId property.
     * 
     */
    public int getMembershipPricingId() {
        return membershipPricingId;
    }

    /**
     * Sets the value of the membershipPricingId property.
     * 
     */
    public void setMembershipPricingId(int value) {
        this.membershipPricingId = value;
    }

    /**
     * Gets the value of the membershipPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getMembershipPrice() {
        return membershipPrice;
    }

    /**
     * Sets the value of the membershipPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setMembershipPrice(BigDecimal value) {
        this.membershipPrice = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     */
    public void setUserId(int value) {
        this.userId = value;
    }

    /**
     * Gets the value of the paymentStatusId property.
     * 
     */
    public int getPaymentStatusId() {
        return paymentStatusId;
    }

    /**
     * Sets the value of the paymentStatusId property.
     * 
     */
    public void setPaymentStatusId(int value) {
        this.paymentStatusId = value;
    }

    /**
     * Gets the value of the paymentStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPaymentStatus() {
        return paymentStatus;
    }

    /**
     * Sets the value of the paymentStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPaymentStatus(String value) {
        this.paymentStatus = value;
    }

    /**
     * Gets the value of the effectiveDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getEffectiveDate() {
        return effectiveDate;
    }

    /**
     * Sets the value of the effectiveDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEffectiveDate(XMLGregorianCalendar value) {
        this.effectiveDate = value;
    }

    /**
     * Gets the value of the experiationDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getExperiationDate() {
        return experiationDate;
    }

    /**
     * Sets the value of the experiationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setExperiationDate(XMLGregorianCalendar value) {
        this.experiationDate = value;
    }

    /**
     * Gets the value of the autopay property.
     * 
     */
    public int getAutopay() {
        return autopay;
    }

    /**
     * Sets the value of the autopay property.
     * 
     */
    public void setAutopay(int value) {
        this.autopay = value;
    }

    /**
     * Gets the value of the autopayWithdrawDate property.
     * 
     */
    public int getAutopayWithdrawDate() {
        return autopayWithdrawDate;
    }

    /**
     * Sets the value of the autopayWithdrawDate property.
     * 
     */
    public void setAutopayWithdrawDate(int value) {
        this.autopayWithdrawDate = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    /**
     * Gets the value of the membershipAuthSubmit property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the membershipAuthSubmit property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMembershipAuthSubmit().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrMembershipAuthSubmitDomain }
     * 
     * 
     */
    public List<TrMembershipAuthSubmitDomain> getMembershipAuthSubmit() {
        if (membershipAuthSubmit == null) {
            membershipAuthSubmit = new ArrayList<TrMembershipAuthSubmitDomain>();
        }
        return this.membershipAuthSubmit;
    }

    /**
     * Gets the value of the memPricingOption property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the memPricingOption property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMemPricingOption().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StMemPricingOptionsDomain }
     * 
     * 
     */
    public List<StMemPricingOptionsDomain> getMemPricingOption() {
        if (memPricingOption == null) {
            memPricingOption = new ArrayList<StMemPricingOptionsDomain>();
        }
        return this.memPricingOption;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theMembershipid;
            theMembershipid = this.getMembershipid();
            strategy.appendField(locator, this, "membershipid", buffer, theMembershipid);
        }
        {
            int theMembershipPricingId;
            theMembershipPricingId = this.getMembershipPricingId();
            strategy.appendField(locator, this, "membershipPricingId", buffer, theMembershipPricingId);
        }
        {
            BigDecimal theMembershipPrice;
            theMembershipPrice = this.getMembershipPrice();
            strategy.appendField(locator, this, "membershipPrice", buffer, theMembershipPrice);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            int thePaymentStatusId;
            thePaymentStatusId = this.getPaymentStatusId();
            strategy.appendField(locator, this, "paymentStatusId", buffer, thePaymentStatusId);
        }
        {
            String thePaymentStatus;
            thePaymentStatus = this.getPaymentStatus();
            strategy.appendField(locator, this, "paymentStatus", buffer, thePaymentStatus);
        }
        {
            XMLGregorianCalendar theEffectiveDate;
            theEffectiveDate = this.getEffectiveDate();
            strategy.appendField(locator, this, "effectiveDate", buffer, theEffectiveDate);
        }
        {
            XMLGregorianCalendar theExperiationDate;
            theExperiationDate = this.getExperiationDate();
            strategy.appendField(locator, this, "experiationDate", buffer, theExperiationDate);
        }
        {
            int theAutopay;
            theAutopay = this.getAutopay();
            strategy.appendField(locator, this, "autopay", buffer, theAutopay);
        }
        {
            int theAutopayWithdrawDate;
            theAutopayWithdrawDate = this.getAutopayWithdrawDate();
            strategy.appendField(locator, this, "autopayWithdrawDate", buffer, theAutopayWithdrawDate);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        {
            List<TrMembershipAuthSubmitDomain> theMembershipAuthSubmit;
            theMembershipAuthSubmit = this.getMembershipAuthSubmit();
            strategy.appendField(locator, this, "membershipAuthSubmit", buffer, theMembershipAuthSubmit);
        }
        {
            List<StMemPricingOptionsDomain> theMemPricingOption;
            theMemPricingOption = this.getMemPricingOption();
            strategy.appendField(locator, this, "memPricingOption", buffer, theMemPricingOption);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AdUserMembershipDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AdUserMembershipDomain that = ((AdUserMembershipDomain) object);
        {
            int lhsMembershipid;
            lhsMembershipid = this.getMembershipid();
            int rhsMembershipid;
            rhsMembershipid = that.getMembershipid();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "membershipid", lhsMembershipid), LocatorUtils.property(thatLocator, "membershipid", rhsMembershipid), lhsMembershipid, rhsMembershipid)) {
                return false;
            }
        }
        {
            int lhsMembershipPricingId;
            lhsMembershipPricingId = this.getMembershipPricingId();
            int rhsMembershipPricingId;
            rhsMembershipPricingId = that.getMembershipPricingId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "membershipPricingId", lhsMembershipPricingId), LocatorUtils.property(thatLocator, "membershipPricingId", rhsMembershipPricingId), lhsMembershipPricingId, rhsMembershipPricingId)) {
                return false;
            }
        }
        {
            BigDecimal lhsMembershipPrice;
            lhsMembershipPrice = this.getMembershipPrice();
            BigDecimal rhsMembershipPrice;
            rhsMembershipPrice = that.getMembershipPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "membershipPrice", lhsMembershipPrice), LocatorUtils.property(thatLocator, "membershipPrice", rhsMembershipPrice), lhsMembershipPrice, rhsMembershipPrice)) {
                return false;
            }
        }
        {
            int lhsUserId;
            lhsUserId = this.getUserId();
            int rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            int lhsPaymentStatusId;
            lhsPaymentStatusId = this.getPaymentStatusId();
            int rhsPaymentStatusId;
            rhsPaymentStatusId = that.getPaymentStatusId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentStatusId", lhsPaymentStatusId), LocatorUtils.property(thatLocator, "paymentStatusId", rhsPaymentStatusId), lhsPaymentStatusId, rhsPaymentStatusId)) {
                return false;
            }
        }
        {
            String lhsPaymentStatus;
            lhsPaymentStatus = this.getPaymentStatus();
            String rhsPaymentStatus;
            rhsPaymentStatus = that.getPaymentStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentStatus", lhsPaymentStatus), LocatorUtils.property(thatLocator, "paymentStatus", rhsPaymentStatus), lhsPaymentStatus, rhsPaymentStatus)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEffectiveDate;
            lhsEffectiveDate = this.getEffectiveDate();
            XMLGregorianCalendar rhsEffectiveDate;
            rhsEffectiveDate = that.getEffectiveDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "effectiveDate", lhsEffectiveDate), LocatorUtils.property(thatLocator, "effectiveDate", rhsEffectiveDate), lhsEffectiveDate, rhsEffectiveDate)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsExperiationDate;
            lhsExperiationDate = this.getExperiationDate();
            XMLGregorianCalendar rhsExperiationDate;
            rhsExperiationDate = that.getExperiationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "experiationDate", lhsExperiationDate), LocatorUtils.property(thatLocator, "experiationDate", rhsExperiationDate), lhsExperiationDate, rhsExperiationDate)) {
                return false;
            }
        }
        {
            int lhsAutopay;
            lhsAutopay = this.getAutopay();
            int rhsAutopay;
            rhsAutopay = that.getAutopay();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "autopay", lhsAutopay), LocatorUtils.property(thatLocator, "autopay", rhsAutopay), lhsAutopay, rhsAutopay)) {
                return false;
            }
        }
        {
            int lhsAutopayWithdrawDate;
            lhsAutopayWithdrawDate = this.getAutopayWithdrawDate();
            int rhsAutopayWithdrawDate;
            rhsAutopayWithdrawDate = that.getAutopayWithdrawDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "autopayWithdrawDate", lhsAutopayWithdrawDate), LocatorUtils.property(thatLocator, "autopayWithdrawDate", rhsAutopayWithdrawDate), lhsAutopayWithdrawDate, rhsAutopayWithdrawDate)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        {
            List<TrMembershipAuthSubmitDomain> lhsMembershipAuthSubmit;
            lhsMembershipAuthSubmit = this.getMembershipAuthSubmit();
            List<TrMembershipAuthSubmitDomain> rhsMembershipAuthSubmit;
            rhsMembershipAuthSubmit = that.getMembershipAuthSubmit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "membershipAuthSubmit", lhsMembershipAuthSubmit), LocatorUtils.property(thatLocator, "membershipAuthSubmit", rhsMembershipAuthSubmit), lhsMembershipAuthSubmit, rhsMembershipAuthSubmit)) {
                return false;
            }
        }
        {
            List<StMemPricingOptionsDomain> lhsMemPricingOption;
            lhsMemPricingOption = this.getMemPricingOption();
            List<StMemPricingOptionsDomain> rhsMemPricingOption;
            rhsMemPricingOption = that.getMemPricingOption();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "memPricingOption", lhsMemPricingOption), LocatorUtils.property(thatLocator, "memPricingOption", rhsMemPricingOption), lhsMemPricingOption, rhsMemPricingOption)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theMembershipid;
            theMembershipid = this.getMembershipid();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "membershipid", theMembershipid), currentHashCode, theMembershipid);
        }
        {
            int theMembershipPricingId;
            theMembershipPricingId = this.getMembershipPricingId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "membershipPricingId", theMembershipPricingId), currentHashCode, theMembershipPricingId);
        }
        {
            BigDecimal theMembershipPrice;
            theMembershipPrice = this.getMembershipPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "membershipPrice", theMembershipPrice), currentHashCode, theMembershipPrice);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            int thePaymentStatusId;
            thePaymentStatusId = this.getPaymentStatusId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentStatusId", thePaymentStatusId), currentHashCode, thePaymentStatusId);
        }
        {
            String thePaymentStatus;
            thePaymentStatus = this.getPaymentStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentStatus", thePaymentStatus), currentHashCode, thePaymentStatus);
        }
        {
            XMLGregorianCalendar theEffectiveDate;
            theEffectiveDate = this.getEffectiveDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "effectiveDate", theEffectiveDate), currentHashCode, theEffectiveDate);
        }
        {
            XMLGregorianCalendar theExperiationDate;
            theExperiationDate = this.getExperiationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "experiationDate", theExperiationDate), currentHashCode, theExperiationDate);
        }
        {
            int theAutopay;
            theAutopay = this.getAutopay();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "autopay", theAutopay), currentHashCode, theAutopay);
        }
        {
            int theAutopayWithdrawDate;
            theAutopayWithdrawDate = this.getAutopayWithdrawDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "autopayWithdrawDate", theAutopayWithdrawDate), currentHashCode, theAutopayWithdrawDate);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        {
            List<TrMembershipAuthSubmitDomain> theMembershipAuthSubmit;
            theMembershipAuthSubmit = this.getMembershipAuthSubmit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "membershipAuthSubmit", theMembershipAuthSubmit), currentHashCode, theMembershipAuthSubmit);
        }
        {
            List<StMemPricingOptionsDomain> theMemPricingOption;
            theMemPricingOption = this.getMemPricingOption();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "memPricingOption", theMemPricingOption), currentHashCode, theMemPricingOption);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof AdUserMembershipDomain) {
            final AdUserMembershipDomain copy = ((AdUserMembershipDomain) draftCopy);
            int sourceMembershipid;
            sourceMembershipid = this.getMembershipid();
            int copyMembershipid = strategy.copy(LocatorUtils.property(locator, "membershipid", sourceMembershipid), sourceMembershipid);
            copy.setMembershipid(copyMembershipid);
            int sourceMembershipPricingId;
            sourceMembershipPricingId = this.getMembershipPricingId();
            int copyMembershipPricingId = strategy.copy(LocatorUtils.property(locator, "membershipPricingId", sourceMembershipPricingId), sourceMembershipPricingId);
            copy.setMembershipPricingId(copyMembershipPricingId);
            if (this.membershipPrice!= null) {
                BigDecimal sourceMembershipPrice;
                sourceMembershipPrice = this.getMembershipPrice();
                BigDecimal copyMembershipPrice = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "membershipPrice", sourceMembershipPrice), sourceMembershipPrice));
                copy.setMembershipPrice(copyMembershipPrice);
            } else {
                copy.membershipPrice = null;
            }
            int sourceUserId;
            sourceUserId = this.getUserId();
            int copyUserId = strategy.copy(LocatorUtils.property(locator, "userId", sourceUserId), sourceUserId);
            copy.setUserId(copyUserId);
            int sourcePaymentStatusId;
            sourcePaymentStatusId = this.getPaymentStatusId();
            int copyPaymentStatusId = strategy.copy(LocatorUtils.property(locator, "paymentStatusId", sourcePaymentStatusId), sourcePaymentStatusId);
            copy.setPaymentStatusId(copyPaymentStatusId);
            if (this.paymentStatus!= null) {
                String sourcePaymentStatus;
                sourcePaymentStatus = this.getPaymentStatus();
                String copyPaymentStatus = ((String) strategy.copy(LocatorUtils.property(locator, "paymentStatus", sourcePaymentStatus), sourcePaymentStatus));
                copy.setPaymentStatus(copyPaymentStatus);
            } else {
                copy.paymentStatus = null;
            }
            if (this.effectiveDate!= null) {
                XMLGregorianCalendar sourceEffectiveDate;
                sourceEffectiveDate = this.getEffectiveDate();
                XMLGregorianCalendar copyEffectiveDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "effectiveDate", sourceEffectiveDate), sourceEffectiveDate));
                copy.setEffectiveDate(copyEffectiveDate);
            } else {
                copy.effectiveDate = null;
            }
            if (this.experiationDate!= null) {
                XMLGregorianCalendar sourceExperiationDate;
                sourceExperiationDate = this.getExperiationDate();
                XMLGregorianCalendar copyExperiationDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "experiationDate", sourceExperiationDate), sourceExperiationDate));
                copy.setExperiationDate(copyExperiationDate);
            } else {
                copy.experiationDate = null;
            }
            int sourceAutopay;
            sourceAutopay = this.getAutopay();
            int copyAutopay = strategy.copy(LocatorUtils.property(locator, "autopay", sourceAutopay), sourceAutopay);
            copy.setAutopay(copyAutopay);
            int sourceAutopayWithdrawDate;
            sourceAutopayWithdrawDate = this.getAutopayWithdrawDate();
            int copyAutopayWithdrawDate = strategy.copy(LocatorUtils.property(locator, "autopayWithdrawDate", sourceAutopayWithdrawDate), sourceAutopayWithdrawDate);
            copy.setAutopayWithdrawDate(copyAutopayWithdrawDate);
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
            if ((this.membershipAuthSubmit!= null)&&(!this.membershipAuthSubmit.isEmpty())) {
                List<TrMembershipAuthSubmitDomain> sourceMembershipAuthSubmit;
                sourceMembershipAuthSubmit = this.getMembershipAuthSubmit();
                @SuppressWarnings("unchecked")
                List<TrMembershipAuthSubmitDomain> copyMembershipAuthSubmit = ((List<TrMembershipAuthSubmitDomain> ) strategy.copy(LocatorUtils.property(locator, "membershipAuthSubmit", sourceMembershipAuthSubmit), sourceMembershipAuthSubmit));
                copy.membershipAuthSubmit = null;
                List<TrMembershipAuthSubmitDomain> uniqueMembershipAuthSubmitl = copy.getMembershipAuthSubmit();
                uniqueMembershipAuthSubmitl.addAll(copyMembershipAuthSubmit);
            } else {
                copy.membershipAuthSubmit = null;
            }
            if ((this.memPricingOption!= null)&&(!this.memPricingOption.isEmpty())) {
                List<StMemPricingOptionsDomain> sourceMemPricingOption;
                sourceMemPricingOption = this.getMemPricingOption();
                @SuppressWarnings("unchecked")
                List<StMemPricingOptionsDomain> copyMemPricingOption = ((List<StMemPricingOptionsDomain> ) strategy.copy(LocatorUtils.property(locator, "memPricingOption", sourceMemPricingOption), sourceMemPricingOption));
                copy.memPricingOption = null;
                List<StMemPricingOptionsDomain> uniqueMemPricingOptionl = copy.getMemPricingOption();
                uniqueMemPricingOptionl.addAll(copyMemPricingOption);
            } else {
                copy.memPricingOption = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new AdUserMembershipDomain();
    }

}
