//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for adUsersDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="adUsersDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="userId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="registerStatusId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="registerStatusCode">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="240"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="registerStatus" type="{http://domain.businessobjects.f9g4.com}adLookupValuesDomain"/>
 *         &lt;element name="userName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="240"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="password">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="firstname">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="240"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastname">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="240"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="companyname">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="aboutYou">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="4000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="companywebsite">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="logoimageurl">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="schoolawards">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="4000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="activeStatus">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="securityQuestion1">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="securityAnswer1">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="securityQuestion2">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="securityAnswer2">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="securityquestion3">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="securityAnswer3">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="taxid">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="20"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="overallRating">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *               &lt;minInclusive value="-3.402823e+038"/>
 *               &lt;maxInclusive value="3.402823e+038"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="langCode">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="10"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="userType">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="isTempPassword">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="yrsExp" type="{http://domain.businessobjects.f9g4.com}adLookupValuesDomain"/>
 *         &lt;element name="howDidYouHearAboutUs">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="2000"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="companiesWorked">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="2000"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="approverComments">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="2000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="adminRating">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *               &lt;minInclusive value="-3.402823e+038"/>
 *               &lt;maxInclusive value="3.402823e+038"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="profilename">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="240"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="useProfilename">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="profileScore" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="acceptedTermsCondition" type="{http://domain.businessobjects.f9g4.com}adAccepttermsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="activeUser" type="{http://domain.businessobjects.f9g4.com}adActiveUserDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="address" type="{http://domain.businessobjects.f9g4.com}adAddressDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="contacts" type="{http://domain.businessobjects.f9g4.com}adContactsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="UserLangs" type="{http://domain.businessobjects.f9g4.com}adUserLanguagesDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="userMembership" type="{http://domain.businessobjects.f9g4.com}adUserMembershipDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="useSkills" type="{http://domain.businessobjects.f9g4.com}adUserSkillsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="education" type="{http://domain.businessobjects.f9g4.com}adUserEducationsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="specialty" type="{http://domain.businessobjects.f9g4.com}adUserSpecialitiesDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="expertise" type="{http://domain.businessobjects.f9g4.com}adUserExpertisesDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="degAcc" type="{http://domain.businessobjects.f9g4.com}adUserDegaccsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="boards" type="{http://domain.businessobjects.f9g4.com}trBoardDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="messages" type="{http://domain.businessobjects.f9g4.com}trMessagesDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="paymentAuthSubmit" type="{http://domain.businessobjects.f9g4.com}trPaymentAuthSubmitDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="portfolio" type="{http://domain.businessobjects.f9g4.com}trPortfolioDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ratings" type="{http://domain.businessobjects.f9g4.com}trRatingsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="recentlyViewed" type="{http://domain.businessobjects.f9g4.com}trRecentlyViewedDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="referrals" type="{http://domain.businessobjects.f9g4.com}trReferralsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="salesTransactionDetails" type="{http://domain.businessobjects.f9g4.com}trSalesTransactionDetailsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="userDocuments" type="{http://domain.businessobjects.f9g4.com}adUserDocumentsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="userTypeDomain" type="{http://domain.businessobjects.f9g4.com}adLookupValuesDomain"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "adUsersDomain", propOrder = {
    "userId",
    "registerStatusId",
    "registerStatusCode",
    "registerStatus",
    "userName",
    "password",
    "firstname",
    "lastname",
    "companyname",
    "aboutYou",
    "companywebsite",
    "logoimageurl",
    "schoolawards",
    "activeStatus",
    "securityQuestion1",
    "securityAnswer1",
    "securityQuestion2",
    "securityAnswer2",
    "securityquestion3",
    "securityAnswer3",
    "taxid",
    "overallRating",
    "langCode",
    "createdby",
    "lastupdateby",
    "userType",
    "isTempPassword",
    "yrsExp",
    "howDidYouHearAboutUs",
    "companiesWorked",
    "approverComments",
    "adminRating",
    "profilename",
    "useProfilename",
    "profileScore",
    "acceptedTermsCondition",
    "activeUser",
    "address",
    "contacts",
    "userLangs",
    "userMembership",
    "useSkills",
    "education",
    "specialty",
    "expertise",
    "degAcc",
    "boards",
    "messages",
    "paymentAuthSubmit",
    "portfolio",
    "ratings",
    "recentlyViewed",
    "referrals",
    "salesTransactionDetails",
    "userDocuments",
    "userTypeDomain"
})
public class AdUsersDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int userId;
    protected int registerStatusId;
    @XmlElement(required = true)
    protected String registerStatusCode;
    @XmlElement(required = true)
    protected AdLookupValuesDomain registerStatus;
    @XmlElement(required = true)
    protected String userName;
    @XmlElement(required = true)
    protected String password;
    @XmlElement(required = true)
    protected String firstname;
    @XmlElement(required = true)
    protected String lastname;
    @XmlElement(required = true)
    protected String companyname;
    @XmlElement(required = true)
    protected String aboutYou;
    @XmlElement(required = true)
    protected String companywebsite;
    @XmlElement(required = true)
    protected String logoimageurl;
    @XmlElement(required = true)
    protected String schoolawards;
    @XmlElement(defaultValue = "0")
    protected int activeStatus;
    protected int securityQuestion1;
    @XmlElement(required = true)
    protected String securityAnswer1;
    protected int securityQuestion2;
    @XmlElement(required = true)
    protected String securityAnswer2;
    protected int securityquestion3;
    @XmlElement(required = true)
    protected String securityAnswer3;
    @XmlElement(required = true)
    protected String taxid;
    protected float overallRating;
    @XmlElement(required = true, defaultValue = "en-US")
    protected String langCode;
    protected int createdby;
    protected int lastupdateby;
    @XmlElement(required = true)
    protected String userType;
    @XmlElement(defaultValue = "0")
    protected int isTempPassword;
    @XmlElement(required = true)
    protected AdLookupValuesDomain yrsExp;
    @XmlElement(required = true)
    protected String howDidYouHearAboutUs;
    @XmlElement(required = true)
    protected String companiesWorked;
    @XmlElement(required = true)
    protected String approverComments;
    protected float adminRating;
    @XmlElement(required = true)
    protected String profilename;
    protected int useProfilename;
    protected int profileScore;
    protected List<AdAccepttermsDomain> acceptedTermsCondition;
    protected List<AdActiveUserDomain> activeUser;
    protected List<AdAddressDomain> address;
    protected List<AdContactsDomain> contacts;
    @XmlElement(name = "UserLangs")
    protected List<AdUserLanguagesDomain> userLangs;
    protected List<AdUserMembershipDomain> userMembership;
    protected List<AdUserSkillsDomain> useSkills;
    protected List<AdUserEducationsDomain> education;
    protected List<AdUserSpecialitiesDomain> specialty;
    protected List<AdUserExpertisesDomain> expertise;
    protected List<AdUserDegaccsDomain> degAcc;
    protected List<TrBoardDomain> boards;
    protected List<TrMessagesDomain> messages;
    protected List<TrPaymentAuthSubmitDomain> paymentAuthSubmit;
    protected List<TrPortfolioDomain> portfolio;
    protected List<TrRatingsDomain> ratings;
    protected List<TrRecentlyViewedDomain> recentlyViewed;
    protected List<TrReferralsDomain> referrals;
    protected List<TrSalesTransactionDetailsDomain> salesTransactionDetails;
    protected List<AdUserDocumentsDomain> userDocuments;
    @XmlElement(required = true)
    protected AdLookupValuesDomain userTypeDomain;

    /**
     * Default no-arg constructor
     * 
     */
    public AdUsersDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public AdUsersDomain(final int userId, final int registerStatusId, final String registerStatusCode, final AdLookupValuesDomain registerStatus, final String userName, final String password, final String firstname, final String lastname, final String companyname, final String aboutYou, final String companywebsite, final String logoimageurl, final String schoolawards, final int activeStatus, final int securityQuestion1, final String securityAnswer1, final int securityQuestion2, final String securityAnswer2, final int securityquestion3, final String securityAnswer3, final String taxid, final float overallRating, final String langCode, final int createdby, final int lastupdateby, final String userType, final int isTempPassword, final AdLookupValuesDomain yrsExp, final String howDidYouHearAboutUs, final String companiesWorked, final String approverComments, final float adminRating, final String profilename, final int useProfilename, final int profileScore, final List<AdAccepttermsDomain> acceptedTermsCondition, final List<AdActiveUserDomain> activeUser, final List<AdAddressDomain> address, final List<AdContactsDomain> contacts, final List<AdUserLanguagesDomain> userLangs, final List<AdUserMembershipDomain> userMembership, final List<AdUserSkillsDomain> useSkills, final List<AdUserEducationsDomain> education, final List<AdUserSpecialitiesDomain> specialty, final List<AdUserExpertisesDomain> expertise, final List<AdUserDegaccsDomain> degAcc, final List<TrBoardDomain> boards, final List<TrMessagesDomain> messages, final List<TrPaymentAuthSubmitDomain> paymentAuthSubmit, final List<TrPortfolioDomain> portfolio, final List<TrRatingsDomain> ratings, final List<TrRecentlyViewedDomain> recentlyViewed, final List<TrReferralsDomain> referrals, final List<TrSalesTransactionDetailsDomain> salesTransactionDetails, final List<AdUserDocumentsDomain> userDocuments, final AdLookupValuesDomain userTypeDomain) {
        this.userId = userId;
        this.registerStatusId = registerStatusId;
        this.registerStatusCode = registerStatusCode;
        this.registerStatus = registerStatus;
        this.userName = userName;
        this.password = password;
        this.firstname = firstname;
        this.lastname = lastname;
        this.companyname = companyname;
        this.aboutYou = aboutYou;
        this.companywebsite = companywebsite;
        this.logoimageurl = logoimageurl;
        this.schoolawards = schoolawards;
        this.activeStatus = activeStatus;
        this.securityQuestion1 = securityQuestion1;
        this.securityAnswer1 = securityAnswer1;
        this.securityQuestion2 = securityQuestion2;
        this.securityAnswer2 = securityAnswer2;
        this.securityquestion3 = securityquestion3;
        this.securityAnswer3 = securityAnswer3;
        this.taxid = taxid;
        this.overallRating = overallRating;
        this.langCode = langCode;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
        this.userType = userType;
        this.isTempPassword = isTempPassword;
        this.yrsExp = yrsExp;
        this.howDidYouHearAboutUs = howDidYouHearAboutUs;
        this.companiesWorked = companiesWorked;
        this.approverComments = approverComments;
        this.adminRating = adminRating;
        this.profilename = profilename;
        this.useProfilename = useProfilename;
        this.profileScore = profileScore;
        this.acceptedTermsCondition = acceptedTermsCondition;
        this.activeUser = activeUser;
        this.address = address;
        this.contacts = contacts;
        this.userLangs = userLangs;
        this.userMembership = userMembership;
        this.useSkills = useSkills;
        this.education = education;
        this.specialty = specialty;
        this.expertise = expertise;
        this.degAcc = degAcc;
        this.boards = boards;
        this.messages = messages;
        this.paymentAuthSubmit = paymentAuthSubmit;
        this.portfolio = portfolio;
        this.ratings = ratings;
        this.recentlyViewed = recentlyViewed;
        this.referrals = referrals;
        this.salesTransactionDetails = salesTransactionDetails;
        this.userDocuments = userDocuments;
        this.userTypeDomain = userTypeDomain;
    }

    /**
     * Gets the value of the userId property.
     * 
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     */
    public void setUserId(int value) {
        this.userId = value;
    }

    /**
     * Gets the value of the registerStatusId property.
     * 
     */
    public int getRegisterStatusId() {
        return registerStatusId;
    }

    /**
     * Sets the value of the registerStatusId property.
     * 
     */
    public void setRegisterStatusId(int value) {
        this.registerStatusId = value;
    }

    /**
     * Gets the value of the registerStatusCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRegisterStatusCode() {
        return registerStatusCode;
    }

    /**
     * Sets the value of the registerStatusCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRegisterStatusCode(String value) {
        this.registerStatusCode = value;
    }

    /**
     * Gets the value of the registerStatus property.
     * 
     * @return
     *     possible object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public AdLookupValuesDomain getRegisterStatus() {
        return registerStatus;
    }

    /**
     * Sets the value of the registerStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public void setRegisterStatus(AdLookupValuesDomain value) {
        this.registerStatus = value;
    }

    /**
     * Gets the value of the userName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserName() {
        return userName;
    }

    /**
     * Sets the value of the userName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserName(String value) {
        this.userName = value;
    }

    /**
     * Gets the value of the password property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPassword() {
        return password;
    }

    /**
     * Sets the value of the password property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPassword(String value) {
        this.password = value;
    }

    /**
     * Gets the value of the firstname property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Sets the value of the firstname property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFirstname(String value) {
        this.firstname = value;
    }

    /**
     * Gets the value of the lastname property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Sets the value of the lastname property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLastname(String value) {
        this.lastname = value;
    }

    /**
     * Gets the value of the companyname property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCompanyname() {
        return companyname;
    }

    /**
     * Sets the value of the companyname property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCompanyname(String value) {
        this.companyname = value;
    }

    /**
     * Gets the value of the aboutYou property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAboutYou() {
        return aboutYou;
    }

    /**
     * Sets the value of the aboutYou property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAboutYou(String value) {
        this.aboutYou = value;
    }

    /**
     * Gets the value of the companywebsite property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCompanywebsite() {
        return companywebsite;
    }

    /**
     * Sets the value of the companywebsite property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCompanywebsite(String value) {
        this.companywebsite = value;
    }

    /**
     * Gets the value of the logoimageurl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLogoimageurl() {
        return logoimageurl;
    }

    /**
     * Sets the value of the logoimageurl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLogoimageurl(String value) {
        this.logoimageurl = value;
    }

    /**
     * Gets the value of the schoolawards property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSchoolawards() {
        return schoolawards;
    }

    /**
     * Sets the value of the schoolawards property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSchoolawards(String value) {
        this.schoolawards = value;
    }

    /**
     * Gets the value of the activeStatus property.
     * 
     */
    public int getActiveStatus() {
        return activeStatus;
    }

    /**
     * Sets the value of the activeStatus property.
     * 
     */
    public void setActiveStatus(int value) {
        this.activeStatus = value;
    }

    /**
     * Gets the value of the securityQuestion1 property.
     * 
     */
    public int getSecurityQuestion1() {
        return securityQuestion1;
    }

    /**
     * Sets the value of the securityQuestion1 property.
     * 
     */
    public void setSecurityQuestion1(int value) {
        this.securityQuestion1 = value;
    }

    /**
     * Gets the value of the securityAnswer1 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSecurityAnswer1() {
        return securityAnswer1;
    }

    /**
     * Sets the value of the securityAnswer1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSecurityAnswer1(String value) {
        this.securityAnswer1 = value;
    }

    /**
     * Gets the value of the securityQuestion2 property.
     * 
     */
    public int getSecurityQuestion2() {
        return securityQuestion2;
    }

    /**
     * Sets the value of the securityQuestion2 property.
     * 
     */
    public void setSecurityQuestion2(int value) {
        this.securityQuestion2 = value;
    }

    /**
     * Gets the value of the securityAnswer2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSecurityAnswer2() {
        return securityAnswer2;
    }

    /**
     * Sets the value of the securityAnswer2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSecurityAnswer2(String value) {
        this.securityAnswer2 = value;
    }

    /**
     * Gets the value of the securityquestion3 property.
     * 
     */
    public int getSecurityquestion3() {
        return securityquestion3;
    }

    /**
     * Sets the value of the securityquestion3 property.
     * 
     */
    public void setSecurityquestion3(int value) {
        this.securityquestion3 = value;
    }

    /**
     * Gets the value of the securityAnswer3 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSecurityAnswer3() {
        return securityAnswer3;
    }

    /**
     * Sets the value of the securityAnswer3 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSecurityAnswer3(String value) {
        this.securityAnswer3 = value;
    }

    /**
     * Gets the value of the taxid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTaxid() {
        return taxid;
    }

    /**
     * Sets the value of the taxid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTaxid(String value) {
        this.taxid = value;
    }

    /**
     * Gets the value of the overallRating property.
     * 
     */
    public float getOverallRating() {
        return overallRating;
    }

    /**
     * Sets the value of the overallRating property.
     * 
     */
    public void setOverallRating(float value) {
        this.overallRating = value;
    }

    /**
     * Gets the value of the langCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLangCode() {
        return langCode;
    }

    /**
     * Sets the value of the langCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLangCode(String value) {
        this.langCode = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    /**
     * Gets the value of the userType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserType() {
        return userType;
    }

    /**
     * Sets the value of the userType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserType(String value) {
        this.userType = value;
    }

    /**
     * Gets the value of the isTempPassword property.
     * 
     */
    public int getIsTempPassword() {
        return isTempPassword;
    }

    /**
     * Sets the value of the isTempPassword property.
     * 
     */
    public void setIsTempPassword(int value) {
        this.isTempPassword = value;
    }

    /**
     * Gets the value of the yrsExp property.
     * 
     * @return
     *     possible object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public AdLookupValuesDomain getYrsExp() {
        return yrsExp;
    }

    /**
     * Sets the value of the yrsExp property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public void setYrsExp(AdLookupValuesDomain value) {
        this.yrsExp = value;
    }

    /**
     * Gets the value of the howDidYouHearAboutUs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHowDidYouHearAboutUs() {
        return howDidYouHearAboutUs;
    }

    /**
     * Sets the value of the howDidYouHearAboutUs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHowDidYouHearAboutUs(String value) {
        this.howDidYouHearAboutUs = value;
    }

    /**
     * Gets the value of the companiesWorked property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCompaniesWorked() {
        return companiesWorked;
    }

    /**
     * Sets the value of the companiesWorked property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCompaniesWorked(String value) {
        this.companiesWorked = value;
    }

    /**
     * Gets the value of the approverComments property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getApproverComments() {
        return approverComments;
    }

    /**
     * Sets the value of the approverComments property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setApproverComments(String value) {
        this.approverComments = value;
    }

    /**
     * Gets the value of the adminRating property.
     * 
     */
    public float getAdminRating() {
        return adminRating;
    }

    /**
     * Sets the value of the adminRating property.
     * 
     */
    public void setAdminRating(float value) {
        this.adminRating = value;
    }

    /**
     * Gets the value of the profilename property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProfilename() {
        return profilename;
    }

    /**
     * Sets the value of the profilename property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProfilename(String value) {
        this.profilename = value;
    }

    /**
     * Gets the value of the useProfilename property.
     * 
     */
    public int getUseProfilename() {
        return useProfilename;
    }

    /**
     * Sets the value of the useProfilename property.
     * 
     */
    public void setUseProfilename(int value) {
        this.useProfilename = value;
    }

    /**
     * Gets the value of the profileScore property.
     * 
     */
    public int getProfileScore() {
        return profileScore;
    }

    /**
     * Sets the value of the profileScore property.
     * 
     */
    public void setProfileScore(int value) {
        this.profileScore = value;
    }

    /**
     * Gets the value of the acceptedTermsCondition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the acceptedTermsCondition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAcceptedTermsCondition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdAccepttermsDomain }
     * 
     * 
     */
    public List<AdAccepttermsDomain> getAcceptedTermsCondition() {
        if (acceptedTermsCondition == null) {
            acceptedTermsCondition = new ArrayList<AdAccepttermsDomain>();
        }
        return this.acceptedTermsCondition;
    }

    /**
     * Gets the value of the activeUser property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the activeUser property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActiveUser().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdActiveUserDomain }
     * 
     * 
     */
    public List<AdActiveUserDomain> getActiveUser() {
        if (activeUser == null) {
            activeUser = new ArrayList<AdActiveUserDomain>();
        }
        return this.activeUser;
    }

    /**
     * Gets the value of the address property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the address property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddress().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdAddressDomain }
     * 
     * 
     */
    public List<AdAddressDomain> getAddress() {
        if (address == null) {
            address = new ArrayList<AdAddressDomain>();
        }
        return this.address;
    }

    /**
     * Gets the value of the contacts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the contacts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContacts().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdContactsDomain }
     * 
     * 
     */
    public List<AdContactsDomain> getContacts() {
        if (contacts == null) {
            contacts = new ArrayList<AdContactsDomain>();
        }
        return this.contacts;
    }

    /**
     * Gets the value of the userLangs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the userLangs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUserLangs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdUserLanguagesDomain }
     * 
     * 
     */
    public List<AdUserLanguagesDomain> getUserLangs() {
        if (userLangs == null) {
            userLangs = new ArrayList<AdUserLanguagesDomain>();
        }
        return this.userLangs;
    }

    /**
     * Gets the value of the userMembership property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the userMembership property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUserMembership().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdUserMembershipDomain }
     * 
     * 
     */
    public List<AdUserMembershipDomain> getUserMembership() {
        if (userMembership == null) {
            userMembership = new ArrayList<AdUserMembershipDomain>();
        }
        return this.userMembership;
    }

    /**
     * Gets the value of the useSkills property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the useSkills property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUseSkills().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdUserSkillsDomain }
     * 
     * 
     */
    public List<AdUserSkillsDomain> getUseSkills() {
        if (useSkills == null) {
            useSkills = new ArrayList<AdUserSkillsDomain>();
        }
        return this.useSkills;
    }

    /**
     * Gets the value of the education property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the education property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEducation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdUserEducationsDomain }
     * 
     * 
     */
    public List<AdUserEducationsDomain> getEducation() {
        if (education == null) {
            education = new ArrayList<AdUserEducationsDomain>();
        }
        return this.education;
    }

    /**
     * Gets the value of the specialty property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the specialty property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSpecialty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdUserSpecialitiesDomain }
     * 
     * 
     */
    public List<AdUserSpecialitiesDomain> getSpecialty() {
        if (specialty == null) {
            specialty = new ArrayList<AdUserSpecialitiesDomain>();
        }
        return this.specialty;
    }

    /**
     * Gets the value of the expertise property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the expertise property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExpertise().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdUserExpertisesDomain }
     * 
     * 
     */
    public List<AdUserExpertisesDomain> getExpertise() {
        if (expertise == null) {
            expertise = new ArrayList<AdUserExpertisesDomain>();
        }
        return this.expertise;
    }

    /**
     * Gets the value of the degAcc property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the degAcc property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDegAcc().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdUserDegaccsDomain }
     * 
     * 
     */
    public List<AdUserDegaccsDomain> getDegAcc() {
        if (degAcc == null) {
            degAcc = new ArrayList<AdUserDegaccsDomain>();
        }
        return this.degAcc;
    }

    /**
     * Gets the value of the boards property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the boards property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBoards().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrBoardDomain }
     * 
     * 
     */
    public List<TrBoardDomain> getBoards() {
        if (boards == null) {
            boards = new ArrayList<TrBoardDomain>();
        }
        return this.boards;
    }

    /**
     * Gets the value of the messages property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the messages property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMessages().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrMessagesDomain }
     * 
     * 
     */
    public List<TrMessagesDomain> getMessages() {
        if (messages == null) {
            messages = new ArrayList<TrMessagesDomain>();
        }
        return this.messages;
    }

    /**
     * Gets the value of the paymentAuthSubmit property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the paymentAuthSubmit property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPaymentAuthSubmit().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrPaymentAuthSubmitDomain }
     * 
     * 
     */
    public List<TrPaymentAuthSubmitDomain> getPaymentAuthSubmit() {
        if (paymentAuthSubmit == null) {
            paymentAuthSubmit = new ArrayList<TrPaymentAuthSubmitDomain>();
        }
        return this.paymentAuthSubmit;
    }

    /**
     * Gets the value of the portfolio property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the portfolio property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPortfolio().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrPortfolioDomain }
     * 
     * 
     */
    public List<TrPortfolioDomain> getPortfolio() {
        if (portfolio == null) {
            portfolio = new ArrayList<TrPortfolioDomain>();
        }
        return this.portfolio;
    }

    /**
     * Gets the value of the ratings property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ratings property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRatings().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrRatingsDomain }
     * 
     * 
     */
    public List<TrRatingsDomain> getRatings() {
        if (ratings == null) {
            ratings = new ArrayList<TrRatingsDomain>();
        }
        return this.ratings;
    }

    /**
     * Gets the value of the recentlyViewed property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the recentlyViewed property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRecentlyViewed().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrRecentlyViewedDomain }
     * 
     * 
     */
    public List<TrRecentlyViewedDomain> getRecentlyViewed() {
        if (recentlyViewed == null) {
            recentlyViewed = new ArrayList<TrRecentlyViewedDomain>();
        }
        return this.recentlyViewed;
    }

    /**
     * Gets the value of the referrals property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the referrals property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReferrals().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrReferralsDomain }
     * 
     * 
     */
    public List<TrReferralsDomain> getReferrals() {
        if (referrals == null) {
            referrals = new ArrayList<TrReferralsDomain>();
        }
        return this.referrals;
    }

    /**
     * Gets the value of the salesTransactionDetails property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the salesTransactionDetails property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSalesTransactionDetails().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrSalesTransactionDetailsDomain }
     * 
     * 
     */
    public List<TrSalesTransactionDetailsDomain> getSalesTransactionDetails() {
        if (salesTransactionDetails == null) {
            salesTransactionDetails = new ArrayList<TrSalesTransactionDetailsDomain>();
        }
        return this.salesTransactionDetails;
    }

    /**
     * Gets the value of the userDocuments property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the userDocuments property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUserDocuments().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AdUserDocumentsDomain }
     * 
     * 
     */
    public List<AdUserDocumentsDomain> getUserDocuments() {
        if (userDocuments == null) {
            userDocuments = new ArrayList<AdUserDocumentsDomain>();
        }
        return this.userDocuments;
    }

    /**
     * Gets the value of the userTypeDomain property.
     * 
     * @return
     *     possible object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public AdLookupValuesDomain getUserTypeDomain() {
        return userTypeDomain;
    }

    /**
     * Sets the value of the userTypeDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public void setUserTypeDomain(AdLookupValuesDomain value) {
        this.userTypeDomain = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            int theRegisterStatusId;
            theRegisterStatusId = this.getRegisterStatusId();
            strategy.appendField(locator, this, "registerStatusId", buffer, theRegisterStatusId);
        }
        {
            String theRegisterStatusCode;
            theRegisterStatusCode = this.getRegisterStatusCode();
            strategy.appendField(locator, this, "registerStatusCode", buffer, theRegisterStatusCode);
        }
        {
            AdLookupValuesDomain theRegisterStatus;
            theRegisterStatus = this.getRegisterStatus();
            strategy.appendField(locator, this, "registerStatus", buffer, theRegisterStatus);
        }
        {
            String theUserName;
            theUserName = this.getUserName();
            strategy.appendField(locator, this, "userName", buffer, theUserName);
        }
        {
            String thePassword;
            thePassword = this.getPassword();
            strategy.appendField(locator, this, "password", buffer, thePassword);
        }
        {
            String theFirstname;
            theFirstname = this.getFirstname();
            strategy.appendField(locator, this, "firstname", buffer, theFirstname);
        }
        {
            String theLastname;
            theLastname = this.getLastname();
            strategy.appendField(locator, this, "lastname", buffer, theLastname);
        }
        {
            String theCompanyname;
            theCompanyname = this.getCompanyname();
            strategy.appendField(locator, this, "companyname", buffer, theCompanyname);
        }
        {
            String theAboutYou;
            theAboutYou = this.getAboutYou();
            strategy.appendField(locator, this, "aboutYou", buffer, theAboutYou);
        }
        {
            String theCompanywebsite;
            theCompanywebsite = this.getCompanywebsite();
            strategy.appendField(locator, this, "companywebsite", buffer, theCompanywebsite);
        }
        {
            String theLogoimageurl;
            theLogoimageurl = this.getLogoimageurl();
            strategy.appendField(locator, this, "logoimageurl", buffer, theLogoimageurl);
        }
        {
            String theSchoolawards;
            theSchoolawards = this.getSchoolawards();
            strategy.appendField(locator, this, "schoolawards", buffer, theSchoolawards);
        }
        {
            int theActiveStatus;
            theActiveStatus = this.getActiveStatus();
            strategy.appendField(locator, this, "activeStatus", buffer, theActiveStatus);
        }
        {
            int theSecurityQuestion1;
            theSecurityQuestion1 = this.getSecurityQuestion1();
            strategy.appendField(locator, this, "securityQuestion1", buffer, theSecurityQuestion1);
        }
        {
            String theSecurityAnswer1;
            theSecurityAnswer1 = this.getSecurityAnswer1();
            strategy.appendField(locator, this, "securityAnswer1", buffer, theSecurityAnswer1);
        }
        {
            int theSecurityQuestion2;
            theSecurityQuestion2 = this.getSecurityQuestion2();
            strategy.appendField(locator, this, "securityQuestion2", buffer, theSecurityQuestion2);
        }
        {
            String theSecurityAnswer2;
            theSecurityAnswer2 = this.getSecurityAnswer2();
            strategy.appendField(locator, this, "securityAnswer2", buffer, theSecurityAnswer2);
        }
        {
            int theSecurityquestion3;
            theSecurityquestion3 = this.getSecurityquestion3();
            strategy.appendField(locator, this, "securityquestion3", buffer, theSecurityquestion3);
        }
        {
            String theSecurityAnswer3;
            theSecurityAnswer3 = this.getSecurityAnswer3();
            strategy.appendField(locator, this, "securityAnswer3", buffer, theSecurityAnswer3);
        }
        {
            String theTaxid;
            theTaxid = this.getTaxid();
            strategy.appendField(locator, this, "taxid", buffer, theTaxid);
        }
        {
            float theOverallRating;
            theOverallRating = this.getOverallRating();
            strategy.appendField(locator, this, "overallRating", buffer, theOverallRating);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            strategy.appendField(locator, this, "langCode", buffer, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        {
            String theUserType;
            theUserType = this.getUserType();
            strategy.appendField(locator, this, "userType", buffer, theUserType);
        }
        {
            int theIsTempPassword;
            theIsTempPassword = this.getIsTempPassword();
            strategy.appendField(locator, this, "isTempPassword", buffer, theIsTempPassword);
        }
        {
            AdLookupValuesDomain theYrsExp;
            theYrsExp = this.getYrsExp();
            strategy.appendField(locator, this, "yrsExp", buffer, theYrsExp);
        }
        {
            String theHowDidYouHearAboutUs;
            theHowDidYouHearAboutUs = this.getHowDidYouHearAboutUs();
            strategy.appendField(locator, this, "howDidYouHearAboutUs", buffer, theHowDidYouHearAboutUs);
        }
        {
            String theCompaniesWorked;
            theCompaniesWorked = this.getCompaniesWorked();
            strategy.appendField(locator, this, "companiesWorked", buffer, theCompaniesWorked);
        }
        {
            String theApproverComments;
            theApproverComments = this.getApproverComments();
            strategy.appendField(locator, this, "approverComments", buffer, theApproverComments);
        }
        {
            float theAdminRating;
            theAdminRating = this.getAdminRating();
            strategy.appendField(locator, this, "adminRating", buffer, theAdminRating);
        }
        {
            String theProfilename;
            theProfilename = this.getProfilename();
            strategy.appendField(locator, this, "profilename", buffer, theProfilename);
        }
        {
            int theUseProfilename;
            theUseProfilename = this.getUseProfilename();
            strategy.appendField(locator, this, "useProfilename", buffer, theUseProfilename);
        }
        {
            int theProfileScore;
            theProfileScore = this.getProfileScore();
            strategy.appendField(locator, this, "profileScore", buffer, theProfileScore);
        }
        {
            List<AdAccepttermsDomain> theAcceptedTermsCondition;
            theAcceptedTermsCondition = this.getAcceptedTermsCondition();
            strategy.appendField(locator, this, "acceptedTermsCondition", buffer, theAcceptedTermsCondition);
        }
        {
            List<AdActiveUserDomain> theActiveUser;
            theActiveUser = this.getActiveUser();
            strategy.appendField(locator, this, "activeUser", buffer, theActiveUser);
        }
        {
            List<AdAddressDomain> theAddress;
            theAddress = this.getAddress();
            strategy.appendField(locator, this, "address", buffer, theAddress);
        }
        {
            List<AdContactsDomain> theContacts;
            theContacts = this.getContacts();
            strategy.appendField(locator, this, "contacts", buffer, theContacts);
        }
        {
            List<AdUserLanguagesDomain> theUserLangs;
            theUserLangs = this.getUserLangs();
            strategy.appendField(locator, this, "userLangs", buffer, theUserLangs);
        }
        {
            List<AdUserMembershipDomain> theUserMembership;
            theUserMembership = this.getUserMembership();
            strategy.appendField(locator, this, "userMembership", buffer, theUserMembership);
        }
        {
            List<AdUserSkillsDomain> theUseSkills;
            theUseSkills = this.getUseSkills();
            strategy.appendField(locator, this, "useSkills", buffer, theUseSkills);
        }
        {
            List<AdUserEducationsDomain> theEducation;
            theEducation = this.getEducation();
            strategy.appendField(locator, this, "education", buffer, theEducation);
        }
        {
            List<AdUserSpecialitiesDomain> theSpecialty;
            theSpecialty = this.getSpecialty();
            strategy.appendField(locator, this, "specialty", buffer, theSpecialty);
        }
        {
            List<AdUserExpertisesDomain> theExpertise;
            theExpertise = this.getExpertise();
            strategy.appendField(locator, this, "expertise", buffer, theExpertise);
        }
        {
            List<AdUserDegaccsDomain> theDegAcc;
            theDegAcc = this.getDegAcc();
            strategy.appendField(locator, this, "degAcc", buffer, theDegAcc);
        }
        {
            List<TrBoardDomain> theBoards;
            theBoards = this.getBoards();
            strategy.appendField(locator, this, "boards", buffer, theBoards);
        }
        {
            List<TrMessagesDomain> theMessages;
            theMessages = this.getMessages();
            strategy.appendField(locator, this, "messages", buffer, theMessages);
        }
        {
            List<TrPaymentAuthSubmitDomain> thePaymentAuthSubmit;
            thePaymentAuthSubmit = this.getPaymentAuthSubmit();
            strategy.appendField(locator, this, "paymentAuthSubmit", buffer, thePaymentAuthSubmit);
        }
        {
            List<TrPortfolioDomain> thePortfolio;
            thePortfolio = this.getPortfolio();
            strategy.appendField(locator, this, "portfolio", buffer, thePortfolio);
        }
        {
            List<TrRatingsDomain> theRatings;
            theRatings = this.getRatings();
            strategy.appendField(locator, this, "ratings", buffer, theRatings);
        }
        {
            List<TrRecentlyViewedDomain> theRecentlyViewed;
            theRecentlyViewed = this.getRecentlyViewed();
            strategy.appendField(locator, this, "recentlyViewed", buffer, theRecentlyViewed);
        }
        {
            List<TrReferralsDomain> theReferrals;
            theReferrals = this.getReferrals();
            strategy.appendField(locator, this, "referrals", buffer, theReferrals);
        }
        {
            List<TrSalesTransactionDetailsDomain> theSalesTransactionDetails;
            theSalesTransactionDetails = this.getSalesTransactionDetails();
            strategy.appendField(locator, this, "salesTransactionDetails", buffer, theSalesTransactionDetails);
        }
        {
            List<AdUserDocumentsDomain> theUserDocuments;
            theUserDocuments = this.getUserDocuments();
            strategy.appendField(locator, this, "userDocuments", buffer, theUserDocuments);
        }
        {
            AdLookupValuesDomain theUserTypeDomain;
            theUserTypeDomain = this.getUserTypeDomain();
            strategy.appendField(locator, this, "userTypeDomain", buffer, theUserTypeDomain);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AdUsersDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AdUsersDomain that = ((AdUsersDomain) object);
        {
            int lhsUserId;
            lhsUserId = this.getUserId();
            int rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            int lhsRegisterStatusId;
            lhsRegisterStatusId = this.getRegisterStatusId();
            int rhsRegisterStatusId;
            rhsRegisterStatusId = that.getRegisterStatusId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "registerStatusId", lhsRegisterStatusId), LocatorUtils.property(thatLocator, "registerStatusId", rhsRegisterStatusId), lhsRegisterStatusId, rhsRegisterStatusId)) {
                return false;
            }
        }
        {
            String lhsRegisterStatusCode;
            lhsRegisterStatusCode = this.getRegisterStatusCode();
            String rhsRegisterStatusCode;
            rhsRegisterStatusCode = that.getRegisterStatusCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "registerStatusCode", lhsRegisterStatusCode), LocatorUtils.property(thatLocator, "registerStatusCode", rhsRegisterStatusCode), lhsRegisterStatusCode, rhsRegisterStatusCode)) {
                return false;
            }
        }
        {
            AdLookupValuesDomain lhsRegisterStatus;
            lhsRegisterStatus = this.getRegisterStatus();
            AdLookupValuesDomain rhsRegisterStatus;
            rhsRegisterStatus = that.getRegisterStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "registerStatus", lhsRegisterStatus), LocatorUtils.property(thatLocator, "registerStatus", rhsRegisterStatus), lhsRegisterStatus, rhsRegisterStatus)) {
                return false;
            }
        }
        {
            String lhsUserName;
            lhsUserName = this.getUserName();
            String rhsUserName;
            rhsUserName = that.getUserName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userName", lhsUserName), LocatorUtils.property(thatLocator, "userName", rhsUserName), lhsUserName, rhsUserName)) {
                return false;
            }
        }
        {
            String lhsPassword;
            lhsPassword = this.getPassword();
            String rhsPassword;
            rhsPassword = that.getPassword();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "password", lhsPassword), LocatorUtils.property(thatLocator, "password", rhsPassword), lhsPassword, rhsPassword)) {
                return false;
            }
        }
        {
            String lhsFirstname;
            lhsFirstname = this.getFirstname();
            String rhsFirstname;
            rhsFirstname = that.getFirstname();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "firstname", lhsFirstname), LocatorUtils.property(thatLocator, "firstname", rhsFirstname), lhsFirstname, rhsFirstname)) {
                return false;
            }
        }
        {
            String lhsLastname;
            lhsLastname = this.getLastname();
            String rhsLastname;
            rhsLastname = that.getLastname();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastname", lhsLastname), LocatorUtils.property(thatLocator, "lastname", rhsLastname), lhsLastname, rhsLastname)) {
                return false;
            }
        }
        {
            String lhsCompanyname;
            lhsCompanyname = this.getCompanyname();
            String rhsCompanyname;
            rhsCompanyname = that.getCompanyname();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "companyname", lhsCompanyname), LocatorUtils.property(thatLocator, "companyname", rhsCompanyname), lhsCompanyname, rhsCompanyname)) {
                return false;
            }
        }
        {
            String lhsAboutYou;
            lhsAboutYou = this.getAboutYou();
            String rhsAboutYou;
            rhsAboutYou = that.getAboutYou();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "aboutYou", lhsAboutYou), LocatorUtils.property(thatLocator, "aboutYou", rhsAboutYou), lhsAboutYou, rhsAboutYou)) {
                return false;
            }
        }
        {
            String lhsCompanywebsite;
            lhsCompanywebsite = this.getCompanywebsite();
            String rhsCompanywebsite;
            rhsCompanywebsite = that.getCompanywebsite();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "companywebsite", lhsCompanywebsite), LocatorUtils.property(thatLocator, "companywebsite", rhsCompanywebsite), lhsCompanywebsite, rhsCompanywebsite)) {
                return false;
            }
        }
        {
            String lhsLogoimageurl;
            lhsLogoimageurl = this.getLogoimageurl();
            String rhsLogoimageurl;
            rhsLogoimageurl = that.getLogoimageurl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "logoimageurl", lhsLogoimageurl), LocatorUtils.property(thatLocator, "logoimageurl", rhsLogoimageurl), lhsLogoimageurl, rhsLogoimageurl)) {
                return false;
            }
        }
        {
            String lhsSchoolawards;
            lhsSchoolawards = this.getSchoolawards();
            String rhsSchoolawards;
            rhsSchoolawards = that.getSchoolawards();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "schoolawards", lhsSchoolawards), LocatorUtils.property(thatLocator, "schoolawards", rhsSchoolawards), lhsSchoolawards, rhsSchoolawards)) {
                return false;
            }
        }
        {
            int lhsActiveStatus;
            lhsActiveStatus = this.getActiveStatus();
            int rhsActiveStatus;
            rhsActiveStatus = that.getActiveStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activeStatus", lhsActiveStatus), LocatorUtils.property(thatLocator, "activeStatus", rhsActiveStatus), lhsActiveStatus, rhsActiveStatus)) {
                return false;
            }
        }
        {
            int lhsSecurityQuestion1;
            lhsSecurityQuestion1 = this.getSecurityQuestion1();
            int rhsSecurityQuestion1;
            rhsSecurityQuestion1 = that.getSecurityQuestion1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "securityQuestion1", lhsSecurityQuestion1), LocatorUtils.property(thatLocator, "securityQuestion1", rhsSecurityQuestion1), lhsSecurityQuestion1, rhsSecurityQuestion1)) {
                return false;
            }
        }
        {
            String lhsSecurityAnswer1;
            lhsSecurityAnswer1 = this.getSecurityAnswer1();
            String rhsSecurityAnswer1;
            rhsSecurityAnswer1 = that.getSecurityAnswer1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "securityAnswer1", lhsSecurityAnswer1), LocatorUtils.property(thatLocator, "securityAnswer1", rhsSecurityAnswer1), lhsSecurityAnswer1, rhsSecurityAnswer1)) {
                return false;
            }
        }
        {
            int lhsSecurityQuestion2;
            lhsSecurityQuestion2 = this.getSecurityQuestion2();
            int rhsSecurityQuestion2;
            rhsSecurityQuestion2 = that.getSecurityQuestion2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "securityQuestion2", lhsSecurityQuestion2), LocatorUtils.property(thatLocator, "securityQuestion2", rhsSecurityQuestion2), lhsSecurityQuestion2, rhsSecurityQuestion2)) {
                return false;
            }
        }
        {
            String lhsSecurityAnswer2;
            lhsSecurityAnswer2 = this.getSecurityAnswer2();
            String rhsSecurityAnswer2;
            rhsSecurityAnswer2 = that.getSecurityAnswer2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "securityAnswer2", lhsSecurityAnswer2), LocatorUtils.property(thatLocator, "securityAnswer2", rhsSecurityAnswer2), lhsSecurityAnswer2, rhsSecurityAnswer2)) {
                return false;
            }
        }
        {
            int lhsSecurityquestion3;
            lhsSecurityquestion3 = this.getSecurityquestion3();
            int rhsSecurityquestion3;
            rhsSecurityquestion3 = that.getSecurityquestion3();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "securityquestion3", lhsSecurityquestion3), LocatorUtils.property(thatLocator, "securityquestion3", rhsSecurityquestion3), lhsSecurityquestion3, rhsSecurityquestion3)) {
                return false;
            }
        }
        {
            String lhsSecurityAnswer3;
            lhsSecurityAnswer3 = this.getSecurityAnswer3();
            String rhsSecurityAnswer3;
            rhsSecurityAnswer3 = that.getSecurityAnswer3();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "securityAnswer3", lhsSecurityAnswer3), LocatorUtils.property(thatLocator, "securityAnswer3", rhsSecurityAnswer3), lhsSecurityAnswer3, rhsSecurityAnswer3)) {
                return false;
            }
        }
        {
            String lhsTaxid;
            lhsTaxid = this.getTaxid();
            String rhsTaxid;
            rhsTaxid = that.getTaxid();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxid", lhsTaxid), LocatorUtils.property(thatLocator, "taxid", rhsTaxid), lhsTaxid, rhsTaxid)) {
                return false;
            }
        }
        {
            float lhsOverallRating;
            lhsOverallRating = this.getOverallRating();
            float rhsOverallRating;
            rhsOverallRating = that.getOverallRating();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "overallRating", lhsOverallRating), LocatorUtils.property(thatLocator, "overallRating", rhsOverallRating), lhsOverallRating, rhsOverallRating)) {
                return false;
            }
        }
        {
            String lhsLangCode;
            lhsLangCode = this.getLangCode();
            String rhsLangCode;
            rhsLangCode = that.getLangCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "langCode", lhsLangCode), LocatorUtils.property(thatLocator, "langCode", rhsLangCode), lhsLangCode, rhsLangCode)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        {
            String lhsUserType;
            lhsUserType = this.getUserType();
            String rhsUserType;
            rhsUserType = that.getUserType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userType", lhsUserType), LocatorUtils.property(thatLocator, "userType", rhsUserType), lhsUserType, rhsUserType)) {
                return false;
            }
        }
        {
            int lhsIsTempPassword;
            lhsIsTempPassword = this.getIsTempPassword();
            int rhsIsTempPassword;
            rhsIsTempPassword = that.getIsTempPassword();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isTempPassword", lhsIsTempPassword), LocatorUtils.property(thatLocator, "isTempPassword", rhsIsTempPassword), lhsIsTempPassword, rhsIsTempPassword)) {
                return false;
            }
        }
        {
            AdLookupValuesDomain lhsYrsExp;
            lhsYrsExp = this.getYrsExp();
            AdLookupValuesDomain rhsYrsExp;
            rhsYrsExp = that.getYrsExp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "yrsExp", lhsYrsExp), LocatorUtils.property(thatLocator, "yrsExp", rhsYrsExp), lhsYrsExp, rhsYrsExp)) {
                return false;
            }
        }
        {
            String lhsHowDidYouHearAboutUs;
            lhsHowDidYouHearAboutUs = this.getHowDidYouHearAboutUs();
            String rhsHowDidYouHearAboutUs;
            rhsHowDidYouHearAboutUs = that.getHowDidYouHearAboutUs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "howDidYouHearAboutUs", lhsHowDidYouHearAboutUs), LocatorUtils.property(thatLocator, "howDidYouHearAboutUs", rhsHowDidYouHearAboutUs), lhsHowDidYouHearAboutUs, rhsHowDidYouHearAboutUs)) {
                return false;
            }
        }
        {
            String lhsCompaniesWorked;
            lhsCompaniesWorked = this.getCompaniesWorked();
            String rhsCompaniesWorked;
            rhsCompaniesWorked = that.getCompaniesWorked();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "companiesWorked", lhsCompaniesWorked), LocatorUtils.property(thatLocator, "companiesWorked", rhsCompaniesWorked), lhsCompaniesWorked, rhsCompaniesWorked)) {
                return false;
            }
        }
        {
            String lhsApproverComments;
            lhsApproverComments = this.getApproverComments();
            String rhsApproverComments;
            rhsApproverComments = that.getApproverComments();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "approverComments", lhsApproverComments), LocatorUtils.property(thatLocator, "approverComments", rhsApproverComments), lhsApproverComments, rhsApproverComments)) {
                return false;
            }
        }
        {
            float lhsAdminRating;
            lhsAdminRating = this.getAdminRating();
            float rhsAdminRating;
            rhsAdminRating = that.getAdminRating();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "adminRating", lhsAdminRating), LocatorUtils.property(thatLocator, "adminRating", rhsAdminRating), lhsAdminRating, rhsAdminRating)) {
                return false;
            }
        }
        {
            String lhsProfilename;
            lhsProfilename = this.getProfilename();
            String rhsProfilename;
            rhsProfilename = that.getProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "profilename", lhsProfilename), LocatorUtils.property(thatLocator, "profilename", rhsProfilename), lhsProfilename, rhsProfilename)) {
                return false;
            }
        }
        {
            int lhsUseProfilename;
            lhsUseProfilename = this.getUseProfilename();
            int rhsUseProfilename;
            rhsUseProfilename = that.getUseProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "useProfilename", lhsUseProfilename), LocatorUtils.property(thatLocator, "useProfilename", rhsUseProfilename), lhsUseProfilename, rhsUseProfilename)) {
                return false;
            }
        }
        {
            int lhsProfileScore;
            lhsProfileScore = this.getProfileScore();
            int rhsProfileScore;
            rhsProfileScore = that.getProfileScore();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "profileScore", lhsProfileScore), LocatorUtils.property(thatLocator, "profileScore", rhsProfileScore), lhsProfileScore, rhsProfileScore)) {
                return false;
            }
        }
        {
            List<AdAccepttermsDomain> lhsAcceptedTermsCondition;
            lhsAcceptedTermsCondition = this.getAcceptedTermsCondition();
            List<AdAccepttermsDomain> rhsAcceptedTermsCondition;
            rhsAcceptedTermsCondition = that.getAcceptedTermsCondition();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptedTermsCondition", lhsAcceptedTermsCondition), LocatorUtils.property(thatLocator, "acceptedTermsCondition", rhsAcceptedTermsCondition), lhsAcceptedTermsCondition, rhsAcceptedTermsCondition)) {
                return false;
            }
        }
        {
            List<AdActiveUserDomain> lhsActiveUser;
            lhsActiveUser = this.getActiveUser();
            List<AdActiveUserDomain> rhsActiveUser;
            rhsActiveUser = that.getActiveUser();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activeUser", lhsActiveUser), LocatorUtils.property(thatLocator, "activeUser", rhsActiveUser), lhsActiveUser, rhsActiveUser)) {
                return false;
            }
        }
        {
            List<AdAddressDomain> lhsAddress;
            lhsAddress = this.getAddress();
            List<AdAddressDomain> rhsAddress;
            rhsAddress = that.getAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
                return false;
            }
        }
        {
            List<AdContactsDomain> lhsContacts;
            lhsContacts = this.getContacts();
            List<AdContactsDomain> rhsContacts;
            rhsContacts = that.getContacts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contacts", lhsContacts), LocatorUtils.property(thatLocator, "contacts", rhsContacts), lhsContacts, rhsContacts)) {
                return false;
            }
        }
        {
            List<AdUserLanguagesDomain> lhsUserLangs;
            lhsUserLangs = this.getUserLangs();
            List<AdUserLanguagesDomain> rhsUserLangs;
            rhsUserLangs = that.getUserLangs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userLangs", lhsUserLangs), LocatorUtils.property(thatLocator, "userLangs", rhsUserLangs), lhsUserLangs, rhsUserLangs)) {
                return false;
            }
        }
        {
            List<AdUserMembershipDomain> lhsUserMembership;
            lhsUserMembership = this.getUserMembership();
            List<AdUserMembershipDomain> rhsUserMembership;
            rhsUserMembership = that.getUserMembership();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userMembership", lhsUserMembership), LocatorUtils.property(thatLocator, "userMembership", rhsUserMembership), lhsUserMembership, rhsUserMembership)) {
                return false;
            }
        }
        {
            List<AdUserSkillsDomain> lhsUseSkills;
            lhsUseSkills = this.getUseSkills();
            List<AdUserSkillsDomain> rhsUseSkills;
            rhsUseSkills = that.getUseSkills();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "useSkills", lhsUseSkills), LocatorUtils.property(thatLocator, "useSkills", rhsUseSkills), lhsUseSkills, rhsUseSkills)) {
                return false;
            }
        }
        {
            List<AdUserEducationsDomain> lhsEducation;
            lhsEducation = this.getEducation();
            List<AdUserEducationsDomain> rhsEducation;
            rhsEducation = that.getEducation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "education", lhsEducation), LocatorUtils.property(thatLocator, "education", rhsEducation), lhsEducation, rhsEducation)) {
                return false;
            }
        }
        {
            List<AdUserSpecialitiesDomain> lhsSpecialty;
            lhsSpecialty = this.getSpecialty();
            List<AdUserSpecialitiesDomain> rhsSpecialty;
            rhsSpecialty = that.getSpecialty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "specialty", lhsSpecialty), LocatorUtils.property(thatLocator, "specialty", rhsSpecialty), lhsSpecialty, rhsSpecialty)) {
                return false;
            }
        }
        {
            List<AdUserExpertisesDomain> lhsExpertise;
            lhsExpertise = this.getExpertise();
            List<AdUserExpertisesDomain> rhsExpertise;
            rhsExpertise = that.getExpertise();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expertise", lhsExpertise), LocatorUtils.property(thatLocator, "expertise", rhsExpertise), lhsExpertise, rhsExpertise)) {
                return false;
            }
        }
        {
            List<AdUserDegaccsDomain> lhsDegAcc;
            lhsDegAcc = this.getDegAcc();
            List<AdUserDegaccsDomain> rhsDegAcc;
            rhsDegAcc = that.getDegAcc();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "degAcc", lhsDegAcc), LocatorUtils.property(thatLocator, "degAcc", rhsDegAcc), lhsDegAcc, rhsDegAcc)) {
                return false;
            }
        }
        {
            List<TrBoardDomain> lhsBoards;
            lhsBoards = this.getBoards();
            List<TrBoardDomain> rhsBoards;
            rhsBoards = that.getBoards();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boards", lhsBoards), LocatorUtils.property(thatLocator, "boards", rhsBoards), lhsBoards, rhsBoards)) {
                return false;
            }
        }
        {
            List<TrMessagesDomain> lhsMessages;
            lhsMessages = this.getMessages();
            List<TrMessagesDomain> rhsMessages;
            rhsMessages = that.getMessages();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messages", lhsMessages), LocatorUtils.property(thatLocator, "messages", rhsMessages), lhsMessages, rhsMessages)) {
                return false;
            }
        }
        {
            List<TrPaymentAuthSubmitDomain> lhsPaymentAuthSubmit;
            lhsPaymentAuthSubmit = this.getPaymentAuthSubmit();
            List<TrPaymentAuthSubmitDomain> rhsPaymentAuthSubmit;
            rhsPaymentAuthSubmit = that.getPaymentAuthSubmit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentAuthSubmit", lhsPaymentAuthSubmit), LocatorUtils.property(thatLocator, "paymentAuthSubmit", rhsPaymentAuthSubmit), lhsPaymentAuthSubmit, rhsPaymentAuthSubmit)) {
                return false;
            }
        }
        {
            List<TrPortfolioDomain> lhsPortfolio;
            lhsPortfolio = this.getPortfolio();
            List<TrPortfolioDomain> rhsPortfolio;
            rhsPortfolio = that.getPortfolio();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfolio", lhsPortfolio), LocatorUtils.property(thatLocator, "portfolio", rhsPortfolio), lhsPortfolio, rhsPortfolio)) {
                return false;
            }
        }
        {
            List<TrRatingsDomain> lhsRatings;
            lhsRatings = this.getRatings();
            List<TrRatingsDomain> rhsRatings;
            rhsRatings = that.getRatings();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ratings", lhsRatings), LocatorUtils.property(thatLocator, "ratings", rhsRatings), lhsRatings, rhsRatings)) {
                return false;
            }
        }
        {
            List<TrRecentlyViewedDomain> lhsRecentlyViewed;
            lhsRecentlyViewed = this.getRecentlyViewed();
            List<TrRecentlyViewedDomain> rhsRecentlyViewed;
            rhsRecentlyViewed = that.getRecentlyViewed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "recentlyViewed", lhsRecentlyViewed), LocatorUtils.property(thatLocator, "recentlyViewed", rhsRecentlyViewed), lhsRecentlyViewed, rhsRecentlyViewed)) {
                return false;
            }
        }
        {
            List<TrReferralsDomain> lhsReferrals;
            lhsReferrals = this.getReferrals();
            List<TrReferralsDomain> rhsReferrals;
            rhsReferrals = that.getReferrals();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referrals", lhsReferrals), LocatorUtils.property(thatLocator, "referrals", rhsReferrals), lhsReferrals, rhsReferrals)) {
                return false;
            }
        }
        {
            List<TrSalesTransactionDetailsDomain> lhsSalesTransactionDetails;
            lhsSalesTransactionDetails = this.getSalesTransactionDetails();
            List<TrSalesTransactionDetailsDomain> rhsSalesTransactionDetails;
            rhsSalesTransactionDetails = that.getSalesTransactionDetails();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTransactionDetails", lhsSalesTransactionDetails), LocatorUtils.property(thatLocator, "salesTransactionDetails", rhsSalesTransactionDetails), lhsSalesTransactionDetails, rhsSalesTransactionDetails)) {
                return false;
            }
        }
        {
            List<AdUserDocumentsDomain> lhsUserDocuments;
            lhsUserDocuments = this.getUserDocuments();
            List<AdUserDocumentsDomain> rhsUserDocuments;
            rhsUserDocuments = that.getUserDocuments();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userDocuments", lhsUserDocuments), LocatorUtils.property(thatLocator, "userDocuments", rhsUserDocuments), lhsUserDocuments, rhsUserDocuments)) {
                return false;
            }
        }
        {
            AdLookupValuesDomain lhsUserTypeDomain;
            lhsUserTypeDomain = this.getUserTypeDomain();
            AdLookupValuesDomain rhsUserTypeDomain;
            rhsUserTypeDomain = that.getUserTypeDomain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userTypeDomain", lhsUserTypeDomain), LocatorUtils.property(thatLocator, "userTypeDomain", rhsUserTypeDomain), lhsUserTypeDomain, rhsUserTypeDomain)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            int theRegisterStatusId;
            theRegisterStatusId = this.getRegisterStatusId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "registerStatusId", theRegisterStatusId), currentHashCode, theRegisterStatusId);
        }
        {
            String theRegisterStatusCode;
            theRegisterStatusCode = this.getRegisterStatusCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "registerStatusCode", theRegisterStatusCode), currentHashCode, theRegisterStatusCode);
        }
        {
            AdLookupValuesDomain theRegisterStatus;
            theRegisterStatus = this.getRegisterStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "registerStatus", theRegisterStatus), currentHashCode, theRegisterStatus);
        }
        {
            String theUserName;
            theUserName = this.getUserName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userName", theUserName), currentHashCode, theUserName);
        }
        {
            String thePassword;
            thePassword = this.getPassword();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "password", thePassword), currentHashCode, thePassword);
        }
        {
            String theFirstname;
            theFirstname = this.getFirstname();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "firstname", theFirstname), currentHashCode, theFirstname);
        }
        {
            String theLastname;
            theLastname = this.getLastname();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastname", theLastname), currentHashCode, theLastname);
        }
        {
            String theCompanyname;
            theCompanyname = this.getCompanyname();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "companyname", theCompanyname), currentHashCode, theCompanyname);
        }
        {
            String theAboutYou;
            theAboutYou = this.getAboutYou();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "aboutYou", theAboutYou), currentHashCode, theAboutYou);
        }
        {
            String theCompanywebsite;
            theCompanywebsite = this.getCompanywebsite();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "companywebsite", theCompanywebsite), currentHashCode, theCompanywebsite);
        }
        {
            String theLogoimageurl;
            theLogoimageurl = this.getLogoimageurl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "logoimageurl", theLogoimageurl), currentHashCode, theLogoimageurl);
        }
        {
            String theSchoolawards;
            theSchoolawards = this.getSchoolawards();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "schoolawards", theSchoolawards), currentHashCode, theSchoolawards);
        }
        {
            int theActiveStatus;
            theActiveStatus = this.getActiveStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activeStatus", theActiveStatus), currentHashCode, theActiveStatus);
        }
        {
            int theSecurityQuestion1;
            theSecurityQuestion1 = this.getSecurityQuestion1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "securityQuestion1", theSecurityQuestion1), currentHashCode, theSecurityQuestion1);
        }
        {
            String theSecurityAnswer1;
            theSecurityAnswer1 = this.getSecurityAnswer1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "securityAnswer1", theSecurityAnswer1), currentHashCode, theSecurityAnswer1);
        }
        {
            int theSecurityQuestion2;
            theSecurityQuestion2 = this.getSecurityQuestion2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "securityQuestion2", theSecurityQuestion2), currentHashCode, theSecurityQuestion2);
        }
        {
            String theSecurityAnswer2;
            theSecurityAnswer2 = this.getSecurityAnswer2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "securityAnswer2", theSecurityAnswer2), currentHashCode, theSecurityAnswer2);
        }
        {
            int theSecurityquestion3;
            theSecurityquestion3 = this.getSecurityquestion3();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "securityquestion3", theSecurityquestion3), currentHashCode, theSecurityquestion3);
        }
        {
            String theSecurityAnswer3;
            theSecurityAnswer3 = this.getSecurityAnswer3();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "securityAnswer3", theSecurityAnswer3), currentHashCode, theSecurityAnswer3);
        }
        {
            String theTaxid;
            theTaxid = this.getTaxid();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxid", theTaxid), currentHashCode, theTaxid);
        }
        {
            float theOverallRating;
            theOverallRating = this.getOverallRating();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "overallRating", theOverallRating), currentHashCode, theOverallRating);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "langCode", theLangCode), currentHashCode, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        {
            String theUserType;
            theUserType = this.getUserType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userType", theUserType), currentHashCode, theUserType);
        }
        {
            int theIsTempPassword;
            theIsTempPassword = this.getIsTempPassword();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isTempPassword", theIsTempPassword), currentHashCode, theIsTempPassword);
        }
        {
            AdLookupValuesDomain theYrsExp;
            theYrsExp = this.getYrsExp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "yrsExp", theYrsExp), currentHashCode, theYrsExp);
        }
        {
            String theHowDidYouHearAboutUs;
            theHowDidYouHearAboutUs = this.getHowDidYouHearAboutUs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "howDidYouHearAboutUs", theHowDidYouHearAboutUs), currentHashCode, theHowDidYouHearAboutUs);
        }
        {
            String theCompaniesWorked;
            theCompaniesWorked = this.getCompaniesWorked();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "companiesWorked", theCompaniesWorked), currentHashCode, theCompaniesWorked);
        }
        {
            String theApproverComments;
            theApproverComments = this.getApproverComments();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "approverComments", theApproverComments), currentHashCode, theApproverComments);
        }
        {
            float theAdminRating;
            theAdminRating = this.getAdminRating();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "adminRating", theAdminRating), currentHashCode, theAdminRating);
        }
        {
            String theProfilename;
            theProfilename = this.getProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "profilename", theProfilename), currentHashCode, theProfilename);
        }
        {
            int theUseProfilename;
            theUseProfilename = this.getUseProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "useProfilename", theUseProfilename), currentHashCode, theUseProfilename);
        }
        {
            int theProfileScore;
            theProfileScore = this.getProfileScore();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "profileScore", theProfileScore), currentHashCode, theProfileScore);
        }
        {
            List<AdAccepttermsDomain> theAcceptedTermsCondition;
            theAcceptedTermsCondition = this.getAcceptedTermsCondition();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptedTermsCondition", theAcceptedTermsCondition), currentHashCode, theAcceptedTermsCondition);
        }
        {
            List<AdActiveUserDomain> theActiveUser;
            theActiveUser = this.getActiveUser();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activeUser", theActiveUser), currentHashCode, theActiveUser);
        }
        {
            List<AdAddressDomain> theAddress;
            theAddress = this.getAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
        }
        {
            List<AdContactsDomain> theContacts;
            theContacts = this.getContacts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contacts", theContacts), currentHashCode, theContacts);
        }
        {
            List<AdUserLanguagesDomain> theUserLangs;
            theUserLangs = this.getUserLangs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userLangs", theUserLangs), currentHashCode, theUserLangs);
        }
        {
            List<AdUserMembershipDomain> theUserMembership;
            theUserMembership = this.getUserMembership();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userMembership", theUserMembership), currentHashCode, theUserMembership);
        }
        {
            List<AdUserSkillsDomain> theUseSkills;
            theUseSkills = this.getUseSkills();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "useSkills", theUseSkills), currentHashCode, theUseSkills);
        }
        {
            List<AdUserEducationsDomain> theEducation;
            theEducation = this.getEducation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "education", theEducation), currentHashCode, theEducation);
        }
        {
            List<AdUserSpecialitiesDomain> theSpecialty;
            theSpecialty = this.getSpecialty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "specialty", theSpecialty), currentHashCode, theSpecialty);
        }
        {
            List<AdUserExpertisesDomain> theExpertise;
            theExpertise = this.getExpertise();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expertise", theExpertise), currentHashCode, theExpertise);
        }
        {
            List<AdUserDegaccsDomain> theDegAcc;
            theDegAcc = this.getDegAcc();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "degAcc", theDegAcc), currentHashCode, theDegAcc);
        }
        {
            List<TrBoardDomain> theBoards;
            theBoards = this.getBoards();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boards", theBoards), currentHashCode, theBoards);
        }
        {
            List<TrMessagesDomain> theMessages;
            theMessages = this.getMessages();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messages", theMessages), currentHashCode, theMessages);
        }
        {
            List<TrPaymentAuthSubmitDomain> thePaymentAuthSubmit;
            thePaymentAuthSubmit = this.getPaymentAuthSubmit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentAuthSubmit", thePaymentAuthSubmit), currentHashCode, thePaymentAuthSubmit);
        }
        {
            List<TrPortfolioDomain> thePortfolio;
            thePortfolio = this.getPortfolio();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfolio", thePortfolio), currentHashCode, thePortfolio);
        }
        {
            List<TrRatingsDomain> theRatings;
            theRatings = this.getRatings();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ratings", theRatings), currentHashCode, theRatings);
        }
        {
            List<TrRecentlyViewedDomain> theRecentlyViewed;
            theRecentlyViewed = this.getRecentlyViewed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "recentlyViewed", theRecentlyViewed), currentHashCode, theRecentlyViewed);
        }
        {
            List<TrReferralsDomain> theReferrals;
            theReferrals = this.getReferrals();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referrals", theReferrals), currentHashCode, theReferrals);
        }
        {
            List<TrSalesTransactionDetailsDomain> theSalesTransactionDetails;
            theSalesTransactionDetails = this.getSalesTransactionDetails();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTransactionDetails", theSalesTransactionDetails), currentHashCode, theSalesTransactionDetails);
        }
        {
            List<AdUserDocumentsDomain> theUserDocuments;
            theUserDocuments = this.getUserDocuments();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userDocuments", theUserDocuments), currentHashCode, theUserDocuments);
        }
        {
            AdLookupValuesDomain theUserTypeDomain;
            theUserTypeDomain = this.getUserTypeDomain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userTypeDomain", theUserTypeDomain), currentHashCode, theUserTypeDomain);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof AdUsersDomain) {
            final AdUsersDomain copy = ((AdUsersDomain) draftCopy);
            int sourceUserId;
            sourceUserId = this.getUserId();
            int copyUserId = strategy.copy(LocatorUtils.property(locator, "userId", sourceUserId), sourceUserId);
            copy.setUserId(copyUserId);
            int sourceRegisterStatusId;
            sourceRegisterStatusId = this.getRegisterStatusId();
            int copyRegisterStatusId = strategy.copy(LocatorUtils.property(locator, "registerStatusId", sourceRegisterStatusId), sourceRegisterStatusId);
            copy.setRegisterStatusId(copyRegisterStatusId);
            if (this.registerStatusCode!= null) {
                String sourceRegisterStatusCode;
                sourceRegisterStatusCode = this.getRegisterStatusCode();
                String copyRegisterStatusCode = ((String) strategy.copy(LocatorUtils.property(locator, "registerStatusCode", sourceRegisterStatusCode), sourceRegisterStatusCode));
                copy.setRegisterStatusCode(copyRegisterStatusCode);
            } else {
                copy.registerStatusCode = null;
            }
            if (this.registerStatus!= null) {
                AdLookupValuesDomain sourceRegisterStatus;
                sourceRegisterStatus = this.getRegisterStatus();
                AdLookupValuesDomain copyRegisterStatus = ((AdLookupValuesDomain) strategy.copy(LocatorUtils.property(locator, "registerStatus", sourceRegisterStatus), sourceRegisterStatus));
                copy.setRegisterStatus(copyRegisterStatus);
            } else {
                copy.registerStatus = null;
            }
            if (this.userName!= null) {
                String sourceUserName;
                sourceUserName = this.getUserName();
                String copyUserName = ((String) strategy.copy(LocatorUtils.property(locator, "userName", sourceUserName), sourceUserName));
                copy.setUserName(copyUserName);
            } else {
                copy.userName = null;
            }
            if (this.password!= null) {
                String sourcePassword;
                sourcePassword = this.getPassword();
                String copyPassword = ((String) strategy.copy(LocatorUtils.property(locator, "password", sourcePassword), sourcePassword));
                copy.setPassword(copyPassword);
            } else {
                copy.password = null;
            }
            if (this.firstname!= null) {
                String sourceFirstname;
                sourceFirstname = this.getFirstname();
                String copyFirstname = ((String) strategy.copy(LocatorUtils.property(locator, "firstname", sourceFirstname), sourceFirstname));
                copy.setFirstname(copyFirstname);
            } else {
                copy.firstname = null;
            }
            if (this.lastname!= null) {
                String sourceLastname;
                sourceLastname = this.getLastname();
                String copyLastname = ((String) strategy.copy(LocatorUtils.property(locator, "lastname", sourceLastname), sourceLastname));
                copy.setLastname(copyLastname);
            } else {
                copy.lastname = null;
            }
            if (this.companyname!= null) {
                String sourceCompanyname;
                sourceCompanyname = this.getCompanyname();
                String copyCompanyname = ((String) strategy.copy(LocatorUtils.property(locator, "companyname", sourceCompanyname), sourceCompanyname));
                copy.setCompanyname(copyCompanyname);
            } else {
                copy.companyname = null;
            }
            if (this.aboutYou!= null) {
                String sourceAboutYou;
                sourceAboutYou = this.getAboutYou();
                String copyAboutYou = ((String) strategy.copy(LocatorUtils.property(locator, "aboutYou", sourceAboutYou), sourceAboutYou));
                copy.setAboutYou(copyAboutYou);
            } else {
                copy.aboutYou = null;
            }
            if (this.companywebsite!= null) {
                String sourceCompanywebsite;
                sourceCompanywebsite = this.getCompanywebsite();
                String copyCompanywebsite = ((String) strategy.copy(LocatorUtils.property(locator, "companywebsite", sourceCompanywebsite), sourceCompanywebsite));
                copy.setCompanywebsite(copyCompanywebsite);
            } else {
                copy.companywebsite = null;
            }
            if (this.logoimageurl!= null) {
                String sourceLogoimageurl;
                sourceLogoimageurl = this.getLogoimageurl();
                String copyLogoimageurl = ((String) strategy.copy(LocatorUtils.property(locator, "logoimageurl", sourceLogoimageurl), sourceLogoimageurl));
                copy.setLogoimageurl(copyLogoimageurl);
            } else {
                copy.logoimageurl = null;
            }
            if (this.schoolawards!= null) {
                String sourceSchoolawards;
                sourceSchoolawards = this.getSchoolawards();
                String copySchoolawards = ((String) strategy.copy(LocatorUtils.property(locator, "schoolawards", sourceSchoolawards), sourceSchoolawards));
                copy.setSchoolawards(copySchoolawards);
            } else {
                copy.schoolawards = null;
            }
            int sourceActiveStatus;
            sourceActiveStatus = this.getActiveStatus();
            int copyActiveStatus = strategy.copy(LocatorUtils.property(locator, "activeStatus", sourceActiveStatus), sourceActiveStatus);
            copy.setActiveStatus(copyActiveStatus);
            int sourceSecurityQuestion1;
            sourceSecurityQuestion1 = this.getSecurityQuestion1();
            int copySecurityQuestion1 = strategy.copy(LocatorUtils.property(locator, "securityQuestion1", sourceSecurityQuestion1), sourceSecurityQuestion1);
            copy.setSecurityQuestion1(copySecurityQuestion1);
            if (this.securityAnswer1 != null) {
                String sourceSecurityAnswer1;
                sourceSecurityAnswer1 = this.getSecurityAnswer1();
                String copySecurityAnswer1 = ((String) strategy.copy(LocatorUtils.property(locator, "securityAnswer1", sourceSecurityAnswer1), sourceSecurityAnswer1));
                copy.setSecurityAnswer1(copySecurityAnswer1);
            } else {
                copy.securityAnswer1 = null;
            }
            int sourceSecurityQuestion2;
            sourceSecurityQuestion2 = this.getSecurityQuestion2();
            int copySecurityQuestion2 = strategy.copy(LocatorUtils.property(locator, "securityQuestion2", sourceSecurityQuestion2), sourceSecurityQuestion2);
            copy.setSecurityQuestion2(copySecurityQuestion2);
            if (this.securityAnswer2 != null) {
                String sourceSecurityAnswer2;
                sourceSecurityAnswer2 = this.getSecurityAnswer2();
                String copySecurityAnswer2 = ((String) strategy.copy(LocatorUtils.property(locator, "securityAnswer2", sourceSecurityAnswer2), sourceSecurityAnswer2));
                copy.setSecurityAnswer2(copySecurityAnswer2);
            } else {
                copy.securityAnswer2 = null;
            }
            int sourceSecurityquestion3;
            sourceSecurityquestion3 = this.getSecurityquestion3();
            int copySecurityquestion3 = strategy.copy(LocatorUtils.property(locator, "securityquestion3", sourceSecurityquestion3), sourceSecurityquestion3);
            copy.setSecurityquestion3(copySecurityquestion3);
            if (this.securityAnswer3 != null) {
                String sourceSecurityAnswer3;
                sourceSecurityAnswer3 = this.getSecurityAnswer3();
                String copySecurityAnswer3 = ((String) strategy.copy(LocatorUtils.property(locator, "securityAnswer3", sourceSecurityAnswer3), sourceSecurityAnswer3));
                copy.setSecurityAnswer3(copySecurityAnswer3);
            } else {
                copy.securityAnswer3 = null;
            }
            if (this.taxid!= null) {
                String sourceTaxid;
                sourceTaxid = this.getTaxid();
                String copyTaxid = ((String) strategy.copy(LocatorUtils.property(locator, "taxid", sourceTaxid), sourceTaxid));
                copy.setTaxid(copyTaxid);
            } else {
                copy.taxid = null;
            }
            float sourceOverallRating;
            sourceOverallRating = this.getOverallRating();
            float copyOverallRating = strategy.copy(LocatorUtils.property(locator, "overallRating", sourceOverallRating), sourceOverallRating);
            copy.setOverallRating(copyOverallRating);
            if (this.langCode!= null) {
                String sourceLangCode;
                sourceLangCode = this.getLangCode();
                String copyLangCode = ((String) strategy.copy(LocatorUtils.property(locator, "langCode", sourceLangCode), sourceLangCode));
                copy.setLangCode(copyLangCode);
            } else {
                copy.langCode = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
            if (this.userType!= null) {
                String sourceUserType;
                sourceUserType = this.getUserType();
                String copyUserType = ((String) strategy.copy(LocatorUtils.property(locator, "userType", sourceUserType), sourceUserType));
                copy.setUserType(copyUserType);
            } else {
                copy.userType = null;
            }
            int sourceIsTempPassword;
            sourceIsTempPassword = this.getIsTempPassword();
            int copyIsTempPassword = strategy.copy(LocatorUtils.property(locator, "isTempPassword", sourceIsTempPassword), sourceIsTempPassword);
            copy.setIsTempPassword(copyIsTempPassword);
            if (this.yrsExp!= null) {
                AdLookupValuesDomain sourceYrsExp;
                sourceYrsExp = this.getYrsExp();
                AdLookupValuesDomain copyYrsExp = ((AdLookupValuesDomain) strategy.copy(LocatorUtils.property(locator, "yrsExp", sourceYrsExp), sourceYrsExp));
                copy.setYrsExp(copyYrsExp);
            } else {
                copy.yrsExp = null;
            }
            if (this.howDidYouHearAboutUs!= null) {
                String sourceHowDidYouHearAboutUs;
                sourceHowDidYouHearAboutUs = this.getHowDidYouHearAboutUs();
                String copyHowDidYouHearAboutUs = ((String) strategy.copy(LocatorUtils.property(locator, "howDidYouHearAboutUs", sourceHowDidYouHearAboutUs), sourceHowDidYouHearAboutUs));
                copy.setHowDidYouHearAboutUs(copyHowDidYouHearAboutUs);
            } else {
                copy.howDidYouHearAboutUs = null;
            }
            if (this.companiesWorked!= null) {
                String sourceCompaniesWorked;
                sourceCompaniesWorked = this.getCompaniesWorked();
                String copyCompaniesWorked = ((String) strategy.copy(LocatorUtils.property(locator, "companiesWorked", sourceCompaniesWorked), sourceCompaniesWorked));
                copy.setCompaniesWorked(copyCompaniesWorked);
            } else {
                copy.companiesWorked = null;
            }
            if (this.approverComments!= null) {
                String sourceApproverComments;
                sourceApproverComments = this.getApproverComments();
                String copyApproverComments = ((String) strategy.copy(LocatorUtils.property(locator, "approverComments", sourceApproverComments), sourceApproverComments));
                copy.setApproverComments(copyApproverComments);
            } else {
                copy.approverComments = null;
            }
            float sourceAdminRating;
            sourceAdminRating = this.getAdminRating();
            float copyAdminRating = strategy.copy(LocatorUtils.property(locator, "adminRating", sourceAdminRating), sourceAdminRating);
            copy.setAdminRating(copyAdminRating);
            if (this.profilename!= null) {
                String sourceProfilename;
                sourceProfilename = this.getProfilename();
                String copyProfilename = ((String) strategy.copy(LocatorUtils.property(locator, "profilename", sourceProfilename), sourceProfilename));
                copy.setProfilename(copyProfilename);
            } else {
                copy.profilename = null;
            }
            int sourceUseProfilename;
            sourceUseProfilename = this.getUseProfilename();
            int copyUseProfilename = strategy.copy(LocatorUtils.property(locator, "useProfilename", sourceUseProfilename), sourceUseProfilename);
            copy.setUseProfilename(copyUseProfilename);
            int sourceProfileScore;
            sourceProfileScore = this.getProfileScore();
            int copyProfileScore = strategy.copy(LocatorUtils.property(locator, "profileScore", sourceProfileScore), sourceProfileScore);
            copy.setProfileScore(copyProfileScore);
            if ((this.acceptedTermsCondition!= null)&&(!this.acceptedTermsCondition.isEmpty())) {
                List<AdAccepttermsDomain> sourceAcceptedTermsCondition;
                sourceAcceptedTermsCondition = this.getAcceptedTermsCondition();
                @SuppressWarnings("unchecked")
                List<AdAccepttermsDomain> copyAcceptedTermsCondition = ((List<AdAccepttermsDomain> ) strategy.copy(LocatorUtils.property(locator, "acceptedTermsCondition", sourceAcceptedTermsCondition), sourceAcceptedTermsCondition));
                copy.acceptedTermsCondition = null;
                List<AdAccepttermsDomain> uniqueAcceptedTermsConditionl = copy.getAcceptedTermsCondition();
                uniqueAcceptedTermsConditionl.addAll(copyAcceptedTermsCondition);
            } else {
                copy.acceptedTermsCondition = null;
            }
            if ((this.activeUser!= null)&&(!this.activeUser.isEmpty())) {
                List<AdActiveUserDomain> sourceActiveUser;
                sourceActiveUser = this.getActiveUser();
                @SuppressWarnings("unchecked")
                List<AdActiveUserDomain> copyActiveUser = ((List<AdActiveUserDomain> ) strategy.copy(LocatorUtils.property(locator, "activeUser", sourceActiveUser), sourceActiveUser));
                copy.activeUser = null;
                List<AdActiveUserDomain> uniqueActiveUserl = copy.getActiveUser();
                uniqueActiveUserl.addAll(copyActiveUser);
            } else {
                copy.activeUser = null;
            }
            if ((this.address!= null)&&(!this.address.isEmpty())) {
                List<AdAddressDomain> sourceAddress;
                sourceAddress = this.getAddress();
                @SuppressWarnings("unchecked")
                List<AdAddressDomain> copyAddress = ((List<AdAddressDomain> ) strategy.copy(LocatorUtils.property(locator, "address", sourceAddress), sourceAddress));
                copy.address = null;
                List<AdAddressDomain> uniqueAddressl = copy.getAddress();
                uniqueAddressl.addAll(copyAddress);
            } else {
                copy.address = null;
            }
            if ((this.contacts!= null)&&(!this.contacts.isEmpty())) {
                List<AdContactsDomain> sourceContacts;
                sourceContacts = this.getContacts();
                @SuppressWarnings("unchecked")
                List<AdContactsDomain> copyContacts = ((List<AdContactsDomain> ) strategy.copy(LocatorUtils.property(locator, "contacts", sourceContacts), sourceContacts));
                copy.contacts = null;
                List<AdContactsDomain> uniqueContactsl = copy.getContacts();
                uniqueContactsl.addAll(copyContacts);
            } else {
                copy.contacts = null;
            }
            if ((this.userLangs!= null)&&(!this.userLangs.isEmpty())) {
                List<AdUserLanguagesDomain> sourceUserLangs;
                sourceUserLangs = this.getUserLangs();
                @SuppressWarnings("unchecked")
                List<AdUserLanguagesDomain> copyUserLangs = ((List<AdUserLanguagesDomain> ) strategy.copy(LocatorUtils.property(locator, "userLangs", sourceUserLangs), sourceUserLangs));
                copy.userLangs = null;
                List<AdUserLanguagesDomain> uniqueUserLangsl = copy.getUserLangs();
                uniqueUserLangsl.addAll(copyUserLangs);
            } else {
                copy.userLangs = null;
            }
            if ((this.userMembership!= null)&&(!this.userMembership.isEmpty())) {
                List<AdUserMembershipDomain> sourceUserMembership;
                sourceUserMembership = this.getUserMembership();
                @SuppressWarnings("unchecked")
                List<AdUserMembershipDomain> copyUserMembership = ((List<AdUserMembershipDomain> ) strategy.copy(LocatorUtils.property(locator, "userMembership", sourceUserMembership), sourceUserMembership));
                copy.userMembership = null;
                List<AdUserMembershipDomain> uniqueUserMembershipl = copy.getUserMembership();
                uniqueUserMembershipl.addAll(copyUserMembership);
            } else {
                copy.userMembership = null;
            }
            if ((this.useSkills!= null)&&(!this.useSkills.isEmpty())) {
                List<AdUserSkillsDomain> sourceUseSkills;
                sourceUseSkills = this.getUseSkills();
                @SuppressWarnings("unchecked")
                List<AdUserSkillsDomain> copyUseSkills = ((List<AdUserSkillsDomain> ) strategy.copy(LocatorUtils.property(locator, "useSkills", sourceUseSkills), sourceUseSkills));
                copy.useSkills = null;
                List<AdUserSkillsDomain> uniqueUseSkillsl = copy.getUseSkills();
                uniqueUseSkillsl.addAll(copyUseSkills);
            } else {
                copy.useSkills = null;
            }
            if ((this.education!= null)&&(!this.education.isEmpty())) {
                List<AdUserEducationsDomain> sourceEducation;
                sourceEducation = this.getEducation();
                @SuppressWarnings("unchecked")
                List<AdUserEducationsDomain> copyEducation = ((List<AdUserEducationsDomain> ) strategy.copy(LocatorUtils.property(locator, "education", sourceEducation), sourceEducation));
                copy.education = null;
                List<AdUserEducationsDomain> uniqueEducationl = copy.getEducation();
                uniqueEducationl.addAll(copyEducation);
            } else {
                copy.education = null;
            }
            if ((this.specialty!= null)&&(!this.specialty.isEmpty())) {
                List<AdUserSpecialitiesDomain> sourceSpecialty;
                sourceSpecialty = this.getSpecialty();
                @SuppressWarnings("unchecked")
                List<AdUserSpecialitiesDomain> copySpecialty = ((List<AdUserSpecialitiesDomain> ) strategy.copy(LocatorUtils.property(locator, "specialty", sourceSpecialty), sourceSpecialty));
                copy.specialty = null;
                List<AdUserSpecialitiesDomain> uniqueSpecialtyl = copy.getSpecialty();
                uniqueSpecialtyl.addAll(copySpecialty);
            } else {
                copy.specialty = null;
            }
            if ((this.expertise!= null)&&(!this.expertise.isEmpty())) {
                List<AdUserExpertisesDomain> sourceExpertise;
                sourceExpertise = this.getExpertise();
                @SuppressWarnings("unchecked")
                List<AdUserExpertisesDomain> copyExpertise = ((List<AdUserExpertisesDomain> ) strategy.copy(LocatorUtils.property(locator, "expertise", sourceExpertise), sourceExpertise));
                copy.expertise = null;
                List<AdUserExpertisesDomain> uniqueExpertisel = copy.getExpertise();
                uniqueExpertisel.addAll(copyExpertise);
            } else {
                copy.expertise = null;
            }
            if ((this.degAcc!= null)&&(!this.degAcc.isEmpty())) {
                List<AdUserDegaccsDomain> sourceDegAcc;
                sourceDegAcc = this.getDegAcc();
                @SuppressWarnings("unchecked")
                List<AdUserDegaccsDomain> copyDegAcc = ((List<AdUserDegaccsDomain> ) strategy.copy(LocatorUtils.property(locator, "degAcc", sourceDegAcc), sourceDegAcc));
                copy.degAcc = null;
                List<AdUserDegaccsDomain> uniqueDegAccl = copy.getDegAcc();
                uniqueDegAccl.addAll(copyDegAcc);
            } else {
                copy.degAcc = null;
            }
            if ((this.boards!= null)&&(!this.boards.isEmpty())) {
                List<TrBoardDomain> sourceBoards;
                sourceBoards = this.getBoards();
                @SuppressWarnings("unchecked")
                List<TrBoardDomain> copyBoards = ((List<TrBoardDomain> ) strategy.copy(LocatorUtils.property(locator, "boards", sourceBoards), sourceBoards));
                copy.boards = null;
                List<TrBoardDomain> uniqueBoardsl = copy.getBoards();
                uniqueBoardsl.addAll(copyBoards);
            } else {
                copy.boards = null;
            }
            if ((this.messages!= null)&&(!this.messages.isEmpty())) {
                List<TrMessagesDomain> sourceMessages;
                sourceMessages = this.getMessages();
                @SuppressWarnings("unchecked")
                List<TrMessagesDomain> copyMessages = ((List<TrMessagesDomain> ) strategy.copy(LocatorUtils.property(locator, "messages", sourceMessages), sourceMessages));
                copy.messages = null;
                List<TrMessagesDomain> uniqueMessagesl = copy.getMessages();
                uniqueMessagesl.addAll(copyMessages);
            } else {
                copy.messages = null;
            }
            if ((this.paymentAuthSubmit!= null)&&(!this.paymentAuthSubmit.isEmpty())) {
                List<TrPaymentAuthSubmitDomain> sourcePaymentAuthSubmit;
                sourcePaymentAuthSubmit = this.getPaymentAuthSubmit();
                @SuppressWarnings("unchecked")
                List<TrPaymentAuthSubmitDomain> copyPaymentAuthSubmit = ((List<TrPaymentAuthSubmitDomain> ) strategy.copy(LocatorUtils.property(locator, "paymentAuthSubmit", sourcePaymentAuthSubmit), sourcePaymentAuthSubmit));
                copy.paymentAuthSubmit = null;
                List<TrPaymentAuthSubmitDomain> uniquePaymentAuthSubmitl = copy.getPaymentAuthSubmit();
                uniquePaymentAuthSubmitl.addAll(copyPaymentAuthSubmit);
            } else {
                copy.paymentAuthSubmit = null;
            }
            if ((this.portfolio!= null)&&(!this.portfolio.isEmpty())) {
                List<TrPortfolioDomain> sourcePortfolio;
                sourcePortfolio = this.getPortfolio();
                @SuppressWarnings("unchecked")
                List<TrPortfolioDomain> copyPortfolio = ((List<TrPortfolioDomain> ) strategy.copy(LocatorUtils.property(locator, "portfolio", sourcePortfolio), sourcePortfolio));
                copy.portfolio = null;
                List<TrPortfolioDomain> uniquePortfoliol = copy.getPortfolio();
                uniquePortfoliol.addAll(copyPortfolio);
            } else {
                copy.portfolio = null;
            }
            if ((this.ratings!= null)&&(!this.ratings.isEmpty())) {
                List<TrRatingsDomain> sourceRatings;
                sourceRatings = this.getRatings();
                @SuppressWarnings("unchecked")
                List<TrRatingsDomain> copyRatings = ((List<TrRatingsDomain> ) strategy.copy(LocatorUtils.property(locator, "ratings", sourceRatings), sourceRatings));
                copy.ratings = null;
                List<TrRatingsDomain> uniqueRatingsl = copy.getRatings();
                uniqueRatingsl.addAll(copyRatings);
            } else {
                copy.ratings = null;
            }
            if ((this.recentlyViewed!= null)&&(!this.recentlyViewed.isEmpty())) {
                List<TrRecentlyViewedDomain> sourceRecentlyViewed;
                sourceRecentlyViewed = this.getRecentlyViewed();
                @SuppressWarnings("unchecked")
                List<TrRecentlyViewedDomain> copyRecentlyViewed = ((List<TrRecentlyViewedDomain> ) strategy.copy(LocatorUtils.property(locator, "recentlyViewed", sourceRecentlyViewed), sourceRecentlyViewed));
                copy.recentlyViewed = null;
                List<TrRecentlyViewedDomain> uniqueRecentlyViewedl = copy.getRecentlyViewed();
                uniqueRecentlyViewedl.addAll(copyRecentlyViewed);
            } else {
                copy.recentlyViewed = null;
            }
            if ((this.referrals!= null)&&(!this.referrals.isEmpty())) {
                List<TrReferralsDomain> sourceReferrals;
                sourceReferrals = this.getReferrals();
                @SuppressWarnings("unchecked")
                List<TrReferralsDomain> copyReferrals = ((List<TrReferralsDomain> ) strategy.copy(LocatorUtils.property(locator, "referrals", sourceReferrals), sourceReferrals));
                copy.referrals = null;
                List<TrReferralsDomain> uniqueReferralsl = copy.getReferrals();
                uniqueReferralsl.addAll(copyReferrals);
            } else {
                copy.referrals = null;
            }
            if ((this.salesTransactionDetails!= null)&&(!this.salesTransactionDetails.isEmpty())) {
                List<TrSalesTransactionDetailsDomain> sourceSalesTransactionDetails;
                sourceSalesTransactionDetails = this.getSalesTransactionDetails();
                @SuppressWarnings("unchecked")
                List<TrSalesTransactionDetailsDomain> copySalesTransactionDetails = ((List<TrSalesTransactionDetailsDomain> ) strategy.copy(LocatorUtils.property(locator, "salesTransactionDetails", sourceSalesTransactionDetails), sourceSalesTransactionDetails));
                copy.salesTransactionDetails = null;
                List<TrSalesTransactionDetailsDomain> uniqueSalesTransactionDetailsl = copy.getSalesTransactionDetails();
                uniqueSalesTransactionDetailsl.addAll(copySalesTransactionDetails);
            } else {
                copy.salesTransactionDetails = null;
            }
            if ((this.userDocuments!= null)&&(!this.userDocuments.isEmpty())) {
                List<AdUserDocumentsDomain> sourceUserDocuments;
                sourceUserDocuments = this.getUserDocuments();
                @SuppressWarnings("unchecked")
                List<AdUserDocumentsDomain> copyUserDocuments = ((List<AdUserDocumentsDomain> ) strategy.copy(LocatorUtils.property(locator, "userDocuments", sourceUserDocuments), sourceUserDocuments));
                copy.userDocuments = null;
                List<AdUserDocumentsDomain> uniqueUserDocumentsl = copy.getUserDocuments();
                uniqueUserDocumentsl.addAll(copyUserDocuments);
            } else {
                copy.userDocuments = null;
            }
            if (this.userTypeDomain!= null) {
                AdLookupValuesDomain sourceUserTypeDomain;
                sourceUserTypeDomain = this.getUserTypeDomain();
                AdLookupValuesDomain copyUserTypeDomain = ((AdLookupValuesDomain) strategy.copy(LocatorUtils.property(locator, "userTypeDomain", sourceUserTypeDomain), sourceUserTypeDomain));
                copy.setUserTypeDomain(copyUserTypeDomain);
            } else {
                copy.userTypeDomain = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new AdUsersDomain();
    }

}
