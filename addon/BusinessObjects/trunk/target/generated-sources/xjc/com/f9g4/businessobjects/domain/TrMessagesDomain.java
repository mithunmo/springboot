//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for trMessagesDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="trMessagesDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="messageId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="board" type="{http://domain.businessobjects.f9g4.com}trBoardDomain"/>
 *         &lt;element name="boardId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boardName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boardThumbnailUrl">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boardTileUrl">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromUserId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromUserFirstName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromUserLastName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromUserCompanyName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromUserLogoUrl">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromUserProfilename">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromUserUseProfilename">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromUserType" type="{http://domain.businessobjects.f9g4.com}adLookupValuesDomain"/>
 *         &lt;element name="toUserId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toUserFirstName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toUserLastName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toUserCompanyName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toUserLogoUrl">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toUserProfilename">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toUserUseProfilename">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toUserType" type="{http://domain.businessobjects.f9g4.com}adLookupValuesDomain"/>
 *         &lt;element name="msgStatusId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="subject">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="messageBody">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="4000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="messageType">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="45"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="readOn">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="activeStatus">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="langCode">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="10"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="creationDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastUpdateDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "trMessagesDomain", propOrder = {
    "messageId",
    "board",
    "boardId",
    "boardName",
    "boardThumbnailUrl",
    "boardTileUrl",
    "fromUserId",
    "fromUserFirstName",
    "fromUserLastName",
    "fromUserCompanyName",
    "fromUserLogoUrl",
    "fromUserProfilename",
    "fromUserUseProfilename",
    "fromUserType",
    "toUserId",
    "toUserFirstName",
    "toUserLastName",
    "toUserCompanyName",
    "toUserLogoUrl",
    "toUserProfilename",
    "toUserUseProfilename",
    "toUserType",
    "msgStatusId",
    "subject",
    "messageBody",
    "messageType",
    "readOn",
    "activeStatus",
    "langCode",
    "createdby",
    "lastupdateby",
    "creationDate",
    "lastUpdateDate"
})
public class TrMessagesDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int messageId;
    @XmlElement(required = true)
    protected TrBoardDomain board;
    protected int boardId;
    @XmlElement(required = true)
    protected String boardName;
    @XmlElement(required = true)
    protected String boardThumbnailUrl;
    @XmlElement(required = true)
    protected String boardTileUrl;
    protected int fromUserId;
    @XmlElement(required = true)
    protected String fromUserFirstName;
    @XmlElement(required = true)
    protected String fromUserLastName;
    @XmlElement(required = true)
    protected String fromUserCompanyName;
    @XmlElement(required = true)
    protected String fromUserLogoUrl;
    @XmlElement(required = true)
    protected String fromUserProfilename;
    protected int fromUserUseProfilename;
    @XmlElement(required = true)
    protected AdLookupValuesDomain fromUserType;
    protected int toUserId;
    @XmlElement(required = true)
    protected String toUserFirstName;
    @XmlElement(required = true)
    protected String toUserLastName;
    @XmlElement(required = true)
    protected String toUserCompanyName;
    @XmlElement(required = true)
    protected String toUserLogoUrl;
    @XmlElement(required = true)
    protected String toUserProfilename;
    protected int toUserUseProfilename;
    @XmlElement(required = true)
    protected AdLookupValuesDomain toUserType;
    protected int msgStatusId;
    @XmlElement(required = true)
    protected String subject;
    @XmlElement(required = true)
    protected String messageBody;
    @XmlElement(required = true)
    protected String messageType;
    @XmlElement(required = true)
    protected XMLGregorianCalendar readOn;
    protected int activeStatus;
    @XmlElement(required = true, defaultValue = "en-US")
    protected String langCode;
    protected int createdby;
    protected int lastupdateby;
    @XmlElement(required = true)
    protected XMLGregorianCalendar creationDate;
    @XmlElement(required = true)
    protected XMLGregorianCalendar lastUpdateDate;

    /**
     * Default no-arg constructor
     * 
     */
    public TrMessagesDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TrMessagesDomain(final int messageId, final TrBoardDomain board, final int boardId, final String boardName, final String boardThumbnailUrl, final String boardTileUrl, final int fromUserId, final String fromUserFirstName, final String fromUserLastName, final String fromUserCompanyName, final String fromUserLogoUrl, final String fromUserProfilename, final int fromUserUseProfilename, final AdLookupValuesDomain fromUserType, final int toUserId, final String toUserFirstName, final String toUserLastName, final String toUserCompanyName, final String toUserLogoUrl, final String toUserProfilename, final int toUserUseProfilename, final AdLookupValuesDomain toUserType, final int msgStatusId, final String subject, final String messageBody, final String messageType, final XMLGregorianCalendar readOn, final int activeStatus, final String langCode, final int createdby, final int lastupdateby, final XMLGregorianCalendar creationDate, final XMLGregorianCalendar lastUpdateDate) {
        this.messageId = messageId;
        this.board = board;
        this.boardId = boardId;
        this.boardName = boardName;
        this.boardThumbnailUrl = boardThumbnailUrl;
        this.boardTileUrl = boardTileUrl;
        this.fromUserId = fromUserId;
        this.fromUserFirstName = fromUserFirstName;
        this.fromUserLastName = fromUserLastName;
        this.fromUserCompanyName = fromUserCompanyName;
        this.fromUserLogoUrl = fromUserLogoUrl;
        this.fromUserProfilename = fromUserProfilename;
        this.fromUserUseProfilename = fromUserUseProfilename;
        this.fromUserType = fromUserType;
        this.toUserId = toUserId;
        this.toUserFirstName = toUserFirstName;
        this.toUserLastName = toUserLastName;
        this.toUserCompanyName = toUserCompanyName;
        this.toUserLogoUrl = toUserLogoUrl;
        this.toUserProfilename = toUserProfilename;
        this.toUserUseProfilename = toUserUseProfilename;
        this.toUserType = toUserType;
        this.msgStatusId = msgStatusId;
        this.subject = subject;
        this.messageBody = messageBody;
        this.messageType = messageType;
        this.readOn = readOn;
        this.activeStatus = activeStatus;
        this.langCode = langCode;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
        this.creationDate = creationDate;
        this.lastUpdateDate = lastUpdateDate;
    }

    /**
     * Gets the value of the messageId property.
     * 
     */
    public int getMessageId() {
        return messageId;
    }

    /**
     * Sets the value of the messageId property.
     * 
     */
    public void setMessageId(int value) {
        this.messageId = value;
    }

    /**
     * Gets the value of the board property.
     * 
     * @return
     *     possible object is
     *     {@link TrBoardDomain }
     *     
     */
    public TrBoardDomain getBoard() {
        return board;
    }

    /**
     * Sets the value of the board property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrBoardDomain }
     *     
     */
    public void setBoard(TrBoardDomain value) {
        this.board = value;
    }

    /**
     * Gets the value of the boardId property.
     * 
     */
    public int getBoardId() {
        return boardId;
    }

    /**
     * Sets the value of the boardId property.
     * 
     */
    public void setBoardId(int value) {
        this.boardId = value;
    }

    /**
     * Gets the value of the boardName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBoardName() {
        return boardName;
    }

    /**
     * Sets the value of the boardName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBoardName(String value) {
        this.boardName = value;
    }

    /**
     * Gets the value of the boardThumbnailUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBoardThumbnailUrl() {
        return boardThumbnailUrl;
    }

    /**
     * Sets the value of the boardThumbnailUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBoardThumbnailUrl(String value) {
        this.boardThumbnailUrl = value;
    }

    /**
     * Gets the value of the boardTileUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBoardTileUrl() {
        return boardTileUrl;
    }

    /**
     * Sets the value of the boardTileUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBoardTileUrl(String value) {
        this.boardTileUrl = value;
    }

    /**
     * Gets the value of the fromUserId property.
     * 
     */
    public int getFromUserId() {
        return fromUserId;
    }

    /**
     * Sets the value of the fromUserId property.
     * 
     */
    public void setFromUserId(int value) {
        this.fromUserId = value;
    }

    /**
     * Gets the value of the fromUserFirstName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFromUserFirstName() {
        return fromUserFirstName;
    }

    /**
     * Sets the value of the fromUserFirstName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFromUserFirstName(String value) {
        this.fromUserFirstName = value;
    }

    /**
     * Gets the value of the fromUserLastName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFromUserLastName() {
        return fromUserLastName;
    }

    /**
     * Sets the value of the fromUserLastName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFromUserLastName(String value) {
        this.fromUserLastName = value;
    }

    /**
     * Gets the value of the fromUserCompanyName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFromUserCompanyName() {
        return fromUserCompanyName;
    }

    /**
     * Sets the value of the fromUserCompanyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFromUserCompanyName(String value) {
        this.fromUserCompanyName = value;
    }

    /**
     * Gets the value of the fromUserLogoUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFromUserLogoUrl() {
        return fromUserLogoUrl;
    }

    /**
     * Sets the value of the fromUserLogoUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFromUserLogoUrl(String value) {
        this.fromUserLogoUrl = value;
    }

    /**
     * Gets the value of the fromUserProfilename property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFromUserProfilename() {
        return fromUserProfilename;
    }

    /**
     * Sets the value of the fromUserProfilename property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFromUserProfilename(String value) {
        this.fromUserProfilename = value;
    }

    /**
     * Gets the value of the fromUserUseProfilename property.
     * 
     */
    public int getFromUserUseProfilename() {
        return fromUserUseProfilename;
    }

    /**
     * Sets the value of the fromUserUseProfilename property.
     * 
     */
    public void setFromUserUseProfilename(int value) {
        this.fromUserUseProfilename = value;
    }

    /**
     * Gets the value of the fromUserType property.
     * 
     * @return
     *     possible object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public AdLookupValuesDomain getFromUserType() {
        return fromUserType;
    }

    /**
     * Sets the value of the fromUserType property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public void setFromUserType(AdLookupValuesDomain value) {
        this.fromUserType = value;
    }

    /**
     * Gets the value of the toUserId property.
     * 
     */
    public int getToUserId() {
        return toUserId;
    }

    /**
     * Sets the value of the toUserId property.
     * 
     */
    public void setToUserId(int value) {
        this.toUserId = value;
    }

    /**
     * Gets the value of the toUserFirstName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToUserFirstName() {
        return toUserFirstName;
    }

    /**
     * Sets the value of the toUserFirstName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setToUserFirstName(String value) {
        this.toUserFirstName = value;
    }

    /**
     * Gets the value of the toUserLastName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToUserLastName() {
        return toUserLastName;
    }

    /**
     * Sets the value of the toUserLastName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setToUserLastName(String value) {
        this.toUserLastName = value;
    }

    /**
     * Gets the value of the toUserCompanyName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToUserCompanyName() {
        return toUserCompanyName;
    }

    /**
     * Sets the value of the toUserCompanyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setToUserCompanyName(String value) {
        this.toUserCompanyName = value;
    }

    /**
     * Gets the value of the toUserLogoUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToUserLogoUrl() {
        return toUserLogoUrl;
    }

    /**
     * Sets the value of the toUserLogoUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setToUserLogoUrl(String value) {
        this.toUserLogoUrl = value;
    }

    /**
     * Gets the value of the toUserProfilename property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToUserProfilename() {
        return toUserProfilename;
    }

    /**
     * Sets the value of the toUserProfilename property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setToUserProfilename(String value) {
        this.toUserProfilename = value;
    }

    /**
     * Gets the value of the toUserUseProfilename property.
     * 
     */
    public int getToUserUseProfilename() {
        return toUserUseProfilename;
    }

    /**
     * Sets the value of the toUserUseProfilename property.
     * 
     */
    public void setToUserUseProfilename(int value) {
        this.toUserUseProfilename = value;
    }

    /**
     * Gets the value of the toUserType property.
     * 
     * @return
     *     possible object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public AdLookupValuesDomain getToUserType() {
        return toUserType;
    }

    /**
     * Sets the value of the toUserType property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public void setToUserType(AdLookupValuesDomain value) {
        this.toUserType = value;
    }

    /**
     * Gets the value of the msgStatusId property.
     * 
     */
    public int getMsgStatusId() {
        return msgStatusId;
    }

    /**
     * Sets the value of the msgStatusId property.
     * 
     */
    public void setMsgStatusId(int value) {
        this.msgStatusId = value;
    }

    /**
     * Gets the value of the subject property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubject() {
        return subject;
    }

    /**
     * Sets the value of the subject property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubject(String value) {
        this.subject = value;
    }

    /**
     * Gets the value of the messageBody property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMessageBody() {
        return messageBody;
    }

    /**
     * Sets the value of the messageBody property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMessageBody(String value) {
        this.messageBody = value;
    }

    /**
     * Gets the value of the messageType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMessageType() {
        return messageType;
    }

    /**
     * Sets the value of the messageType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMessageType(String value) {
        this.messageType = value;
    }

    /**
     * Gets the value of the readOn property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getReadOn() {
        return readOn;
    }

    /**
     * Sets the value of the readOn property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setReadOn(XMLGregorianCalendar value) {
        this.readOn = value;
    }

    /**
     * Gets the value of the activeStatus property.
     * 
     */
    public int getActiveStatus() {
        return activeStatus;
    }

    /**
     * Sets the value of the activeStatus property.
     * 
     */
    public void setActiveStatus(int value) {
        this.activeStatus = value;
    }

    /**
     * Gets the value of the langCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLangCode() {
        return langCode;
    }

    /**
     * Sets the value of the langCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLangCode(String value) {
        this.langCode = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    /**
     * Gets the value of the creationDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getCreationDate() {
        return creationDate;
    }

    /**
     * Sets the value of the creationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setCreationDate(XMLGregorianCalendar value) {
        this.creationDate = value;
    }

    /**
     * Gets the value of the lastUpdateDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getLastUpdateDate() {
        return lastUpdateDate;
    }

    /**
     * Sets the value of the lastUpdateDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setLastUpdateDate(XMLGregorianCalendar value) {
        this.lastUpdateDate = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theMessageId;
            theMessageId = this.getMessageId();
            strategy.appendField(locator, this, "messageId", buffer, theMessageId);
        }
        {
            TrBoardDomain theBoard;
            theBoard = this.getBoard();
            strategy.appendField(locator, this, "board", buffer, theBoard);
        }
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            strategy.appendField(locator, this, "boardId", buffer, theBoardId);
        }
        {
            String theBoardName;
            theBoardName = this.getBoardName();
            strategy.appendField(locator, this, "boardName", buffer, theBoardName);
        }
        {
            String theBoardThumbnailUrl;
            theBoardThumbnailUrl = this.getBoardThumbnailUrl();
            strategy.appendField(locator, this, "boardThumbnailUrl", buffer, theBoardThumbnailUrl);
        }
        {
            String theBoardTileUrl;
            theBoardTileUrl = this.getBoardTileUrl();
            strategy.appendField(locator, this, "boardTileUrl", buffer, theBoardTileUrl);
        }
        {
            int theFromUserId;
            theFromUserId = this.getFromUserId();
            strategy.appendField(locator, this, "fromUserId", buffer, theFromUserId);
        }
        {
            String theFromUserFirstName;
            theFromUserFirstName = this.getFromUserFirstName();
            strategy.appendField(locator, this, "fromUserFirstName", buffer, theFromUserFirstName);
        }
        {
            String theFromUserLastName;
            theFromUserLastName = this.getFromUserLastName();
            strategy.appendField(locator, this, "fromUserLastName", buffer, theFromUserLastName);
        }
        {
            String theFromUserCompanyName;
            theFromUserCompanyName = this.getFromUserCompanyName();
            strategy.appendField(locator, this, "fromUserCompanyName", buffer, theFromUserCompanyName);
        }
        {
            String theFromUserLogoUrl;
            theFromUserLogoUrl = this.getFromUserLogoUrl();
            strategy.appendField(locator, this, "fromUserLogoUrl", buffer, theFromUserLogoUrl);
        }
        {
            String theFromUserProfilename;
            theFromUserProfilename = this.getFromUserProfilename();
            strategy.appendField(locator, this, "fromUserProfilename", buffer, theFromUserProfilename);
        }
        {
            int theFromUserUseProfilename;
            theFromUserUseProfilename = this.getFromUserUseProfilename();
            strategy.appendField(locator, this, "fromUserUseProfilename", buffer, theFromUserUseProfilename);
        }
        {
            AdLookupValuesDomain theFromUserType;
            theFromUserType = this.getFromUserType();
            strategy.appendField(locator, this, "fromUserType", buffer, theFromUserType);
        }
        {
            int theToUserId;
            theToUserId = this.getToUserId();
            strategy.appendField(locator, this, "toUserId", buffer, theToUserId);
        }
        {
            String theToUserFirstName;
            theToUserFirstName = this.getToUserFirstName();
            strategy.appendField(locator, this, "toUserFirstName", buffer, theToUserFirstName);
        }
        {
            String theToUserLastName;
            theToUserLastName = this.getToUserLastName();
            strategy.appendField(locator, this, "toUserLastName", buffer, theToUserLastName);
        }
        {
            String theToUserCompanyName;
            theToUserCompanyName = this.getToUserCompanyName();
            strategy.appendField(locator, this, "toUserCompanyName", buffer, theToUserCompanyName);
        }
        {
            String theToUserLogoUrl;
            theToUserLogoUrl = this.getToUserLogoUrl();
            strategy.appendField(locator, this, "toUserLogoUrl", buffer, theToUserLogoUrl);
        }
        {
            String theToUserProfilename;
            theToUserProfilename = this.getToUserProfilename();
            strategy.appendField(locator, this, "toUserProfilename", buffer, theToUserProfilename);
        }
        {
            int theToUserUseProfilename;
            theToUserUseProfilename = this.getToUserUseProfilename();
            strategy.appendField(locator, this, "toUserUseProfilename", buffer, theToUserUseProfilename);
        }
        {
            AdLookupValuesDomain theToUserType;
            theToUserType = this.getToUserType();
            strategy.appendField(locator, this, "toUserType", buffer, theToUserType);
        }
        {
            int theMsgStatusId;
            theMsgStatusId = this.getMsgStatusId();
            strategy.appendField(locator, this, "msgStatusId", buffer, theMsgStatusId);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            String theMessageBody;
            theMessageBody = this.getMessageBody();
            strategy.appendField(locator, this, "messageBody", buffer, theMessageBody);
        }
        {
            String theMessageType;
            theMessageType = this.getMessageType();
            strategy.appendField(locator, this, "messageType", buffer, theMessageType);
        }
        {
            XMLGregorianCalendar theReadOn;
            theReadOn = this.getReadOn();
            strategy.appendField(locator, this, "readOn", buffer, theReadOn);
        }
        {
            int theActiveStatus;
            theActiveStatus = this.getActiveStatus();
            strategy.appendField(locator, this, "activeStatus", buffer, theActiveStatus);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            strategy.appendField(locator, this, "langCode", buffer, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        {
            XMLGregorianCalendar theCreationDate;
            theCreationDate = this.getCreationDate();
            strategy.appendField(locator, this, "creationDate", buffer, theCreationDate);
        }
        {
            XMLGregorianCalendar theLastUpdateDate;
            theLastUpdateDate = this.getLastUpdateDate();
            strategy.appendField(locator, this, "lastUpdateDate", buffer, theLastUpdateDate);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TrMessagesDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TrMessagesDomain that = ((TrMessagesDomain) object);
        {
            int lhsMessageId;
            lhsMessageId = this.getMessageId();
            int rhsMessageId;
            rhsMessageId = that.getMessageId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messageId", lhsMessageId), LocatorUtils.property(thatLocator, "messageId", rhsMessageId), lhsMessageId, rhsMessageId)) {
                return false;
            }
        }
        {
            TrBoardDomain lhsBoard;
            lhsBoard = this.getBoard();
            TrBoardDomain rhsBoard;
            rhsBoard = that.getBoard();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "board", lhsBoard), LocatorUtils.property(thatLocator, "board", rhsBoard), lhsBoard, rhsBoard)) {
                return false;
            }
        }
        {
            int lhsBoardId;
            lhsBoardId = this.getBoardId();
            int rhsBoardId;
            rhsBoardId = that.getBoardId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardId", lhsBoardId), LocatorUtils.property(thatLocator, "boardId", rhsBoardId), lhsBoardId, rhsBoardId)) {
                return false;
            }
        }
        {
            String lhsBoardName;
            lhsBoardName = this.getBoardName();
            String rhsBoardName;
            rhsBoardName = that.getBoardName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardName", lhsBoardName), LocatorUtils.property(thatLocator, "boardName", rhsBoardName), lhsBoardName, rhsBoardName)) {
                return false;
            }
        }
        {
            String lhsBoardThumbnailUrl;
            lhsBoardThumbnailUrl = this.getBoardThumbnailUrl();
            String rhsBoardThumbnailUrl;
            rhsBoardThumbnailUrl = that.getBoardThumbnailUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardThumbnailUrl", lhsBoardThumbnailUrl), LocatorUtils.property(thatLocator, "boardThumbnailUrl", rhsBoardThumbnailUrl), lhsBoardThumbnailUrl, rhsBoardThumbnailUrl)) {
                return false;
            }
        }
        {
            String lhsBoardTileUrl;
            lhsBoardTileUrl = this.getBoardTileUrl();
            String rhsBoardTileUrl;
            rhsBoardTileUrl = that.getBoardTileUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardTileUrl", lhsBoardTileUrl), LocatorUtils.property(thatLocator, "boardTileUrl", rhsBoardTileUrl), lhsBoardTileUrl, rhsBoardTileUrl)) {
                return false;
            }
        }
        {
            int lhsFromUserId;
            lhsFromUserId = this.getFromUserId();
            int rhsFromUserId;
            rhsFromUserId = that.getFromUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromUserId", lhsFromUserId), LocatorUtils.property(thatLocator, "fromUserId", rhsFromUserId), lhsFromUserId, rhsFromUserId)) {
                return false;
            }
        }
        {
            String lhsFromUserFirstName;
            lhsFromUserFirstName = this.getFromUserFirstName();
            String rhsFromUserFirstName;
            rhsFromUserFirstName = that.getFromUserFirstName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromUserFirstName", lhsFromUserFirstName), LocatorUtils.property(thatLocator, "fromUserFirstName", rhsFromUserFirstName), lhsFromUserFirstName, rhsFromUserFirstName)) {
                return false;
            }
        }
        {
            String lhsFromUserLastName;
            lhsFromUserLastName = this.getFromUserLastName();
            String rhsFromUserLastName;
            rhsFromUserLastName = that.getFromUserLastName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromUserLastName", lhsFromUserLastName), LocatorUtils.property(thatLocator, "fromUserLastName", rhsFromUserLastName), lhsFromUserLastName, rhsFromUserLastName)) {
                return false;
            }
        }
        {
            String lhsFromUserCompanyName;
            lhsFromUserCompanyName = this.getFromUserCompanyName();
            String rhsFromUserCompanyName;
            rhsFromUserCompanyName = that.getFromUserCompanyName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromUserCompanyName", lhsFromUserCompanyName), LocatorUtils.property(thatLocator, "fromUserCompanyName", rhsFromUserCompanyName), lhsFromUserCompanyName, rhsFromUserCompanyName)) {
                return false;
            }
        }
        {
            String lhsFromUserLogoUrl;
            lhsFromUserLogoUrl = this.getFromUserLogoUrl();
            String rhsFromUserLogoUrl;
            rhsFromUserLogoUrl = that.getFromUserLogoUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromUserLogoUrl", lhsFromUserLogoUrl), LocatorUtils.property(thatLocator, "fromUserLogoUrl", rhsFromUserLogoUrl), lhsFromUserLogoUrl, rhsFromUserLogoUrl)) {
                return false;
            }
        }
        {
            String lhsFromUserProfilename;
            lhsFromUserProfilename = this.getFromUserProfilename();
            String rhsFromUserProfilename;
            rhsFromUserProfilename = that.getFromUserProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromUserProfilename", lhsFromUserProfilename), LocatorUtils.property(thatLocator, "fromUserProfilename", rhsFromUserProfilename), lhsFromUserProfilename, rhsFromUserProfilename)) {
                return false;
            }
        }
        {
            int lhsFromUserUseProfilename;
            lhsFromUserUseProfilename = this.getFromUserUseProfilename();
            int rhsFromUserUseProfilename;
            rhsFromUserUseProfilename = that.getFromUserUseProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromUserUseProfilename", lhsFromUserUseProfilename), LocatorUtils.property(thatLocator, "fromUserUseProfilename", rhsFromUserUseProfilename), lhsFromUserUseProfilename, rhsFromUserUseProfilename)) {
                return false;
            }
        }
        {
            AdLookupValuesDomain lhsFromUserType;
            lhsFromUserType = this.getFromUserType();
            AdLookupValuesDomain rhsFromUserType;
            rhsFromUserType = that.getFromUserType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromUserType", lhsFromUserType), LocatorUtils.property(thatLocator, "fromUserType", rhsFromUserType), lhsFromUserType, rhsFromUserType)) {
                return false;
            }
        }
        {
            int lhsToUserId;
            lhsToUserId = this.getToUserId();
            int rhsToUserId;
            rhsToUserId = that.getToUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toUserId", lhsToUserId), LocatorUtils.property(thatLocator, "toUserId", rhsToUserId), lhsToUserId, rhsToUserId)) {
                return false;
            }
        }
        {
            String lhsToUserFirstName;
            lhsToUserFirstName = this.getToUserFirstName();
            String rhsToUserFirstName;
            rhsToUserFirstName = that.getToUserFirstName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toUserFirstName", lhsToUserFirstName), LocatorUtils.property(thatLocator, "toUserFirstName", rhsToUserFirstName), lhsToUserFirstName, rhsToUserFirstName)) {
                return false;
            }
        }
        {
            String lhsToUserLastName;
            lhsToUserLastName = this.getToUserLastName();
            String rhsToUserLastName;
            rhsToUserLastName = that.getToUserLastName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toUserLastName", lhsToUserLastName), LocatorUtils.property(thatLocator, "toUserLastName", rhsToUserLastName), lhsToUserLastName, rhsToUserLastName)) {
                return false;
            }
        }
        {
            String lhsToUserCompanyName;
            lhsToUserCompanyName = this.getToUserCompanyName();
            String rhsToUserCompanyName;
            rhsToUserCompanyName = that.getToUserCompanyName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toUserCompanyName", lhsToUserCompanyName), LocatorUtils.property(thatLocator, "toUserCompanyName", rhsToUserCompanyName), lhsToUserCompanyName, rhsToUserCompanyName)) {
                return false;
            }
        }
        {
            String lhsToUserLogoUrl;
            lhsToUserLogoUrl = this.getToUserLogoUrl();
            String rhsToUserLogoUrl;
            rhsToUserLogoUrl = that.getToUserLogoUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toUserLogoUrl", lhsToUserLogoUrl), LocatorUtils.property(thatLocator, "toUserLogoUrl", rhsToUserLogoUrl), lhsToUserLogoUrl, rhsToUserLogoUrl)) {
                return false;
            }
        }
        {
            String lhsToUserProfilename;
            lhsToUserProfilename = this.getToUserProfilename();
            String rhsToUserProfilename;
            rhsToUserProfilename = that.getToUserProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toUserProfilename", lhsToUserProfilename), LocatorUtils.property(thatLocator, "toUserProfilename", rhsToUserProfilename), lhsToUserProfilename, rhsToUserProfilename)) {
                return false;
            }
        }
        {
            int lhsToUserUseProfilename;
            lhsToUserUseProfilename = this.getToUserUseProfilename();
            int rhsToUserUseProfilename;
            rhsToUserUseProfilename = that.getToUserUseProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toUserUseProfilename", lhsToUserUseProfilename), LocatorUtils.property(thatLocator, "toUserUseProfilename", rhsToUserUseProfilename), lhsToUserUseProfilename, rhsToUserUseProfilename)) {
                return false;
            }
        }
        {
            AdLookupValuesDomain lhsToUserType;
            lhsToUserType = this.getToUserType();
            AdLookupValuesDomain rhsToUserType;
            rhsToUserType = that.getToUserType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toUserType", lhsToUserType), LocatorUtils.property(thatLocator, "toUserType", rhsToUserType), lhsToUserType, rhsToUserType)) {
                return false;
            }
        }
        {
            int lhsMsgStatusId;
            lhsMsgStatusId = this.getMsgStatusId();
            int rhsMsgStatusId;
            rhsMsgStatusId = that.getMsgStatusId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "msgStatusId", lhsMsgStatusId), LocatorUtils.property(thatLocator, "msgStatusId", rhsMsgStatusId), lhsMsgStatusId, rhsMsgStatusId)) {
                return false;
            }
        }
        {
            String lhsSubject;
            lhsSubject = this.getSubject();
            String rhsSubject;
            rhsSubject = that.getSubject();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subject", lhsSubject), LocatorUtils.property(thatLocator, "subject", rhsSubject), lhsSubject, rhsSubject)) {
                return false;
            }
        }
        {
            String lhsMessageBody;
            lhsMessageBody = this.getMessageBody();
            String rhsMessageBody;
            rhsMessageBody = that.getMessageBody();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messageBody", lhsMessageBody), LocatorUtils.property(thatLocator, "messageBody", rhsMessageBody), lhsMessageBody, rhsMessageBody)) {
                return false;
            }
        }
        {
            String lhsMessageType;
            lhsMessageType = this.getMessageType();
            String rhsMessageType;
            rhsMessageType = that.getMessageType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messageType", lhsMessageType), LocatorUtils.property(thatLocator, "messageType", rhsMessageType), lhsMessageType, rhsMessageType)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsReadOn;
            lhsReadOn = this.getReadOn();
            XMLGregorianCalendar rhsReadOn;
            rhsReadOn = that.getReadOn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "readOn", lhsReadOn), LocatorUtils.property(thatLocator, "readOn", rhsReadOn), lhsReadOn, rhsReadOn)) {
                return false;
            }
        }
        {
            int lhsActiveStatus;
            lhsActiveStatus = this.getActiveStatus();
            int rhsActiveStatus;
            rhsActiveStatus = that.getActiveStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activeStatus", lhsActiveStatus), LocatorUtils.property(thatLocator, "activeStatus", rhsActiveStatus), lhsActiveStatus, rhsActiveStatus)) {
                return false;
            }
        }
        {
            String lhsLangCode;
            lhsLangCode = this.getLangCode();
            String rhsLangCode;
            rhsLangCode = that.getLangCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "langCode", lhsLangCode), LocatorUtils.property(thatLocator, "langCode", rhsLangCode), lhsLangCode, rhsLangCode)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsCreationDate;
            lhsCreationDate = this.getCreationDate();
            XMLGregorianCalendar rhsCreationDate;
            rhsCreationDate = that.getCreationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "creationDate", lhsCreationDate), LocatorUtils.property(thatLocator, "creationDate", rhsCreationDate), lhsCreationDate, rhsCreationDate)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsLastUpdateDate;
            lhsLastUpdateDate = this.getLastUpdateDate();
            XMLGregorianCalendar rhsLastUpdateDate;
            rhsLastUpdateDate = that.getLastUpdateDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastUpdateDate", lhsLastUpdateDate), LocatorUtils.property(thatLocator, "lastUpdateDate", rhsLastUpdateDate), lhsLastUpdateDate, rhsLastUpdateDate)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theMessageId;
            theMessageId = this.getMessageId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageId", theMessageId), currentHashCode, theMessageId);
        }
        {
            TrBoardDomain theBoard;
            theBoard = this.getBoard();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "board", theBoard), currentHashCode, theBoard);
        }
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardId", theBoardId), currentHashCode, theBoardId);
        }
        {
            String theBoardName;
            theBoardName = this.getBoardName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardName", theBoardName), currentHashCode, theBoardName);
        }
        {
            String theBoardThumbnailUrl;
            theBoardThumbnailUrl = this.getBoardThumbnailUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardThumbnailUrl", theBoardThumbnailUrl), currentHashCode, theBoardThumbnailUrl);
        }
        {
            String theBoardTileUrl;
            theBoardTileUrl = this.getBoardTileUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardTileUrl", theBoardTileUrl), currentHashCode, theBoardTileUrl);
        }
        {
            int theFromUserId;
            theFromUserId = this.getFromUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromUserId", theFromUserId), currentHashCode, theFromUserId);
        }
        {
            String theFromUserFirstName;
            theFromUserFirstName = this.getFromUserFirstName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromUserFirstName", theFromUserFirstName), currentHashCode, theFromUserFirstName);
        }
        {
            String theFromUserLastName;
            theFromUserLastName = this.getFromUserLastName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromUserLastName", theFromUserLastName), currentHashCode, theFromUserLastName);
        }
        {
            String theFromUserCompanyName;
            theFromUserCompanyName = this.getFromUserCompanyName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromUserCompanyName", theFromUserCompanyName), currentHashCode, theFromUserCompanyName);
        }
        {
            String theFromUserLogoUrl;
            theFromUserLogoUrl = this.getFromUserLogoUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromUserLogoUrl", theFromUserLogoUrl), currentHashCode, theFromUserLogoUrl);
        }
        {
            String theFromUserProfilename;
            theFromUserProfilename = this.getFromUserProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromUserProfilename", theFromUserProfilename), currentHashCode, theFromUserProfilename);
        }
        {
            int theFromUserUseProfilename;
            theFromUserUseProfilename = this.getFromUserUseProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromUserUseProfilename", theFromUserUseProfilename), currentHashCode, theFromUserUseProfilename);
        }
        {
            AdLookupValuesDomain theFromUserType;
            theFromUserType = this.getFromUserType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromUserType", theFromUserType), currentHashCode, theFromUserType);
        }
        {
            int theToUserId;
            theToUserId = this.getToUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toUserId", theToUserId), currentHashCode, theToUserId);
        }
        {
            String theToUserFirstName;
            theToUserFirstName = this.getToUserFirstName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toUserFirstName", theToUserFirstName), currentHashCode, theToUserFirstName);
        }
        {
            String theToUserLastName;
            theToUserLastName = this.getToUserLastName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toUserLastName", theToUserLastName), currentHashCode, theToUserLastName);
        }
        {
            String theToUserCompanyName;
            theToUserCompanyName = this.getToUserCompanyName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toUserCompanyName", theToUserCompanyName), currentHashCode, theToUserCompanyName);
        }
        {
            String theToUserLogoUrl;
            theToUserLogoUrl = this.getToUserLogoUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toUserLogoUrl", theToUserLogoUrl), currentHashCode, theToUserLogoUrl);
        }
        {
            String theToUserProfilename;
            theToUserProfilename = this.getToUserProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toUserProfilename", theToUserProfilename), currentHashCode, theToUserProfilename);
        }
        {
            int theToUserUseProfilename;
            theToUserUseProfilename = this.getToUserUseProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toUserUseProfilename", theToUserUseProfilename), currentHashCode, theToUserUseProfilename);
        }
        {
            AdLookupValuesDomain theToUserType;
            theToUserType = this.getToUserType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toUserType", theToUserType), currentHashCode, theToUserType);
        }
        {
            int theMsgStatusId;
            theMsgStatusId = this.getMsgStatusId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "msgStatusId", theMsgStatusId), currentHashCode, theMsgStatusId);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subject", theSubject), currentHashCode, theSubject);
        }
        {
            String theMessageBody;
            theMessageBody = this.getMessageBody();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageBody", theMessageBody), currentHashCode, theMessageBody);
        }
        {
            String theMessageType;
            theMessageType = this.getMessageType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageType", theMessageType), currentHashCode, theMessageType);
        }
        {
            XMLGregorianCalendar theReadOn;
            theReadOn = this.getReadOn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "readOn", theReadOn), currentHashCode, theReadOn);
        }
        {
            int theActiveStatus;
            theActiveStatus = this.getActiveStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activeStatus", theActiveStatus), currentHashCode, theActiveStatus);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "langCode", theLangCode), currentHashCode, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        {
            XMLGregorianCalendar theCreationDate;
            theCreationDate = this.getCreationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "creationDate", theCreationDate), currentHashCode, theCreationDate);
        }
        {
            XMLGregorianCalendar theLastUpdateDate;
            theLastUpdateDate = this.getLastUpdateDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastUpdateDate", theLastUpdateDate), currentHashCode, theLastUpdateDate);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof TrMessagesDomain) {
            final TrMessagesDomain copy = ((TrMessagesDomain) draftCopy);
            int sourceMessageId;
            sourceMessageId = this.getMessageId();
            int copyMessageId = strategy.copy(LocatorUtils.property(locator, "messageId", sourceMessageId), sourceMessageId);
            copy.setMessageId(copyMessageId);
            if (this.board!= null) {
                TrBoardDomain sourceBoard;
                sourceBoard = this.getBoard();
                TrBoardDomain copyBoard = ((TrBoardDomain) strategy.copy(LocatorUtils.property(locator, "board", sourceBoard), sourceBoard));
                copy.setBoard(copyBoard);
            } else {
                copy.board = null;
            }
            int sourceBoardId;
            sourceBoardId = this.getBoardId();
            int copyBoardId = strategy.copy(LocatorUtils.property(locator, "boardId", sourceBoardId), sourceBoardId);
            copy.setBoardId(copyBoardId);
            if (this.boardName!= null) {
                String sourceBoardName;
                sourceBoardName = this.getBoardName();
                String copyBoardName = ((String) strategy.copy(LocatorUtils.property(locator, "boardName", sourceBoardName), sourceBoardName));
                copy.setBoardName(copyBoardName);
            } else {
                copy.boardName = null;
            }
            if (this.boardThumbnailUrl!= null) {
                String sourceBoardThumbnailUrl;
                sourceBoardThumbnailUrl = this.getBoardThumbnailUrl();
                String copyBoardThumbnailUrl = ((String) strategy.copy(LocatorUtils.property(locator, "boardThumbnailUrl", sourceBoardThumbnailUrl), sourceBoardThumbnailUrl));
                copy.setBoardThumbnailUrl(copyBoardThumbnailUrl);
            } else {
                copy.boardThumbnailUrl = null;
            }
            if (this.boardTileUrl!= null) {
                String sourceBoardTileUrl;
                sourceBoardTileUrl = this.getBoardTileUrl();
                String copyBoardTileUrl = ((String) strategy.copy(LocatorUtils.property(locator, "boardTileUrl", sourceBoardTileUrl), sourceBoardTileUrl));
                copy.setBoardTileUrl(copyBoardTileUrl);
            } else {
                copy.boardTileUrl = null;
            }
            int sourceFromUserId;
            sourceFromUserId = this.getFromUserId();
            int copyFromUserId = strategy.copy(LocatorUtils.property(locator, "fromUserId", sourceFromUserId), sourceFromUserId);
            copy.setFromUserId(copyFromUserId);
            if (this.fromUserFirstName!= null) {
                String sourceFromUserFirstName;
                sourceFromUserFirstName = this.getFromUserFirstName();
                String copyFromUserFirstName = ((String) strategy.copy(LocatorUtils.property(locator, "fromUserFirstName", sourceFromUserFirstName), sourceFromUserFirstName));
                copy.setFromUserFirstName(copyFromUserFirstName);
            } else {
                copy.fromUserFirstName = null;
            }
            if (this.fromUserLastName!= null) {
                String sourceFromUserLastName;
                sourceFromUserLastName = this.getFromUserLastName();
                String copyFromUserLastName = ((String) strategy.copy(LocatorUtils.property(locator, "fromUserLastName", sourceFromUserLastName), sourceFromUserLastName));
                copy.setFromUserLastName(copyFromUserLastName);
            } else {
                copy.fromUserLastName = null;
            }
            if (this.fromUserCompanyName!= null) {
                String sourceFromUserCompanyName;
                sourceFromUserCompanyName = this.getFromUserCompanyName();
                String copyFromUserCompanyName = ((String) strategy.copy(LocatorUtils.property(locator, "fromUserCompanyName", sourceFromUserCompanyName), sourceFromUserCompanyName));
                copy.setFromUserCompanyName(copyFromUserCompanyName);
            } else {
                copy.fromUserCompanyName = null;
            }
            if (this.fromUserLogoUrl!= null) {
                String sourceFromUserLogoUrl;
                sourceFromUserLogoUrl = this.getFromUserLogoUrl();
                String copyFromUserLogoUrl = ((String) strategy.copy(LocatorUtils.property(locator, "fromUserLogoUrl", sourceFromUserLogoUrl), sourceFromUserLogoUrl));
                copy.setFromUserLogoUrl(copyFromUserLogoUrl);
            } else {
                copy.fromUserLogoUrl = null;
            }
            if (this.fromUserProfilename!= null) {
                String sourceFromUserProfilename;
                sourceFromUserProfilename = this.getFromUserProfilename();
                String copyFromUserProfilename = ((String) strategy.copy(LocatorUtils.property(locator, "fromUserProfilename", sourceFromUserProfilename), sourceFromUserProfilename));
                copy.setFromUserProfilename(copyFromUserProfilename);
            } else {
                copy.fromUserProfilename = null;
            }
            int sourceFromUserUseProfilename;
            sourceFromUserUseProfilename = this.getFromUserUseProfilename();
            int copyFromUserUseProfilename = strategy.copy(LocatorUtils.property(locator, "fromUserUseProfilename", sourceFromUserUseProfilename), sourceFromUserUseProfilename);
            copy.setFromUserUseProfilename(copyFromUserUseProfilename);
            if (this.fromUserType!= null) {
                AdLookupValuesDomain sourceFromUserType;
                sourceFromUserType = this.getFromUserType();
                AdLookupValuesDomain copyFromUserType = ((AdLookupValuesDomain) strategy.copy(LocatorUtils.property(locator, "fromUserType", sourceFromUserType), sourceFromUserType));
                copy.setFromUserType(copyFromUserType);
            } else {
                copy.fromUserType = null;
            }
            int sourceToUserId;
            sourceToUserId = this.getToUserId();
            int copyToUserId = strategy.copy(LocatorUtils.property(locator, "toUserId", sourceToUserId), sourceToUserId);
            copy.setToUserId(copyToUserId);
            if (this.toUserFirstName!= null) {
                String sourceToUserFirstName;
                sourceToUserFirstName = this.getToUserFirstName();
                String copyToUserFirstName = ((String) strategy.copy(LocatorUtils.property(locator, "toUserFirstName", sourceToUserFirstName), sourceToUserFirstName));
                copy.setToUserFirstName(copyToUserFirstName);
            } else {
                copy.toUserFirstName = null;
            }
            if (this.toUserLastName!= null) {
                String sourceToUserLastName;
                sourceToUserLastName = this.getToUserLastName();
                String copyToUserLastName = ((String) strategy.copy(LocatorUtils.property(locator, "toUserLastName", sourceToUserLastName), sourceToUserLastName));
                copy.setToUserLastName(copyToUserLastName);
            } else {
                copy.toUserLastName = null;
            }
            if (this.toUserCompanyName!= null) {
                String sourceToUserCompanyName;
                sourceToUserCompanyName = this.getToUserCompanyName();
                String copyToUserCompanyName = ((String) strategy.copy(LocatorUtils.property(locator, "toUserCompanyName", sourceToUserCompanyName), sourceToUserCompanyName));
                copy.setToUserCompanyName(copyToUserCompanyName);
            } else {
                copy.toUserCompanyName = null;
            }
            if (this.toUserLogoUrl!= null) {
                String sourceToUserLogoUrl;
                sourceToUserLogoUrl = this.getToUserLogoUrl();
                String copyToUserLogoUrl = ((String) strategy.copy(LocatorUtils.property(locator, "toUserLogoUrl", sourceToUserLogoUrl), sourceToUserLogoUrl));
                copy.setToUserLogoUrl(copyToUserLogoUrl);
            } else {
                copy.toUserLogoUrl = null;
            }
            if (this.toUserProfilename!= null) {
                String sourceToUserProfilename;
                sourceToUserProfilename = this.getToUserProfilename();
                String copyToUserProfilename = ((String) strategy.copy(LocatorUtils.property(locator, "toUserProfilename", sourceToUserProfilename), sourceToUserProfilename));
                copy.setToUserProfilename(copyToUserProfilename);
            } else {
                copy.toUserProfilename = null;
            }
            int sourceToUserUseProfilename;
            sourceToUserUseProfilename = this.getToUserUseProfilename();
            int copyToUserUseProfilename = strategy.copy(LocatorUtils.property(locator, "toUserUseProfilename", sourceToUserUseProfilename), sourceToUserUseProfilename);
            copy.setToUserUseProfilename(copyToUserUseProfilename);
            if (this.toUserType!= null) {
                AdLookupValuesDomain sourceToUserType;
                sourceToUserType = this.getToUserType();
                AdLookupValuesDomain copyToUserType = ((AdLookupValuesDomain) strategy.copy(LocatorUtils.property(locator, "toUserType", sourceToUserType), sourceToUserType));
                copy.setToUserType(copyToUserType);
            } else {
                copy.toUserType = null;
            }
            int sourceMsgStatusId;
            sourceMsgStatusId = this.getMsgStatusId();
            int copyMsgStatusId = strategy.copy(LocatorUtils.property(locator, "msgStatusId", sourceMsgStatusId), sourceMsgStatusId);
            copy.setMsgStatusId(copyMsgStatusId);
            if (this.subject!= null) {
                String sourceSubject;
                sourceSubject = this.getSubject();
                String copySubject = ((String) strategy.copy(LocatorUtils.property(locator, "subject", sourceSubject), sourceSubject));
                copy.setSubject(copySubject);
            } else {
                copy.subject = null;
            }
            if (this.messageBody!= null) {
                String sourceMessageBody;
                sourceMessageBody = this.getMessageBody();
                String copyMessageBody = ((String) strategy.copy(LocatorUtils.property(locator, "messageBody", sourceMessageBody), sourceMessageBody));
                copy.setMessageBody(copyMessageBody);
            } else {
                copy.messageBody = null;
            }
            if (this.messageType!= null) {
                String sourceMessageType;
                sourceMessageType = this.getMessageType();
                String copyMessageType = ((String) strategy.copy(LocatorUtils.property(locator, "messageType", sourceMessageType), sourceMessageType));
                copy.setMessageType(copyMessageType);
            } else {
                copy.messageType = null;
            }
            if (this.readOn!= null) {
                XMLGregorianCalendar sourceReadOn;
                sourceReadOn = this.getReadOn();
                XMLGregorianCalendar copyReadOn = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "readOn", sourceReadOn), sourceReadOn));
                copy.setReadOn(copyReadOn);
            } else {
                copy.readOn = null;
            }
            int sourceActiveStatus;
            sourceActiveStatus = this.getActiveStatus();
            int copyActiveStatus = strategy.copy(LocatorUtils.property(locator, "activeStatus", sourceActiveStatus), sourceActiveStatus);
            copy.setActiveStatus(copyActiveStatus);
            if (this.langCode!= null) {
                String sourceLangCode;
                sourceLangCode = this.getLangCode();
                String copyLangCode = ((String) strategy.copy(LocatorUtils.property(locator, "langCode", sourceLangCode), sourceLangCode));
                copy.setLangCode(copyLangCode);
            } else {
                copy.langCode = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
            if (this.creationDate!= null) {
                XMLGregorianCalendar sourceCreationDate;
                sourceCreationDate = this.getCreationDate();
                XMLGregorianCalendar copyCreationDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "creationDate", sourceCreationDate), sourceCreationDate));
                copy.setCreationDate(copyCreationDate);
            } else {
                copy.creationDate = null;
            }
            if (this.lastUpdateDate!= null) {
                XMLGregorianCalendar sourceLastUpdateDate;
                sourceLastUpdateDate = this.getLastUpdateDate();
                XMLGregorianCalendar copyLastUpdateDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "lastUpdateDate", sourceLastUpdateDate), sourceLastUpdateDate));
                copy.setLastUpdateDate(copyLastUpdateDate);
            } else {
                copy.lastUpdateDate = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new TrMessagesDomain();
    }

}
