//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for trNotificationQDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="trNotificationQDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="notificationId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromUserId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toUserId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromEmail">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="150"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toEmail">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="150"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="subject">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="1000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="bodyText">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="4000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="emailStatusId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="deliveryDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "trNotificationQDomain", propOrder = {
    "notificationId",
    "fromUserId",
    "toUserId",
    "fromEmail",
    "toEmail",
    "subject",
    "bodyText",
    "emailStatusId",
    "deliveryDate",
    "createdby",
    "lastupdateby"
})
public class TrNotificationQDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int notificationId;
    protected int fromUserId;
    protected int toUserId;
    @XmlElement(required = true)
    protected String fromEmail;
    @XmlElement(required = true)
    protected String toEmail;
    @XmlElement(required = true)
    protected String subject;
    @XmlElement(required = true)
    protected String bodyText;
    protected int emailStatusId;
    @XmlElement(required = true)
    protected XMLGregorianCalendar deliveryDate;
    protected int createdby;
    protected int lastupdateby;

    /**
     * Default no-arg constructor
     * 
     */
    public TrNotificationQDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TrNotificationQDomain(final int notificationId, final int fromUserId, final int toUserId, final String fromEmail, final String toEmail, final String subject, final String bodyText, final int emailStatusId, final XMLGregorianCalendar deliveryDate, final int createdby, final int lastupdateby) {
        this.notificationId = notificationId;
        this.fromUserId = fromUserId;
        this.toUserId = toUserId;
        this.fromEmail = fromEmail;
        this.toEmail = toEmail;
        this.subject = subject;
        this.bodyText = bodyText;
        this.emailStatusId = emailStatusId;
        this.deliveryDate = deliveryDate;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
    }

    /**
     * Gets the value of the notificationId property.
     * 
     */
    public int getNotificationId() {
        return notificationId;
    }

    /**
     * Sets the value of the notificationId property.
     * 
     */
    public void setNotificationId(int value) {
        this.notificationId = value;
    }

    /**
     * Gets the value of the fromUserId property.
     * 
     */
    public int getFromUserId() {
        return fromUserId;
    }

    /**
     * Sets the value of the fromUserId property.
     * 
     */
    public void setFromUserId(int value) {
        this.fromUserId = value;
    }

    /**
     * Gets the value of the toUserId property.
     * 
     */
    public int getToUserId() {
        return toUserId;
    }

    /**
     * Sets the value of the toUserId property.
     * 
     */
    public void setToUserId(int value) {
        this.toUserId = value;
    }

    /**
     * Gets the value of the fromEmail property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFromEmail() {
        return fromEmail;
    }

    /**
     * Sets the value of the fromEmail property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFromEmail(String value) {
        this.fromEmail = value;
    }

    /**
     * Gets the value of the toEmail property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToEmail() {
        return toEmail;
    }

    /**
     * Sets the value of the toEmail property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setToEmail(String value) {
        this.toEmail = value;
    }

    /**
     * Gets the value of the subject property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubject() {
        return subject;
    }

    /**
     * Sets the value of the subject property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubject(String value) {
        this.subject = value;
    }

    /**
     * Gets the value of the bodyText property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBodyText() {
        return bodyText;
    }

    /**
     * Sets the value of the bodyText property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBodyText(String value) {
        this.bodyText = value;
    }

    /**
     * Gets the value of the emailStatusId property.
     * 
     */
    public int getEmailStatusId() {
        return emailStatusId;
    }

    /**
     * Sets the value of the emailStatusId property.
     * 
     */
    public void setEmailStatusId(int value) {
        this.emailStatusId = value;
    }

    /**
     * Gets the value of the deliveryDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDeliveryDate() {
        return deliveryDate;
    }

    /**
     * Sets the value of the deliveryDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDeliveryDate(XMLGregorianCalendar value) {
        this.deliveryDate = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theNotificationId;
            theNotificationId = this.getNotificationId();
            strategy.appendField(locator, this, "notificationId", buffer, theNotificationId);
        }
        {
            int theFromUserId;
            theFromUserId = this.getFromUserId();
            strategy.appendField(locator, this, "fromUserId", buffer, theFromUserId);
        }
        {
            int theToUserId;
            theToUserId = this.getToUserId();
            strategy.appendField(locator, this, "toUserId", buffer, theToUserId);
        }
        {
            String theFromEmail;
            theFromEmail = this.getFromEmail();
            strategy.appendField(locator, this, "fromEmail", buffer, theFromEmail);
        }
        {
            String theToEmail;
            theToEmail = this.getToEmail();
            strategy.appendField(locator, this, "toEmail", buffer, theToEmail);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            String theBodyText;
            theBodyText = this.getBodyText();
            strategy.appendField(locator, this, "bodyText", buffer, theBodyText);
        }
        {
            int theEmailStatusId;
            theEmailStatusId = this.getEmailStatusId();
            strategy.appendField(locator, this, "emailStatusId", buffer, theEmailStatusId);
        }
        {
            XMLGregorianCalendar theDeliveryDate;
            theDeliveryDate = this.getDeliveryDate();
            strategy.appendField(locator, this, "deliveryDate", buffer, theDeliveryDate);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TrNotificationQDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TrNotificationQDomain that = ((TrNotificationQDomain) object);
        {
            int lhsNotificationId;
            lhsNotificationId = this.getNotificationId();
            int rhsNotificationId;
            rhsNotificationId = that.getNotificationId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notificationId", lhsNotificationId), LocatorUtils.property(thatLocator, "notificationId", rhsNotificationId), lhsNotificationId, rhsNotificationId)) {
                return false;
            }
        }
        {
            int lhsFromUserId;
            lhsFromUserId = this.getFromUserId();
            int rhsFromUserId;
            rhsFromUserId = that.getFromUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromUserId", lhsFromUserId), LocatorUtils.property(thatLocator, "fromUserId", rhsFromUserId), lhsFromUserId, rhsFromUserId)) {
                return false;
            }
        }
        {
            int lhsToUserId;
            lhsToUserId = this.getToUserId();
            int rhsToUserId;
            rhsToUserId = that.getToUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toUserId", lhsToUserId), LocatorUtils.property(thatLocator, "toUserId", rhsToUserId), lhsToUserId, rhsToUserId)) {
                return false;
            }
        }
        {
            String lhsFromEmail;
            lhsFromEmail = this.getFromEmail();
            String rhsFromEmail;
            rhsFromEmail = that.getFromEmail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromEmail", lhsFromEmail), LocatorUtils.property(thatLocator, "fromEmail", rhsFromEmail), lhsFromEmail, rhsFromEmail)) {
                return false;
            }
        }
        {
            String lhsToEmail;
            lhsToEmail = this.getToEmail();
            String rhsToEmail;
            rhsToEmail = that.getToEmail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toEmail", lhsToEmail), LocatorUtils.property(thatLocator, "toEmail", rhsToEmail), lhsToEmail, rhsToEmail)) {
                return false;
            }
        }
        {
            String lhsSubject;
            lhsSubject = this.getSubject();
            String rhsSubject;
            rhsSubject = that.getSubject();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subject", lhsSubject), LocatorUtils.property(thatLocator, "subject", rhsSubject), lhsSubject, rhsSubject)) {
                return false;
            }
        }
        {
            String lhsBodyText;
            lhsBodyText = this.getBodyText();
            String rhsBodyText;
            rhsBodyText = that.getBodyText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bodyText", lhsBodyText), LocatorUtils.property(thatLocator, "bodyText", rhsBodyText), lhsBodyText, rhsBodyText)) {
                return false;
            }
        }
        {
            int lhsEmailStatusId;
            lhsEmailStatusId = this.getEmailStatusId();
            int rhsEmailStatusId;
            rhsEmailStatusId = that.getEmailStatusId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emailStatusId", lhsEmailStatusId), LocatorUtils.property(thatLocator, "emailStatusId", rhsEmailStatusId), lhsEmailStatusId, rhsEmailStatusId)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDeliveryDate;
            lhsDeliveryDate = this.getDeliveryDate();
            XMLGregorianCalendar rhsDeliveryDate;
            rhsDeliveryDate = that.getDeliveryDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deliveryDate", lhsDeliveryDate), LocatorUtils.property(thatLocator, "deliveryDate", rhsDeliveryDate), lhsDeliveryDate, rhsDeliveryDate)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theNotificationId;
            theNotificationId = this.getNotificationId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notificationId", theNotificationId), currentHashCode, theNotificationId);
        }
        {
            int theFromUserId;
            theFromUserId = this.getFromUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromUserId", theFromUserId), currentHashCode, theFromUserId);
        }
        {
            int theToUserId;
            theToUserId = this.getToUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toUserId", theToUserId), currentHashCode, theToUserId);
        }
        {
            String theFromEmail;
            theFromEmail = this.getFromEmail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromEmail", theFromEmail), currentHashCode, theFromEmail);
        }
        {
            String theToEmail;
            theToEmail = this.getToEmail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toEmail", theToEmail), currentHashCode, theToEmail);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subject", theSubject), currentHashCode, theSubject);
        }
        {
            String theBodyText;
            theBodyText = this.getBodyText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bodyText", theBodyText), currentHashCode, theBodyText);
        }
        {
            int theEmailStatusId;
            theEmailStatusId = this.getEmailStatusId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emailStatusId", theEmailStatusId), currentHashCode, theEmailStatusId);
        }
        {
            XMLGregorianCalendar theDeliveryDate;
            theDeliveryDate = this.getDeliveryDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deliveryDate", theDeliveryDate), currentHashCode, theDeliveryDate);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof TrNotificationQDomain) {
            final TrNotificationQDomain copy = ((TrNotificationQDomain) draftCopy);
            int sourceNotificationId;
            sourceNotificationId = this.getNotificationId();
            int copyNotificationId = strategy.copy(LocatorUtils.property(locator, "notificationId", sourceNotificationId), sourceNotificationId);
            copy.setNotificationId(copyNotificationId);
            int sourceFromUserId;
            sourceFromUserId = this.getFromUserId();
            int copyFromUserId = strategy.copy(LocatorUtils.property(locator, "fromUserId", sourceFromUserId), sourceFromUserId);
            copy.setFromUserId(copyFromUserId);
            int sourceToUserId;
            sourceToUserId = this.getToUserId();
            int copyToUserId = strategy.copy(LocatorUtils.property(locator, "toUserId", sourceToUserId), sourceToUserId);
            copy.setToUserId(copyToUserId);
            if (this.fromEmail!= null) {
                String sourceFromEmail;
                sourceFromEmail = this.getFromEmail();
                String copyFromEmail = ((String) strategy.copy(LocatorUtils.property(locator, "fromEmail", sourceFromEmail), sourceFromEmail));
                copy.setFromEmail(copyFromEmail);
            } else {
                copy.fromEmail = null;
            }
            if (this.toEmail!= null) {
                String sourceToEmail;
                sourceToEmail = this.getToEmail();
                String copyToEmail = ((String) strategy.copy(LocatorUtils.property(locator, "toEmail", sourceToEmail), sourceToEmail));
                copy.setToEmail(copyToEmail);
            } else {
                copy.toEmail = null;
            }
            if (this.subject!= null) {
                String sourceSubject;
                sourceSubject = this.getSubject();
                String copySubject = ((String) strategy.copy(LocatorUtils.property(locator, "subject", sourceSubject), sourceSubject));
                copy.setSubject(copySubject);
            } else {
                copy.subject = null;
            }
            if (this.bodyText!= null) {
                String sourceBodyText;
                sourceBodyText = this.getBodyText();
                String copyBodyText = ((String) strategy.copy(LocatorUtils.property(locator, "bodyText", sourceBodyText), sourceBodyText));
                copy.setBodyText(copyBodyText);
            } else {
                copy.bodyText = null;
            }
            int sourceEmailStatusId;
            sourceEmailStatusId = this.getEmailStatusId();
            int copyEmailStatusId = strategy.copy(LocatorUtils.property(locator, "emailStatusId", sourceEmailStatusId), sourceEmailStatusId);
            copy.setEmailStatusId(copyEmailStatusId);
            if (this.deliveryDate!= null) {
                XMLGregorianCalendar sourceDeliveryDate;
                sourceDeliveryDate = this.getDeliveryDate();
                XMLGregorianCalendar copyDeliveryDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "deliveryDate", sourceDeliveryDate), sourceDeliveryDate));
                copy.setDeliveryDate(copyDeliveryDate);
            } else {
                copy.deliveryDate = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new TrNotificationQDomain();
    }

}
