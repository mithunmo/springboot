//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for trPortfolioContestDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="trPortfolioContestDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="contestId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="portfolioId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="projectType">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="projectStatus">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boardDimension">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boardDimensionDomain" type="{http://domain.businessobjects.f9g4.com}adLookupValuesDomain"/>
 *         &lt;element name="boardFormat">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boardFormatDomain" type="{http://domain.businessobjects.f9g4.com}adLookupValuesDomain"/>
 *         &lt;element name="numberOfWinners">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="otherInformation">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="4000"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="deliverable">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="4000"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="associatedBrandsInfluence">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="associatedBrandsHangWith">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="langCode">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="10"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="startDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="0001-01-01T00:00:00.000000000"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59.000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="endDate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="0001-01-01T00:00:00.000000000"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59.000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="category">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="4000"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="introduction">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="4000"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="contestPortfolioDomain" type="{http://domain.businessobjects.f9g4.com}trPortfolioDomain"/>
 *         &lt;element name="contestMemberDomain" type="{http://domain.businessobjects.f9g4.com}trPortfolioContestMembersDomain"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "trPortfolioContestDomain", propOrder = {
    "contestId",
    "portfolioId",
    "projectType",
    "projectStatus",
    "boardDimension",
    "boardDimensionDomain",
    "boardFormat",
    "boardFormatDomain",
    "numberOfWinners",
    "otherInformation",
    "deliverable",
    "associatedBrandsInfluence",
    "associatedBrandsHangWith",
    "langCode",
    "createdby",
    "lastupdateby",
    "startDate",
    "endDate",
    "category",
    "introduction",
    "contestPortfolioDomain",
    "contestMemberDomain"
})
public class TrPortfolioContestDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int contestId;
    protected int portfolioId;
    protected int projectType;
    protected int projectStatus;
    protected int boardDimension;
    @XmlElement(required = true)
    protected AdLookupValuesDomain boardDimensionDomain;
    protected int boardFormat;
    @XmlElement(required = true)
    protected AdLookupValuesDomain boardFormatDomain;
    protected int numberOfWinners;
    @XmlElement(required = true, defaultValue = "{{DEFAULT}}")
    protected String otherInformation;
    @XmlElement(required = true, defaultValue = "{{DEFAULT}}")
    protected String deliverable;
    @XmlElement(required = true, defaultValue = "{{DEFAULT}}")
    protected String associatedBrandsInfluence;
    @XmlElement(required = true, defaultValue = "{{DEFAULT}}")
    protected String associatedBrandsHangWith;
    @XmlElement(required = true, defaultValue = "en-US")
    protected String langCode;
    protected int createdby;
    protected int lastupdateby;
    @XmlElement(required = true)
    protected XMLGregorianCalendar startDate;
    @XmlElement(required = true)
    protected XMLGregorianCalendar endDate;
    @XmlElement(required = true)
    protected String category;
    @XmlElement(required = true, defaultValue = "{{DEFAULT}}")
    protected String introduction;
    @XmlElement(required = true)
    protected TrPortfolioDomain contestPortfolioDomain;
    @XmlElement(required = true)
    protected TrPortfolioContestMembersDomain contestMemberDomain;

    /**
     * Default no-arg constructor
     * 
     */
    public TrPortfolioContestDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TrPortfolioContestDomain(final int contestId, final int portfolioId, final int projectType, final int projectStatus, final int boardDimension, final AdLookupValuesDomain boardDimensionDomain, final int boardFormat, final AdLookupValuesDomain boardFormatDomain, final int numberOfWinners, final String otherInformation, final String deliverable, final String associatedBrandsInfluence, final String associatedBrandsHangWith, final String langCode, final int createdby, final int lastupdateby, final XMLGregorianCalendar startDate, final XMLGregorianCalendar endDate, final String category, final String introduction, final TrPortfolioDomain contestPortfolioDomain, final TrPortfolioContestMembersDomain contestMemberDomain) {
        this.contestId = contestId;
        this.portfolioId = portfolioId;
        this.projectType = projectType;
        this.projectStatus = projectStatus;
        this.boardDimension = boardDimension;
        this.boardDimensionDomain = boardDimensionDomain;
        this.boardFormat = boardFormat;
        this.boardFormatDomain = boardFormatDomain;
        this.numberOfWinners = numberOfWinners;
        this.otherInformation = otherInformation;
        this.deliverable = deliverable;
        this.associatedBrandsInfluence = associatedBrandsInfluence;
        this.associatedBrandsHangWith = associatedBrandsHangWith;
        this.langCode = langCode;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
        this.startDate = startDate;
        this.endDate = endDate;
        this.category = category;
        this.introduction = introduction;
        this.contestPortfolioDomain = contestPortfolioDomain;
        this.contestMemberDomain = contestMemberDomain;
    }

    /**
     * Gets the value of the contestId property.
     * 
     */
    public int getContestId() {
        return contestId;
    }

    /**
     * Sets the value of the contestId property.
     * 
     */
    public void setContestId(int value) {
        this.contestId = value;
    }

    /**
     * Gets the value of the portfolioId property.
     * 
     */
    public int getPortfolioId() {
        return portfolioId;
    }

    /**
     * Sets the value of the portfolioId property.
     * 
     */
    public void setPortfolioId(int value) {
        this.portfolioId = value;
    }

    /**
     * Gets the value of the projectType property.
     * 
     */
    public int getProjectType() {
        return projectType;
    }

    /**
     * Sets the value of the projectType property.
     * 
     */
    public void setProjectType(int value) {
        this.projectType = value;
    }

    /**
     * Gets the value of the projectStatus property.
     * 
     */
    public int getProjectStatus() {
        return projectStatus;
    }

    /**
     * Sets the value of the projectStatus property.
     * 
     */
    public void setProjectStatus(int value) {
        this.projectStatus = value;
    }

    /**
     * Gets the value of the boardDimension property.
     * 
     */
    public int getBoardDimension() {
        return boardDimension;
    }

    /**
     * Sets the value of the boardDimension property.
     * 
     */
    public void setBoardDimension(int value) {
        this.boardDimension = value;
    }

    /**
     * Gets the value of the boardDimensionDomain property.
     * 
     * @return
     *     possible object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public AdLookupValuesDomain getBoardDimensionDomain() {
        return boardDimensionDomain;
    }

    /**
     * Sets the value of the boardDimensionDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public void setBoardDimensionDomain(AdLookupValuesDomain value) {
        this.boardDimensionDomain = value;
    }

    /**
     * Gets the value of the boardFormat property.
     * 
     */
    public int getBoardFormat() {
        return boardFormat;
    }

    /**
     * Sets the value of the boardFormat property.
     * 
     */
    public void setBoardFormat(int value) {
        this.boardFormat = value;
    }

    /**
     * Gets the value of the boardFormatDomain property.
     * 
     * @return
     *     possible object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public AdLookupValuesDomain getBoardFormatDomain() {
        return boardFormatDomain;
    }

    /**
     * Sets the value of the boardFormatDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdLookupValuesDomain }
     *     
     */
    public void setBoardFormatDomain(AdLookupValuesDomain value) {
        this.boardFormatDomain = value;
    }

    /**
     * Gets the value of the numberOfWinners property.
     * 
     */
    public int getNumberOfWinners() {
        return numberOfWinners;
    }

    /**
     * Sets the value of the numberOfWinners property.
     * 
     */
    public void setNumberOfWinners(int value) {
        this.numberOfWinners = value;
    }

    /**
     * Gets the value of the otherInformation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOtherInformation() {
        return otherInformation;
    }

    /**
     * Sets the value of the otherInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherInformation(String value) {
        this.otherInformation = value;
    }

    /**
     * Gets the value of the deliverable property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDeliverable() {
        return deliverable;
    }

    /**
     * Sets the value of the deliverable property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDeliverable(String value) {
        this.deliverable = value;
    }

    /**
     * Gets the value of the associatedBrandsInfluence property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAssociatedBrandsInfluence() {
        return associatedBrandsInfluence;
    }

    /**
     * Sets the value of the associatedBrandsInfluence property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAssociatedBrandsInfluence(String value) {
        this.associatedBrandsInfluence = value;
    }

    /**
     * Gets the value of the associatedBrandsHangWith property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAssociatedBrandsHangWith() {
        return associatedBrandsHangWith;
    }

    /**
     * Sets the value of the associatedBrandsHangWith property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAssociatedBrandsHangWith(String value) {
        this.associatedBrandsHangWith = value;
    }

    /**
     * Gets the value of the langCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLangCode() {
        return langCode;
    }

    /**
     * Sets the value of the langCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLangCode(String value) {
        this.langCode = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    /**
     * Gets the value of the startDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getStartDate() {
        return startDate;
    }

    /**
     * Sets the value of the startDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setStartDate(XMLGregorianCalendar value) {
        this.startDate = value;
    }

    /**
     * Gets the value of the endDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getEndDate() {
        return endDate;
    }

    /**
     * Sets the value of the endDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEndDate(XMLGregorianCalendar value) {
        this.endDate = value;
    }

    /**
     * Gets the value of the category property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCategory() {
        return category;
    }

    /**
     * Sets the value of the category property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCategory(String value) {
        this.category = value;
    }

    /**
     * Gets the value of the introduction property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIntroduction() {
        return introduction;
    }

    /**
     * Sets the value of the introduction property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIntroduction(String value) {
        this.introduction = value;
    }

    /**
     * Gets the value of the contestPortfolioDomain property.
     * 
     * @return
     *     possible object is
     *     {@link TrPortfolioDomain }
     *     
     */
    public TrPortfolioDomain getContestPortfolioDomain() {
        return contestPortfolioDomain;
    }

    /**
     * Sets the value of the contestPortfolioDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrPortfolioDomain }
     *     
     */
    public void setContestPortfolioDomain(TrPortfolioDomain value) {
        this.contestPortfolioDomain = value;
    }

    /**
     * Gets the value of the contestMemberDomain property.
     * 
     * @return
     *     possible object is
     *     {@link TrPortfolioContestMembersDomain }
     *     
     */
    public TrPortfolioContestMembersDomain getContestMemberDomain() {
        return contestMemberDomain;
    }

    /**
     * Sets the value of the contestMemberDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrPortfolioContestMembersDomain }
     *     
     */
    public void setContestMemberDomain(TrPortfolioContestMembersDomain value) {
        this.contestMemberDomain = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theContestId;
            theContestId = this.getContestId();
            strategy.appendField(locator, this, "contestId", buffer, theContestId);
        }
        {
            int thePortfolioId;
            thePortfolioId = this.getPortfolioId();
            strategy.appendField(locator, this, "portfolioId", buffer, thePortfolioId);
        }
        {
            int theProjectType;
            theProjectType = this.getProjectType();
            strategy.appendField(locator, this, "projectType", buffer, theProjectType);
        }
        {
            int theProjectStatus;
            theProjectStatus = this.getProjectStatus();
            strategy.appendField(locator, this, "projectStatus", buffer, theProjectStatus);
        }
        {
            int theBoardDimension;
            theBoardDimension = this.getBoardDimension();
            strategy.appendField(locator, this, "boardDimension", buffer, theBoardDimension);
        }
        {
            AdLookupValuesDomain theBoardDimensionDomain;
            theBoardDimensionDomain = this.getBoardDimensionDomain();
            strategy.appendField(locator, this, "boardDimensionDomain", buffer, theBoardDimensionDomain);
        }
        {
            int theBoardFormat;
            theBoardFormat = this.getBoardFormat();
            strategy.appendField(locator, this, "boardFormat", buffer, theBoardFormat);
        }
        {
            AdLookupValuesDomain theBoardFormatDomain;
            theBoardFormatDomain = this.getBoardFormatDomain();
            strategy.appendField(locator, this, "boardFormatDomain", buffer, theBoardFormatDomain);
        }
        {
            int theNumberOfWinners;
            theNumberOfWinners = this.getNumberOfWinners();
            strategy.appendField(locator, this, "numberOfWinners", buffer, theNumberOfWinners);
        }
        {
            String theOtherInformation;
            theOtherInformation = this.getOtherInformation();
            strategy.appendField(locator, this, "otherInformation", buffer, theOtherInformation);
        }
        {
            String theDeliverable;
            theDeliverable = this.getDeliverable();
            strategy.appendField(locator, this, "deliverable", buffer, theDeliverable);
        }
        {
            String theAssociatedBrandsInfluence;
            theAssociatedBrandsInfluence = this.getAssociatedBrandsInfluence();
            strategy.appendField(locator, this, "associatedBrandsInfluence", buffer, theAssociatedBrandsInfluence);
        }
        {
            String theAssociatedBrandsHangWith;
            theAssociatedBrandsHangWith = this.getAssociatedBrandsHangWith();
            strategy.appendField(locator, this, "associatedBrandsHangWith", buffer, theAssociatedBrandsHangWith);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            strategy.appendField(locator, this, "langCode", buffer, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        {
            XMLGregorianCalendar theStartDate;
            theStartDate = this.getStartDate();
            strategy.appendField(locator, this, "startDate", buffer, theStartDate);
        }
        {
            XMLGregorianCalendar theEndDate;
            theEndDate = this.getEndDate();
            strategy.appendField(locator, this, "endDate", buffer, theEndDate);
        }
        {
            String theCategory;
            theCategory = this.getCategory();
            strategy.appendField(locator, this, "category", buffer, theCategory);
        }
        {
            String theIntroduction;
            theIntroduction = this.getIntroduction();
            strategy.appendField(locator, this, "introduction", buffer, theIntroduction);
        }
        {
            TrPortfolioDomain theContestPortfolioDomain;
            theContestPortfolioDomain = this.getContestPortfolioDomain();
            strategy.appendField(locator, this, "contestPortfolioDomain", buffer, theContestPortfolioDomain);
        }
        {
            TrPortfolioContestMembersDomain theContestMemberDomain;
            theContestMemberDomain = this.getContestMemberDomain();
            strategy.appendField(locator, this, "contestMemberDomain", buffer, theContestMemberDomain);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TrPortfolioContestDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TrPortfolioContestDomain that = ((TrPortfolioContestDomain) object);
        {
            int lhsContestId;
            lhsContestId = this.getContestId();
            int rhsContestId;
            rhsContestId = that.getContestId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contestId", lhsContestId), LocatorUtils.property(thatLocator, "contestId", rhsContestId), lhsContestId, rhsContestId)) {
                return false;
            }
        }
        {
            int lhsPortfolioId;
            lhsPortfolioId = this.getPortfolioId();
            int rhsPortfolioId;
            rhsPortfolioId = that.getPortfolioId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfolioId", lhsPortfolioId), LocatorUtils.property(thatLocator, "portfolioId", rhsPortfolioId), lhsPortfolioId, rhsPortfolioId)) {
                return false;
            }
        }
        {
            int lhsProjectType;
            lhsProjectType = this.getProjectType();
            int rhsProjectType;
            rhsProjectType = that.getProjectType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "projectType", lhsProjectType), LocatorUtils.property(thatLocator, "projectType", rhsProjectType), lhsProjectType, rhsProjectType)) {
                return false;
            }
        }
        {
            int lhsProjectStatus;
            lhsProjectStatus = this.getProjectStatus();
            int rhsProjectStatus;
            rhsProjectStatus = that.getProjectStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "projectStatus", lhsProjectStatus), LocatorUtils.property(thatLocator, "projectStatus", rhsProjectStatus), lhsProjectStatus, rhsProjectStatus)) {
                return false;
            }
        }
        {
            int lhsBoardDimension;
            lhsBoardDimension = this.getBoardDimension();
            int rhsBoardDimension;
            rhsBoardDimension = that.getBoardDimension();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardDimension", lhsBoardDimension), LocatorUtils.property(thatLocator, "boardDimension", rhsBoardDimension), lhsBoardDimension, rhsBoardDimension)) {
                return false;
            }
        }
        {
            AdLookupValuesDomain lhsBoardDimensionDomain;
            lhsBoardDimensionDomain = this.getBoardDimensionDomain();
            AdLookupValuesDomain rhsBoardDimensionDomain;
            rhsBoardDimensionDomain = that.getBoardDimensionDomain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardDimensionDomain", lhsBoardDimensionDomain), LocatorUtils.property(thatLocator, "boardDimensionDomain", rhsBoardDimensionDomain), lhsBoardDimensionDomain, rhsBoardDimensionDomain)) {
                return false;
            }
        }
        {
            int lhsBoardFormat;
            lhsBoardFormat = this.getBoardFormat();
            int rhsBoardFormat;
            rhsBoardFormat = that.getBoardFormat();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardFormat", lhsBoardFormat), LocatorUtils.property(thatLocator, "boardFormat", rhsBoardFormat), lhsBoardFormat, rhsBoardFormat)) {
                return false;
            }
        }
        {
            AdLookupValuesDomain lhsBoardFormatDomain;
            lhsBoardFormatDomain = this.getBoardFormatDomain();
            AdLookupValuesDomain rhsBoardFormatDomain;
            rhsBoardFormatDomain = that.getBoardFormatDomain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardFormatDomain", lhsBoardFormatDomain), LocatorUtils.property(thatLocator, "boardFormatDomain", rhsBoardFormatDomain), lhsBoardFormatDomain, rhsBoardFormatDomain)) {
                return false;
            }
        }
        {
            int lhsNumberOfWinners;
            lhsNumberOfWinners = this.getNumberOfWinners();
            int rhsNumberOfWinners;
            rhsNumberOfWinners = that.getNumberOfWinners();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberOfWinners", lhsNumberOfWinners), LocatorUtils.property(thatLocator, "numberOfWinners", rhsNumberOfWinners), lhsNumberOfWinners, rhsNumberOfWinners)) {
                return false;
            }
        }
        {
            String lhsOtherInformation;
            lhsOtherInformation = this.getOtherInformation();
            String rhsOtherInformation;
            rhsOtherInformation = that.getOtherInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherInformation", lhsOtherInformation), LocatorUtils.property(thatLocator, "otherInformation", rhsOtherInformation), lhsOtherInformation, rhsOtherInformation)) {
                return false;
            }
        }
        {
            String lhsDeliverable;
            lhsDeliverable = this.getDeliverable();
            String rhsDeliverable;
            rhsDeliverable = that.getDeliverable();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deliverable", lhsDeliverable), LocatorUtils.property(thatLocator, "deliverable", rhsDeliverable), lhsDeliverable, rhsDeliverable)) {
                return false;
            }
        }
        {
            String lhsAssociatedBrandsInfluence;
            lhsAssociatedBrandsInfluence = this.getAssociatedBrandsInfluence();
            String rhsAssociatedBrandsInfluence;
            rhsAssociatedBrandsInfluence = that.getAssociatedBrandsInfluence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "associatedBrandsInfluence", lhsAssociatedBrandsInfluence), LocatorUtils.property(thatLocator, "associatedBrandsInfluence", rhsAssociatedBrandsInfluence), lhsAssociatedBrandsInfluence, rhsAssociatedBrandsInfluence)) {
                return false;
            }
        }
        {
            String lhsAssociatedBrandsHangWith;
            lhsAssociatedBrandsHangWith = this.getAssociatedBrandsHangWith();
            String rhsAssociatedBrandsHangWith;
            rhsAssociatedBrandsHangWith = that.getAssociatedBrandsHangWith();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "associatedBrandsHangWith", lhsAssociatedBrandsHangWith), LocatorUtils.property(thatLocator, "associatedBrandsHangWith", rhsAssociatedBrandsHangWith), lhsAssociatedBrandsHangWith, rhsAssociatedBrandsHangWith)) {
                return false;
            }
        }
        {
            String lhsLangCode;
            lhsLangCode = this.getLangCode();
            String rhsLangCode;
            rhsLangCode = that.getLangCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "langCode", lhsLangCode), LocatorUtils.property(thatLocator, "langCode", rhsLangCode), lhsLangCode, rhsLangCode)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsStartDate;
            lhsStartDate = this.getStartDate();
            XMLGregorianCalendar rhsStartDate;
            rhsStartDate = that.getStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "startDate", lhsStartDate), LocatorUtils.property(thatLocator, "startDate", rhsStartDate), lhsStartDate, rhsStartDate)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEndDate;
            lhsEndDate = this.getEndDate();
            XMLGregorianCalendar rhsEndDate;
            rhsEndDate = that.getEndDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "endDate", lhsEndDate), LocatorUtils.property(thatLocator, "endDate", rhsEndDate), lhsEndDate, rhsEndDate)) {
                return false;
            }
        }
        {
            String lhsCategory;
            lhsCategory = this.getCategory();
            String rhsCategory;
            rhsCategory = that.getCategory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "category", lhsCategory), LocatorUtils.property(thatLocator, "category", rhsCategory), lhsCategory, rhsCategory)) {
                return false;
            }
        }
        {
            String lhsIntroduction;
            lhsIntroduction = this.getIntroduction();
            String rhsIntroduction;
            rhsIntroduction = that.getIntroduction();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "introduction", lhsIntroduction), LocatorUtils.property(thatLocator, "introduction", rhsIntroduction), lhsIntroduction, rhsIntroduction)) {
                return false;
            }
        }
        {
            TrPortfolioDomain lhsContestPortfolioDomain;
            lhsContestPortfolioDomain = this.getContestPortfolioDomain();
            TrPortfolioDomain rhsContestPortfolioDomain;
            rhsContestPortfolioDomain = that.getContestPortfolioDomain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contestPortfolioDomain", lhsContestPortfolioDomain), LocatorUtils.property(thatLocator, "contestPortfolioDomain", rhsContestPortfolioDomain), lhsContestPortfolioDomain, rhsContestPortfolioDomain)) {
                return false;
            }
        }
        {
            TrPortfolioContestMembersDomain lhsContestMemberDomain;
            lhsContestMemberDomain = this.getContestMemberDomain();
            TrPortfolioContestMembersDomain rhsContestMemberDomain;
            rhsContestMemberDomain = that.getContestMemberDomain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contestMemberDomain", lhsContestMemberDomain), LocatorUtils.property(thatLocator, "contestMemberDomain", rhsContestMemberDomain), lhsContestMemberDomain, rhsContestMemberDomain)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theContestId;
            theContestId = this.getContestId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contestId", theContestId), currentHashCode, theContestId);
        }
        {
            int thePortfolioId;
            thePortfolioId = this.getPortfolioId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfolioId", thePortfolioId), currentHashCode, thePortfolioId);
        }
        {
            int theProjectType;
            theProjectType = this.getProjectType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "projectType", theProjectType), currentHashCode, theProjectType);
        }
        {
            int theProjectStatus;
            theProjectStatus = this.getProjectStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "projectStatus", theProjectStatus), currentHashCode, theProjectStatus);
        }
        {
            int theBoardDimension;
            theBoardDimension = this.getBoardDimension();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardDimension", theBoardDimension), currentHashCode, theBoardDimension);
        }
        {
            AdLookupValuesDomain theBoardDimensionDomain;
            theBoardDimensionDomain = this.getBoardDimensionDomain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardDimensionDomain", theBoardDimensionDomain), currentHashCode, theBoardDimensionDomain);
        }
        {
            int theBoardFormat;
            theBoardFormat = this.getBoardFormat();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardFormat", theBoardFormat), currentHashCode, theBoardFormat);
        }
        {
            AdLookupValuesDomain theBoardFormatDomain;
            theBoardFormatDomain = this.getBoardFormatDomain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardFormatDomain", theBoardFormatDomain), currentHashCode, theBoardFormatDomain);
        }
        {
            int theNumberOfWinners;
            theNumberOfWinners = this.getNumberOfWinners();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberOfWinners", theNumberOfWinners), currentHashCode, theNumberOfWinners);
        }
        {
            String theOtherInformation;
            theOtherInformation = this.getOtherInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherInformation", theOtherInformation), currentHashCode, theOtherInformation);
        }
        {
            String theDeliverable;
            theDeliverable = this.getDeliverable();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deliverable", theDeliverable), currentHashCode, theDeliverable);
        }
        {
            String theAssociatedBrandsInfluence;
            theAssociatedBrandsInfluence = this.getAssociatedBrandsInfluence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "associatedBrandsInfluence", theAssociatedBrandsInfluence), currentHashCode, theAssociatedBrandsInfluence);
        }
        {
            String theAssociatedBrandsHangWith;
            theAssociatedBrandsHangWith = this.getAssociatedBrandsHangWith();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "associatedBrandsHangWith", theAssociatedBrandsHangWith), currentHashCode, theAssociatedBrandsHangWith);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "langCode", theLangCode), currentHashCode, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        {
            XMLGregorianCalendar theStartDate;
            theStartDate = this.getStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "startDate", theStartDate), currentHashCode, theStartDate);
        }
        {
            XMLGregorianCalendar theEndDate;
            theEndDate = this.getEndDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "endDate", theEndDate), currentHashCode, theEndDate);
        }
        {
            String theCategory;
            theCategory = this.getCategory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "category", theCategory), currentHashCode, theCategory);
        }
        {
            String theIntroduction;
            theIntroduction = this.getIntroduction();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "introduction", theIntroduction), currentHashCode, theIntroduction);
        }
        {
            TrPortfolioDomain theContestPortfolioDomain;
            theContestPortfolioDomain = this.getContestPortfolioDomain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contestPortfolioDomain", theContestPortfolioDomain), currentHashCode, theContestPortfolioDomain);
        }
        {
            TrPortfolioContestMembersDomain theContestMemberDomain;
            theContestMemberDomain = this.getContestMemberDomain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contestMemberDomain", theContestMemberDomain), currentHashCode, theContestMemberDomain);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof TrPortfolioContestDomain) {
            final TrPortfolioContestDomain copy = ((TrPortfolioContestDomain) draftCopy);
            int sourceContestId;
            sourceContestId = this.getContestId();
            int copyContestId = strategy.copy(LocatorUtils.property(locator, "contestId", sourceContestId), sourceContestId);
            copy.setContestId(copyContestId);
            int sourcePortfolioId;
            sourcePortfolioId = this.getPortfolioId();
            int copyPortfolioId = strategy.copy(LocatorUtils.property(locator, "portfolioId", sourcePortfolioId), sourcePortfolioId);
            copy.setPortfolioId(copyPortfolioId);
            int sourceProjectType;
            sourceProjectType = this.getProjectType();
            int copyProjectType = strategy.copy(LocatorUtils.property(locator, "projectType", sourceProjectType), sourceProjectType);
            copy.setProjectType(copyProjectType);
            int sourceProjectStatus;
            sourceProjectStatus = this.getProjectStatus();
            int copyProjectStatus = strategy.copy(LocatorUtils.property(locator, "projectStatus", sourceProjectStatus), sourceProjectStatus);
            copy.setProjectStatus(copyProjectStatus);
            int sourceBoardDimension;
            sourceBoardDimension = this.getBoardDimension();
            int copyBoardDimension = strategy.copy(LocatorUtils.property(locator, "boardDimension", sourceBoardDimension), sourceBoardDimension);
            copy.setBoardDimension(copyBoardDimension);
            if (this.boardDimensionDomain!= null) {
                AdLookupValuesDomain sourceBoardDimensionDomain;
                sourceBoardDimensionDomain = this.getBoardDimensionDomain();
                AdLookupValuesDomain copyBoardDimensionDomain = ((AdLookupValuesDomain) strategy.copy(LocatorUtils.property(locator, "boardDimensionDomain", sourceBoardDimensionDomain), sourceBoardDimensionDomain));
                copy.setBoardDimensionDomain(copyBoardDimensionDomain);
            } else {
                copy.boardDimensionDomain = null;
            }
            int sourceBoardFormat;
            sourceBoardFormat = this.getBoardFormat();
            int copyBoardFormat = strategy.copy(LocatorUtils.property(locator, "boardFormat", sourceBoardFormat), sourceBoardFormat);
            copy.setBoardFormat(copyBoardFormat);
            if (this.boardFormatDomain!= null) {
                AdLookupValuesDomain sourceBoardFormatDomain;
                sourceBoardFormatDomain = this.getBoardFormatDomain();
                AdLookupValuesDomain copyBoardFormatDomain = ((AdLookupValuesDomain) strategy.copy(LocatorUtils.property(locator, "boardFormatDomain", sourceBoardFormatDomain), sourceBoardFormatDomain));
                copy.setBoardFormatDomain(copyBoardFormatDomain);
            } else {
                copy.boardFormatDomain = null;
            }
            int sourceNumberOfWinners;
            sourceNumberOfWinners = this.getNumberOfWinners();
            int copyNumberOfWinners = strategy.copy(LocatorUtils.property(locator, "numberOfWinners", sourceNumberOfWinners), sourceNumberOfWinners);
            copy.setNumberOfWinners(copyNumberOfWinners);
            if (this.otherInformation!= null) {
                String sourceOtherInformation;
                sourceOtherInformation = this.getOtherInformation();
                String copyOtherInformation = ((String) strategy.copy(LocatorUtils.property(locator, "otherInformation", sourceOtherInformation), sourceOtherInformation));
                copy.setOtherInformation(copyOtherInformation);
            } else {
                copy.otherInformation = null;
            }
            if (this.deliverable!= null) {
                String sourceDeliverable;
                sourceDeliverable = this.getDeliverable();
                String copyDeliverable = ((String) strategy.copy(LocatorUtils.property(locator, "deliverable", sourceDeliverable), sourceDeliverable));
                copy.setDeliverable(copyDeliverable);
            } else {
                copy.deliverable = null;
            }
            if (this.associatedBrandsInfluence!= null) {
                String sourceAssociatedBrandsInfluence;
                sourceAssociatedBrandsInfluence = this.getAssociatedBrandsInfluence();
                String copyAssociatedBrandsInfluence = ((String) strategy.copy(LocatorUtils.property(locator, "associatedBrandsInfluence", sourceAssociatedBrandsInfluence), sourceAssociatedBrandsInfluence));
                copy.setAssociatedBrandsInfluence(copyAssociatedBrandsInfluence);
            } else {
                copy.associatedBrandsInfluence = null;
            }
            if (this.associatedBrandsHangWith!= null) {
                String sourceAssociatedBrandsHangWith;
                sourceAssociatedBrandsHangWith = this.getAssociatedBrandsHangWith();
                String copyAssociatedBrandsHangWith = ((String) strategy.copy(LocatorUtils.property(locator, "associatedBrandsHangWith", sourceAssociatedBrandsHangWith), sourceAssociatedBrandsHangWith));
                copy.setAssociatedBrandsHangWith(copyAssociatedBrandsHangWith);
            } else {
                copy.associatedBrandsHangWith = null;
            }
            if (this.langCode!= null) {
                String sourceLangCode;
                sourceLangCode = this.getLangCode();
                String copyLangCode = ((String) strategy.copy(LocatorUtils.property(locator, "langCode", sourceLangCode), sourceLangCode));
                copy.setLangCode(copyLangCode);
            } else {
                copy.langCode = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
            if (this.startDate!= null) {
                XMLGregorianCalendar sourceStartDate;
                sourceStartDate = this.getStartDate();
                XMLGregorianCalendar copyStartDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "startDate", sourceStartDate), sourceStartDate));
                copy.setStartDate(copyStartDate);
            } else {
                copy.startDate = null;
            }
            if (this.endDate!= null) {
                XMLGregorianCalendar sourceEndDate;
                sourceEndDate = this.getEndDate();
                XMLGregorianCalendar copyEndDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "endDate", sourceEndDate), sourceEndDate));
                copy.setEndDate(copyEndDate);
            } else {
                copy.endDate = null;
            }
            if (this.category!= null) {
                String sourceCategory;
                sourceCategory = this.getCategory();
                String copyCategory = ((String) strategy.copy(LocatorUtils.property(locator, "category", sourceCategory), sourceCategory));
                copy.setCategory(copyCategory);
            } else {
                copy.category = null;
            }
            if (this.introduction!= null) {
                String sourceIntroduction;
                sourceIntroduction = this.getIntroduction();
                String copyIntroduction = ((String) strategy.copy(LocatorUtils.property(locator, "introduction", sourceIntroduction), sourceIntroduction));
                copy.setIntroduction(copyIntroduction);
            } else {
                copy.introduction = null;
            }
            if (this.contestPortfolioDomain!= null) {
                TrPortfolioDomain sourceContestPortfolioDomain;
                sourceContestPortfolioDomain = this.getContestPortfolioDomain();
                TrPortfolioDomain copyContestPortfolioDomain = ((TrPortfolioDomain) strategy.copy(LocatorUtils.property(locator, "contestPortfolioDomain", sourceContestPortfolioDomain), sourceContestPortfolioDomain));
                copy.setContestPortfolioDomain(copyContestPortfolioDomain);
            } else {
                copy.contestPortfolioDomain = null;
            }
            if (this.contestMemberDomain!= null) {
                TrPortfolioContestMembersDomain sourceContestMemberDomain;
                sourceContestMemberDomain = this.getContestMemberDomain();
                TrPortfolioContestMembersDomain copyContestMemberDomain = ((TrPortfolioContestMembersDomain) strategy.copy(LocatorUtils.property(locator, "contestMemberDomain", sourceContestMemberDomain), sourceContestMemberDomain));
                copy.setContestMemberDomain(copyContestMemberDomain);
            } else {
                copy.contestMemberDomain = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new TrPortfolioContestDomain();
    }

}
