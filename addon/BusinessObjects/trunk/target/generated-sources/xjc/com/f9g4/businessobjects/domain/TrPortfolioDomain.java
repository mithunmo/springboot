//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for trPortfolioDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="trPortfolioDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="portfolioId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="name">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="description">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="4000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="seasonYearId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="categoryLevel1Id">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="categoryLevel1">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="categoryLevel2Id">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="categoryLevel2">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="userId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="user" type="{http://domain.businessobjects.f9g4.com}adUsersDomain"/>
 *         &lt;element name="activeStatus">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="langCode">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="10"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boards" type="{http://domain.businessobjects.f9g4.com}trBoardDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="portfolioImages" type="{http://domain.businessobjects.f9g4.com}trPortfolioImagesDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="sellable">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "trPortfolioDomain", propOrder = {
    "portfolioId",
    "name",
    "description",
    "seasonYearId",
    "categoryLevel1Id",
    "categoryLevel1",
    "categoryLevel2Id",
    "categoryLevel2",
    "userId",
    "user",
    "activeStatus",
    "langCode",
    "createdby",
    "lastupdateby",
    "boards",
    "portfolioImages",
    "sellable"
})
public class TrPortfolioDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int portfolioId;
    @XmlElement(required = true)
    protected String name;
    @XmlElement(required = true)
    protected String description;
    protected int seasonYearId;
    protected int categoryLevel1Id;
    @XmlElement(required = true)
    protected String categoryLevel1;
    protected int categoryLevel2Id;
    @XmlElement(required = true)
    protected String categoryLevel2;
    protected int userId;
    @XmlElement(required = true)
    protected AdUsersDomain user;
    protected int activeStatus;
    @XmlElement(required = true, defaultValue = "en-US")
    protected String langCode;
    protected int createdby;
    protected int lastupdateby;
    protected List<TrBoardDomain> boards;
    protected List<TrPortfolioImagesDomain> portfolioImages;
    protected int sellable;

    /**
     * Default no-arg constructor
     * 
     */
    public TrPortfolioDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TrPortfolioDomain(final int portfolioId, final String name, final String description, final int seasonYearId, final int categoryLevel1Id, final String categoryLevel1, final int categoryLevel2Id, final String categoryLevel2, final int userId, final AdUsersDomain user, final int activeStatus, final String langCode, final int createdby, final int lastupdateby, final List<TrBoardDomain> boards, final List<TrPortfolioImagesDomain> portfolioImages, final int sellable) {
        this.portfolioId = portfolioId;
        this.name = name;
        this.description = description;
        this.seasonYearId = seasonYearId;
        this.categoryLevel1Id = categoryLevel1Id;
        this.categoryLevel1 = categoryLevel1;
        this.categoryLevel2Id = categoryLevel2Id;
        this.categoryLevel2 = categoryLevel2;
        this.userId = userId;
        this.user = user;
        this.activeStatus = activeStatus;
        this.langCode = langCode;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
        this.boards = boards;
        this.portfolioImages = portfolioImages;
        this.sellable = sellable;
    }

    /**
     * Gets the value of the portfolioId property.
     * 
     */
    public int getPortfolioId() {
        return portfolioId;
    }

    /**
     * Sets the value of the portfolioId property.
     * 
     */
    public void setPortfolioId(int value) {
        this.portfolioId = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the seasonYearId property.
     * 
     */
    public int getSeasonYearId() {
        return seasonYearId;
    }

    /**
     * Sets the value of the seasonYearId property.
     * 
     */
    public void setSeasonYearId(int value) {
        this.seasonYearId = value;
    }

    /**
     * Gets the value of the categoryLevel1Id property.
     * 
     */
    public int getCategoryLevel1Id() {
        return categoryLevel1Id;
    }

    /**
     * Sets the value of the categoryLevel1Id property.
     * 
     */
    public void setCategoryLevel1Id(int value) {
        this.categoryLevel1Id = value;
    }

    /**
     * Gets the value of the categoryLevel1 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCategoryLevel1() {
        return categoryLevel1;
    }

    /**
     * Sets the value of the categoryLevel1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCategoryLevel1(String value) {
        this.categoryLevel1 = value;
    }

    /**
     * Gets the value of the categoryLevel2Id property.
     * 
     */
    public int getCategoryLevel2Id() {
        return categoryLevel2Id;
    }

    /**
     * Sets the value of the categoryLevel2Id property.
     * 
     */
    public void setCategoryLevel2Id(int value) {
        this.categoryLevel2Id = value;
    }

    /**
     * Gets the value of the categoryLevel2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCategoryLevel2() {
        return categoryLevel2;
    }

    /**
     * Sets the value of the categoryLevel2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCategoryLevel2(String value) {
        this.categoryLevel2 = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     */
    public void setUserId(int value) {
        this.userId = value;
    }

    /**
     * Gets the value of the user property.
     * 
     * @return
     *     possible object is
     *     {@link AdUsersDomain }
     *     
     */
    public AdUsersDomain getUser() {
        return user;
    }

    /**
     * Sets the value of the user property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdUsersDomain }
     *     
     */
    public void setUser(AdUsersDomain value) {
        this.user = value;
    }

    /**
     * Gets the value of the activeStatus property.
     * 
     */
    public int getActiveStatus() {
        return activeStatus;
    }

    /**
     * Sets the value of the activeStatus property.
     * 
     */
    public void setActiveStatus(int value) {
        this.activeStatus = value;
    }

    /**
     * Gets the value of the langCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLangCode() {
        return langCode;
    }

    /**
     * Sets the value of the langCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLangCode(String value) {
        this.langCode = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    /**
     * Gets the value of the boards property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the boards property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBoards().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrBoardDomain }
     * 
     * 
     */
    public List<TrBoardDomain> getBoards() {
        if (boards == null) {
            boards = new ArrayList<TrBoardDomain>();
        }
        return this.boards;
    }

    /**
     * Gets the value of the portfolioImages property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the portfolioImages property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPortfolioImages().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrPortfolioImagesDomain }
     * 
     * 
     */
    public List<TrPortfolioImagesDomain> getPortfolioImages() {
        if (portfolioImages == null) {
            portfolioImages = new ArrayList<TrPortfolioImagesDomain>();
        }
        return this.portfolioImages;
    }

    /**
     * Gets the value of the sellable property.
     * 
     */
    public int getSellable() {
        return sellable;
    }

    /**
     * Sets the value of the sellable property.
     * 
     */
    public void setSellable(int value) {
        this.sellable = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int thePortfolioId;
            thePortfolioId = this.getPortfolioId();
            strategy.appendField(locator, this, "portfolioId", buffer, thePortfolioId);
        }
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription);
        }
        {
            int theSeasonYearId;
            theSeasonYearId = this.getSeasonYearId();
            strategy.appendField(locator, this, "seasonYearId", buffer, theSeasonYearId);
        }
        {
            int theCategoryLevel1Id;
            theCategoryLevel1Id = this.getCategoryLevel1Id();
            strategy.appendField(locator, this, "categoryLevel1Id", buffer, theCategoryLevel1Id);
        }
        {
            String theCategoryLevel1;
            theCategoryLevel1 = this.getCategoryLevel1();
            strategy.appendField(locator, this, "categoryLevel1", buffer, theCategoryLevel1);
        }
        {
            int theCategoryLevel2Id;
            theCategoryLevel2Id = this.getCategoryLevel2Id();
            strategy.appendField(locator, this, "categoryLevel2Id", buffer, theCategoryLevel2Id);
        }
        {
            String theCategoryLevel2;
            theCategoryLevel2 = this.getCategoryLevel2();
            strategy.appendField(locator, this, "categoryLevel2", buffer, theCategoryLevel2);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            AdUsersDomain theUser;
            theUser = this.getUser();
            strategy.appendField(locator, this, "user", buffer, theUser);
        }
        {
            int theActiveStatus;
            theActiveStatus = this.getActiveStatus();
            strategy.appendField(locator, this, "activeStatus", buffer, theActiveStatus);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            strategy.appendField(locator, this, "langCode", buffer, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        {
            List<TrBoardDomain> theBoards;
            theBoards = this.getBoards();
            strategy.appendField(locator, this, "boards", buffer, theBoards);
        }
        {
            List<TrPortfolioImagesDomain> thePortfolioImages;
            thePortfolioImages = this.getPortfolioImages();
            strategy.appendField(locator, this, "portfolioImages", buffer, thePortfolioImages);
        }
        {
            int theSellable;
            theSellable = this.getSellable();
            strategy.appendField(locator, this, "sellable", buffer, theSellable);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TrPortfolioDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TrPortfolioDomain that = ((TrPortfolioDomain) object);
        {
            int lhsPortfolioId;
            lhsPortfolioId = this.getPortfolioId();
            int rhsPortfolioId;
            rhsPortfolioId = that.getPortfolioId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfolioId", lhsPortfolioId), LocatorUtils.property(thatLocator, "portfolioId", rhsPortfolioId), lhsPortfolioId, rhsPortfolioId)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            int lhsSeasonYearId;
            lhsSeasonYearId = this.getSeasonYearId();
            int rhsSeasonYearId;
            rhsSeasonYearId = that.getSeasonYearId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "seasonYearId", lhsSeasonYearId), LocatorUtils.property(thatLocator, "seasonYearId", rhsSeasonYearId), lhsSeasonYearId, rhsSeasonYearId)) {
                return false;
            }
        }
        {
            int lhsCategoryLevel1Id;
            lhsCategoryLevel1Id = this.getCategoryLevel1Id();
            int rhsCategoryLevel1Id;
            rhsCategoryLevel1Id = that.getCategoryLevel1Id();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "categoryLevel1Id", lhsCategoryLevel1Id), LocatorUtils.property(thatLocator, "categoryLevel1Id", rhsCategoryLevel1Id), lhsCategoryLevel1Id, rhsCategoryLevel1Id)) {
                return false;
            }
        }
        {
            String lhsCategoryLevel1;
            lhsCategoryLevel1 = this.getCategoryLevel1();
            String rhsCategoryLevel1;
            rhsCategoryLevel1 = that.getCategoryLevel1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "categoryLevel1", lhsCategoryLevel1), LocatorUtils.property(thatLocator, "categoryLevel1", rhsCategoryLevel1), lhsCategoryLevel1, rhsCategoryLevel1)) {
                return false;
            }
        }
        {
            int lhsCategoryLevel2Id;
            lhsCategoryLevel2Id = this.getCategoryLevel2Id();
            int rhsCategoryLevel2Id;
            rhsCategoryLevel2Id = that.getCategoryLevel2Id();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "categoryLevel2Id", lhsCategoryLevel2Id), LocatorUtils.property(thatLocator, "categoryLevel2Id", rhsCategoryLevel2Id), lhsCategoryLevel2Id, rhsCategoryLevel2Id)) {
                return false;
            }
        }
        {
            String lhsCategoryLevel2;
            lhsCategoryLevel2 = this.getCategoryLevel2();
            String rhsCategoryLevel2;
            rhsCategoryLevel2 = that.getCategoryLevel2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "categoryLevel2", lhsCategoryLevel2), LocatorUtils.property(thatLocator, "categoryLevel2", rhsCategoryLevel2), lhsCategoryLevel2, rhsCategoryLevel2)) {
                return false;
            }
        }
        {
            int lhsUserId;
            lhsUserId = this.getUserId();
            int rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            AdUsersDomain lhsUser;
            lhsUser = this.getUser();
            AdUsersDomain rhsUser;
            rhsUser = that.getUser();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "user", lhsUser), LocatorUtils.property(thatLocator, "user", rhsUser), lhsUser, rhsUser)) {
                return false;
            }
        }
        {
            int lhsActiveStatus;
            lhsActiveStatus = this.getActiveStatus();
            int rhsActiveStatus;
            rhsActiveStatus = that.getActiveStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activeStatus", lhsActiveStatus), LocatorUtils.property(thatLocator, "activeStatus", rhsActiveStatus), lhsActiveStatus, rhsActiveStatus)) {
                return false;
            }
        }
        {
            String lhsLangCode;
            lhsLangCode = this.getLangCode();
            String rhsLangCode;
            rhsLangCode = that.getLangCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "langCode", lhsLangCode), LocatorUtils.property(thatLocator, "langCode", rhsLangCode), lhsLangCode, rhsLangCode)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        {
            List<TrBoardDomain> lhsBoards;
            lhsBoards = this.getBoards();
            List<TrBoardDomain> rhsBoards;
            rhsBoards = that.getBoards();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boards", lhsBoards), LocatorUtils.property(thatLocator, "boards", rhsBoards), lhsBoards, rhsBoards)) {
                return false;
            }
        }
        {
            List<TrPortfolioImagesDomain> lhsPortfolioImages;
            lhsPortfolioImages = this.getPortfolioImages();
            List<TrPortfolioImagesDomain> rhsPortfolioImages;
            rhsPortfolioImages = that.getPortfolioImages();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfolioImages", lhsPortfolioImages), LocatorUtils.property(thatLocator, "portfolioImages", rhsPortfolioImages), lhsPortfolioImages, rhsPortfolioImages)) {
                return false;
            }
        }
        {
            int lhsSellable;
            lhsSellable = this.getSellable();
            int rhsSellable;
            rhsSellable = that.getSellable();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sellable", lhsSellable), LocatorUtils.property(thatLocator, "sellable", rhsSellable), lhsSellable, rhsSellable)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int thePortfolioId;
            thePortfolioId = this.getPortfolioId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfolioId", thePortfolioId), currentHashCode, thePortfolioId);
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            int theSeasonYearId;
            theSeasonYearId = this.getSeasonYearId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "seasonYearId", theSeasonYearId), currentHashCode, theSeasonYearId);
        }
        {
            int theCategoryLevel1Id;
            theCategoryLevel1Id = this.getCategoryLevel1Id();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "categoryLevel1Id", theCategoryLevel1Id), currentHashCode, theCategoryLevel1Id);
        }
        {
            String theCategoryLevel1;
            theCategoryLevel1 = this.getCategoryLevel1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "categoryLevel1", theCategoryLevel1), currentHashCode, theCategoryLevel1);
        }
        {
            int theCategoryLevel2Id;
            theCategoryLevel2Id = this.getCategoryLevel2Id();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "categoryLevel2Id", theCategoryLevel2Id), currentHashCode, theCategoryLevel2Id);
        }
        {
            String theCategoryLevel2;
            theCategoryLevel2 = this.getCategoryLevel2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "categoryLevel2", theCategoryLevel2), currentHashCode, theCategoryLevel2);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            AdUsersDomain theUser;
            theUser = this.getUser();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "user", theUser), currentHashCode, theUser);
        }
        {
            int theActiveStatus;
            theActiveStatus = this.getActiveStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activeStatus", theActiveStatus), currentHashCode, theActiveStatus);
        }
        {
            String theLangCode;
            theLangCode = this.getLangCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "langCode", theLangCode), currentHashCode, theLangCode);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        {
            List<TrBoardDomain> theBoards;
            theBoards = this.getBoards();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boards", theBoards), currentHashCode, theBoards);
        }
        {
            List<TrPortfolioImagesDomain> thePortfolioImages;
            thePortfolioImages = this.getPortfolioImages();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfolioImages", thePortfolioImages), currentHashCode, thePortfolioImages);
        }
        {
            int theSellable;
            theSellable = this.getSellable();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sellable", theSellable), currentHashCode, theSellable);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof TrPortfolioDomain) {
            final TrPortfolioDomain copy = ((TrPortfolioDomain) draftCopy);
            int sourcePortfolioId;
            sourcePortfolioId = this.getPortfolioId();
            int copyPortfolioId = strategy.copy(LocatorUtils.property(locator, "portfolioId", sourcePortfolioId), sourcePortfolioId);
            copy.setPortfolioId(copyPortfolioId);
            if (this.name!= null) {
                String sourceName;
                sourceName = this.getName();
                String copyName = ((String) strategy.copy(LocatorUtils.property(locator, "name", sourceName), sourceName));
                copy.setName(copyName);
            } else {
                copy.name = null;
            }
            if (this.description!= null) {
                String sourceDescription;
                sourceDescription = this.getDescription();
                String copyDescription = ((String) strategy.copy(LocatorUtils.property(locator, "description", sourceDescription), sourceDescription));
                copy.setDescription(copyDescription);
            } else {
                copy.description = null;
            }
            int sourceSeasonYearId;
            sourceSeasonYearId = this.getSeasonYearId();
            int copySeasonYearId = strategy.copy(LocatorUtils.property(locator, "seasonYearId", sourceSeasonYearId), sourceSeasonYearId);
            copy.setSeasonYearId(copySeasonYearId);
            int sourceCategoryLevel1Id;
            sourceCategoryLevel1Id = this.getCategoryLevel1Id();
            int copyCategoryLevel1Id = strategy.copy(LocatorUtils.property(locator, "categoryLevel1Id", sourceCategoryLevel1Id), sourceCategoryLevel1Id);
            copy.setCategoryLevel1Id(copyCategoryLevel1Id);
            if (this.categoryLevel1 != null) {
                String sourceCategoryLevel1;
                sourceCategoryLevel1 = this.getCategoryLevel1();
                String copyCategoryLevel1 = ((String) strategy.copy(LocatorUtils.property(locator, "categoryLevel1", sourceCategoryLevel1), sourceCategoryLevel1));
                copy.setCategoryLevel1(copyCategoryLevel1);
            } else {
                copy.categoryLevel1 = null;
            }
            int sourceCategoryLevel2Id;
            sourceCategoryLevel2Id = this.getCategoryLevel2Id();
            int copyCategoryLevel2Id = strategy.copy(LocatorUtils.property(locator, "categoryLevel2Id", sourceCategoryLevel2Id), sourceCategoryLevel2Id);
            copy.setCategoryLevel2Id(copyCategoryLevel2Id);
            if (this.categoryLevel2 != null) {
                String sourceCategoryLevel2;
                sourceCategoryLevel2 = this.getCategoryLevel2();
                String copyCategoryLevel2 = ((String) strategy.copy(LocatorUtils.property(locator, "categoryLevel2", sourceCategoryLevel2), sourceCategoryLevel2));
                copy.setCategoryLevel2(copyCategoryLevel2);
            } else {
                copy.categoryLevel2 = null;
            }
            int sourceUserId;
            sourceUserId = this.getUserId();
            int copyUserId = strategy.copy(LocatorUtils.property(locator, "userId", sourceUserId), sourceUserId);
            copy.setUserId(copyUserId);
            if (this.user!= null) {
                AdUsersDomain sourceUser;
                sourceUser = this.getUser();
                AdUsersDomain copyUser = ((AdUsersDomain) strategy.copy(LocatorUtils.property(locator, "user", sourceUser), sourceUser));
                copy.setUser(copyUser);
            } else {
                copy.user = null;
            }
            int sourceActiveStatus;
            sourceActiveStatus = this.getActiveStatus();
            int copyActiveStatus = strategy.copy(LocatorUtils.property(locator, "activeStatus", sourceActiveStatus), sourceActiveStatus);
            copy.setActiveStatus(copyActiveStatus);
            if (this.langCode!= null) {
                String sourceLangCode;
                sourceLangCode = this.getLangCode();
                String copyLangCode = ((String) strategy.copy(LocatorUtils.property(locator, "langCode", sourceLangCode), sourceLangCode));
                copy.setLangCode(copyLangCode);
            } else {
                copy.langCode = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
            if ((this.boards!= null)&&(!this.boards.isEmpty())) {
                List<TrBoardDomain> sourceBoards;
                sourceBoards = this.getBoards();
                @SuppressWarnings("unchecked")
                List<TrBoardDomain> copyBoards = ((List<TrBoardDomain> ) strategy.copy(LocatorUtils.property(locator, "boards", sourceBoards), sourceBoards));
                copy.boards = null;
                List<TrBoardDomain> uniqueBoardsl = copy.getBoards();
                uniqueBoardsl.addAll(copyBoards);
            } else {
                copy.boards = null;
            }
            if ((this.portfolioImages!= null)&&(!this.portfolioImages.isEmpty())) {
                List<TrPortfolioImagesDomain> sourcePortfolioImages;
                sourcePortfolioImages = this.getPortfolioImages();
                @SuppressWarnings("unchecked")
                List<TrPortfolioImagesDomain> copyPortfolioImages = ((List<TrPortfolioImagesDomain> ) strategy.copy(LocatorUtils.property(locator, "portfolioImages", sourcePortfolioImages), sourcePortfolioImages));
                copy.portfolioImages = null;
                List<TrPortfolioImagesDomain> uniquePortfolioImagesl = copy.getPortfolioImages();
                uniquePortfolioImagesl.addAll(copyPortfolioImages);
            } else {
                copy.portfolioImages = null;
            }
            int sourceSellable;
            sourceSellable = this.getSellable();
            int copySellable = strategy.copy(LocatorUtils.property(locator, "sellable", sourceSellable), sourceSellable);
            copy.setSellable(copySellable);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new TrPortfolioDomain();
    }

}
