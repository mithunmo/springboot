//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import java.math.BigDecimal;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for trSalesTransactionDetailsDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="trSalesTransactionDetailsDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="salesTransactionDetailId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="salesTransactionId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boardId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="userId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="sellerShare">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="commission">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="sellerPayDate" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="paymentStatusId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="comments">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "trSalesTransactionDetailsDomain", propOrder = {
    "salesTransactionDetailId",
    "salesTransactionId",
    "boardId",
    "userId",
    "sellerShare",
    "commission",
    "sellerPayDate",
    "paymentStatusId",
    "comments",
    "createdby",
    "lastupdateby"
})
public class TrSalesTransactionDetailsDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int salesTransactionDetailId;
    protected int salesTransactionId;
    protected int boardId;
    protected int userId;
    @XmlElement(required = true)
    protected BigDecimal sellerShare;
    @XmlElement(required = true)
    protected BigDecimal commission;
    @XmlElementRef(name = "sellerPayDate", namespace = "http://domain.businessobjects.f9g4.com", type = JAXBElement.class, required = false)
    protected JAXBElement<XMLGregorianCalendar> sellerPayDate;
    protected int paymentStatusId;
    @XmlElement(required = true)
    protected String comments;
    protected int createdby;
    protected int lastupdateby;

    /**
     * Default no-arg constructor
     * 
     */
    public TrSalesTransactionDetailsDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TrSalesTransactionDetailsDomain(final int salesTransactionDetailId, final int salesTransactionId, final int boardId, final int userId, final BigDecimal sellerShare, final BigDecimal commission, final JAXBElement<XMLGregorianCalendar> sellerPayDate, final int paymentStatusId, final String comments, final int createdby, final int lastupdateby) {
        this.salesTransactionDetailId = salesTransactionDetailId;
        this.salesTransactionId = salesTransactionId;
        this.boardId = boardId;
        this.userId = userId;
        this.sellerShare = sellerShare;
        this.commission = commission;
        this.sellerPayDate = sellerPayDate;
        this.paymentStatusId = paymentStatusId;
        this.comments = comments;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
    }

    /**
     * Gets the value of the salesTransactionDetailId property.
     * 
     */
    public int getSalesTransactionDetailId() {
        return salesTransactionDetailId;
    }

    /**
     * Sets the value of the salesTransactionDetailId property.
     * 
     */
    public void setSalesTransactionDetailId(int value) {
        this.salesTransactionDetailId = value;
    }

    /**
     * Gets the value of the salesTransactionId property.
     * 
     */
    public int getSalesTransactionId() {
        return salesTransactionId;
    }

    /**
     * Sets the value of the salesTransactionId property.
     * 
     */
    public void setSalesTransactionId(int value) {
        this.salesTransactionId = value;
    }

    /**
     * Gets the value of the boardId property.
     * 
     */
    public int getBoardId() {
        return boardId;
    }

    /**
     * Sets the value of the boardId property.
     * 
     */
    public void setBoardId(int value) {
        this.boardId = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     */
    public void setUserId(int value) {
        this.userId = value;
    }

    /**
     * Gets the value of the sellerShare property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getSellerShare() {
        return sellerShare;
    }

    /**
     * Sets the value of the sellerShare property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setSellerShare(BigDecimal value) {
        this.sellerShare = value;
    }

    /**
     * Gets the value of the commission property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getCommission() {
        return commission;
    }

    /**
     * Sets the value of the commission property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setCommission(BigDecimal value) {
        this.commission = value;
    }

    /**
     * Gets the value of the sellerPayDate property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link XMLGregorianCalendar }{@code >}
     *     
     */
    public JAXBElement<XMLGregorianCalendar> getSellerPayDate() {
        return sellerPayDate;
    }

    /**
     * Sets the value of the sellerPayDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link XMLGregorianCalendar }{@code >}
     *     
     */
    public void setSellerPayDate(JAXBElement<XMLGregorianCalendar> value) {
        this.sellerPayDate = ((JAXBElement<XMLGregorianCalendar> ) value);
    }

    /**
     * Gets the value of the paymentStatusId property.
     * 
     */
    public int getPaymentStatusId() {
        return paymentStatusId;
    }

    /**
     * Sets the value of the paymentStatusId property.
     * 
     */
    public void setPaymentStatusId(int value) {
        this.paymentStatusId = value;
    }

    /**
     * Gets the value of the comments property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getComments() {
        return comments;
    }

    /**
     * Sets the value of the comments property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComments(String value) {
        this.comments = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theSalesTransactionDetailId;
            theSalesTransactionDetailId = this.getSalesTransactionDetailId();
            strategy.appendField(locator, this, "salesTransactionDetailId", buffer, theSalesTransactionDetailId);
        }
        {
            int theSalesTransactionId;
            theSalesTransactionId = this.getSalesTransactionId();
            strategy.appendField(locator, this, "salesTransactionId", buffer, theSalesTransactionId);
        }
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            strategy.appendField(locator, this, "boardId", buffer, theBoardId);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            BigDecimal theSellerShare;
            theSellerShare = this.getSellerShare();
            strategy.appendField(locator, this, "sellerShare", buffer, theSellerShare);
        }
        {
            BigDecimal theCommission;
            theCommission = this.getCommission();
            strategy.appendField(locator, this, "commission", buffer, theCommission);
        }
        {
            JAXBElement<XMLGregorianCalendar> theSellerPayDate;
            theSellerPayDate = this.getSellerPayDate();
            strategy.appendField(locator, this, "sellerPayDate", buffer, theSellerPayDate);
        }
        {
            int thePaymentStatusId;
            thePaymentStatusId = this.getPaymentStatusId();
            strategy.appendField(locator, this, "paymentStatusId", buffer, thePaymentStatusId);
        }
        {
            String theComments;
            theComments = this.getComments();
            strategy.appendField(locator, this, "comments", buffer, theComments);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TrSalesTransactionDetailsDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TrSalesTransactionDetailsDomain that = ((TrSalesTransactionDetailsDomain) object);
        {
            int lhsSalesTransactionDetailId;
            lhsSalesTransactionDetailId = this.getSalesTransactionDetailId();
            int rhsSalesTransactionDetailId;
            rhsSalesTransactionDetailId = that.getSalesTransactionDetailId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTransactionDetailId", lhsSalesTransactionDetailId), LocatorUtils.property(thatLocator, "salesTransactionDetailId", rhsSalesTransactionDetailId), lhsSalesTransactionDetailId, rhsSalesTransactionDetailId)) {
                return false;
            }
        }
        {
            int lhsSalesTransactionId;
            lhsSalesTransactionId = this.getSalesTransactionId();
            int rhsSalesTransactionId;
            rhsSalesTransactionId = that.getSalesTransactionId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTransactionId", lhsSalesTransactionId), LocatorUtils.property(thatLocator, "salesTransactionId", rhsSalesTransactionId), lhsSalesTransactionId, rhsSalesTransactionId)) {
                return false;
            }
        }
        {
            int lhsBoardId;
            lhsBoardId = this.getBoardId();
            int rhsBoardId;
            rhsBoardId = that.getBoardId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardId", lhsBoardId), LocatorUtils.property(thatLocator, "boardId", rhsBoardId), lhsBoardId, rhsBoardId)) {
                return false;
            }
        }
        {
            int lhsUserId;
            lhsUserId = this.getUserId();
            int rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            BigDecimal lhsSellerShare;
            lhsSellerShare = this.getSellerShare();
            BigDecimal rhsSellerShare;
            rhsSellerShare = that.getSellerShare();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sellerShare", lhsSellerShare), LocatorUtils.property(thatLocator, "sellerShare", rhsSellerShare), lhsSellerShare, rhsSellerShare)) {
                return false;
            }
        }
        {
            BigDecimal lhsCommission;
            lhsCommission = this.getCommission();
            BigDecimal rhsCommission;
            rhsCommission = that.getCommission();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "commission", lhsCommission), LocatorUtils.property(thatLocator, "commission", rhsCommission), lhsCommission, rhsCommission)) {
                return false;
            }
        }
        {
            JAXBElement<XMLGregorianCalendar> lhsSellerPayDate;
            lhsSellerPayDate = this.getSellerPayDate();
            JAXBElement<XMLGregorianCalendar> rhsSellerPayDate;
            rhsSellerPayDate = that.getSellerPayDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sellerPayDate", lhsSellerPayDate), LocatorUtils.property(thatLocator, "sellerPayDate", rhsSellerPayDate), lhsSellerPayDate, rhsSellerPayDate)) {
                return false;
            }
        }
        {
            int lhsPaymentStatusId;
            lhsPaymentStatusId = this.getPaymentStatusId();
            int rhsPaymentStatusId;
            rhsPaymentStatusId = that.getPaymentStatusId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentStatusId", lhsPaymentStatusId), LocatorUtils.property(thatLocator, "paymentStatusId", rhsPaymentStatusId), lhsPaymentStatusId, rhsPaymentStatusId)) {
                return false;
            }
        }
        {
            String lhsComments;
            lhsComments = this.getComments();
            String rhsComments;
            rhsComments = that.getComments();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "comments", lhsComments), LocatorUtils.property(thatLocator, "comments", rhsComments), lhsComments, rhsComments)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theSalesTransactionDetailId;
            theSalesTransactionDetailId = this.getSalesTransactionDetailId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTransactionDetailId", theSalesTransactionDetailId), currentHashCode, theSalesTransactionDetailId);
        }
        {
            int theSalesTransactionId;
            theSalesTransactionId = this.getSalesTransactionId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTransactionId", theSalesTransactionId), currentHashCode, theSalesTransactionId);
        }
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardId", theBoardId), currentHashCode, theBoardId);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            BigDecimal theSellerShare;
            theSellerShare = this.getSellerShare();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sellerShare", theSellerShare), currentHashCode, theSellerShare);
        }
        {
            BigDecimal theCommission;
            theCommission = this.getCommission();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "commission", theCommission), currentHashCode, theCommission);
        }
        {
            JAXBElement<XMLGregorianCalendar> theSellerPayDate;
            theSellerPayDate = this.getSellerPayDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sellerPayDate", theSellerPayDate), currentHashCode, theSellerPayDate);
        }
        {
            int thePaymentStatusId;
            thePaymentStatusId = this.getPaymentStatusId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentStatusId", thePaymentStatusId), currentHashCode, thePaymentStatusId);
        }
        {
            String theComments;
            theComments = this.getComments();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "comments", theComments), currentHashCode, theComments);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof TrSalesTransactionDetailsDomain) {
            final TrSalesTransactionDetailsDomain copy = ((TrSalesTransactionDetailsDomain) draftCopy);
            int sourceSalesTransactionDetailId;
            sourceSalesTransactionDetailId = this.getSalesTransactionDetailId();
            int copySalesTransactionDetailId = strategy.copy(LocatorUtils.property(locator, "salesTransactionDetailId", sourceSalesTransactionDetailId), sourceSalesTransactionDetailId);
            copy.setSalesTransactionDetailId(copySalesTransactionDetailId);
            int sourceSalesTransactionId;
            sourceSalesTransactionId = this.getSalesTransactionId();
            int copySalesTransactionId = strategy.copy(LocatorUtils.property(locator, "salesTransactionId", sourceSalesTransactionId), sourceSalesTransactionId);
            copy.setSalesTransactionId(copySalesTransactionId);
            int sourceBoardId;
            sourceBoardId = this.getBoardId();
            int copyBoardId = strategy.copy(LocatorUtils.property(locator, "boardId", sourceBoardId), sourceBoardId);
            copy.setBoardId(copyBoardId);
            int sourceUserId;
            sourceUserId = this.getUserId();
            int copyUserId = strategy.copy(LocatorUtils.property(locator, "userId", sourceUserId), sourceUserId);
            copy.setUserId(copyUserId);
            if (this.sellerShare!= null) {
                BigDecimal sourceSellerShare;
                sourceSellerShare = this.getSellerShare();
                BigDecimal copySellerShare = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "sellerShare", sourceSellerShare), sourceSellerShare));
                copy.setSellerShare(copySellerShare);
            } else {
                copy.sellerShare = null;
            }
            if (this.commission!= null) {
                BigDecimal sourceCommission;
                sourceCommission = this.getCommission();
                BigDecimal copyCommission = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "commission", sourceCommission), sourceCommission));
                copy.setCommission(copyCommission);
            } else {
                copy.commission = null;
            }
            if (this.sellerPayDate!= null) {
                JAXBElement<XMLGregorianCalendar> sourceSellerPayDate;
                sourceSellerPayDate = this.getSellerPayDate();
                @SuppressWarnings("unchecked")
                JAXBElement<XMLGregorianCalendar> copySellerPayDate = ((JAXBElement<XMLGregorianCalendar> ) strategy.copy(LocatorUtils.property(locator, "sellerPayDate", sourceSellerPayDate), sourceSellerPayDate));
                copy.setSellerPayDate(copySellerPayDate);
            } else {
                copy.sellerPayDate = null;
            }
            int sourcePaymentStatusId;
            sourcePaymentStatusId = this.getPaymentStatusId();
            int copyPaymentStatusId = strategy.copy(LocatorUtils.property(locator, "paymentStatusId", sourcePaymentStatusId), sourcePaymentStatusId);
            copy.setPaymentStatusId(copyPaymentStatusId);
            if (this.comments!= null) {
                String sourceComments;
                sourceComments = this.getComments();
                String copyComments = ((String) strategy.copy(LocatorUtils.property(locator, "comments", sourceComments), sourceComments));
                copy.setComments(copyComments);
            } else {
                copy.comments = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new TrSalesTransactionDetailsDomain();
    }

}
