//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for trSeachesDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="trSeachesDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="searchId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="ownerId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="searchName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="120"/>
 *               &lt;minLength value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="designerCountryId">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="rating">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="schoolAwards">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="500"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="keyword">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="240"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boardFileFormat">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="30"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="fromPrice">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="toPrice">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="designerName">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;maxLength value="120"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="createdby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="lastupdateby">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="-2147483648"/>
 *               &lt;maxInclusive value="2147483647"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="searchCategory" type="{http://domain.businessobjects.f9g4.com}trSearchCategoriesDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="searchLang" type="{http://domain.businessobjects.f9g4.com}trSearchLanguagesDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="searchSeason" type="{http://domain.businessobjects.f9g4.com}trSearchSeasonDomain" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="searchSkills" type="{http://domain.businessobjects.f9g4.com}trSearchSkillsDomain" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "trSeachesDomain", propOrder = {
    "searchId",
    "ownerId",
    "searchName",
    "designerCountryId",
    "rating",
    "schoolAwards",
    "keyword",
    "boardFileFormat",
    "fromPrice",
    "toPrice",
    "designerName",
    "createdby",
    "lastupdateby",
    "searchCategory",
    "searchLang",
    "searchSeason",
    "searchSkills"
})
public class TrSeachesDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int searchId;
    protected int ownerId;
    @XmlElement(required = true)
    protected String searchName;
    protected int designerCountryId;
    @XmlElement(required = true)
    protected BigDecimal rating;
    @XmlElement(required = true)
    protected String schoolAwards;
    @XmlElement(required = true)
    protected String keyword;
    @XmlElement(required = true)
    protected String boardFileFormat;
    @XmlElement(required = true)
    protected BigDecimal fromPrice;
    @XmlElement(required = true)
    protected BigDecimal toPrice;
    @XmlElement(required = true)
    protected String designerName;
    protected int createdby;
    protected int lastupdateby;
    protected List<TrSearchCategoriesDomain> searchCategory;
    protected List<TrSearchLanguagesDomain> searchLang;
    protected List<TrSearchSeasonDomain> searchSeason;
    protected List<TrSearchSkillsDomain> searchSkills;

    /**
     * Default no-arg constructor
     * 
     */
    public TrSeachesDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TrSeachesDomain(final int searchId, final int ownerId, final String searchName, final int designerCountryId, final BigDecimal rating, final String schoolAwards, final String keyword, final String boardFileFormat, final BigDecimal fromPrice, final BigDecimal toPrice, final String designerName, final int createdby, final int lastupdateby, final List<TrSearchCategoriesDomain> searchCategory, final List<TrSearchLanguagesDomain> searchLang, final List<TrSearchSeasonDomain> searchSeason, final List<TrSearchSkillsDomain> searchSkills) {
        this.searchId = searchId;
        this.ownerId = ownerId;
        this.searchName = searchName;
        this.designerCountryId = designerCountryId;
        this.rating = rating;
        this.schoolAwards = schoolAwards;
        this.keyword = keyword;
        this.boardFileFormat = boardFileFormat;
        this.fromPrice = fromPrice;
        this.toPrice = toPrice;
        this.designerName = designerName;
        this.createdby = createdby;
        this.lastupdateby = lastupdateby;
        this.searchCategory = searchCategory;
        this.searchLang = searchLang;
        this.searchSeason = searchSeason;
        this.searchSkills = searchSkills;
    }

    /**
     * Gets the value of the searchId property.
     * 
     */
    public int getSearchId() {
        return searchId;
    }

    /**
     * Sets the value of the searchId property.
     * 
     */
    public void setSearchId(int value) {
        this.searchId = value;
    }

    /**
     * Gets the value of the ownerId property.
     * 
     */
    public int getOwnerId() {
        return ownerId;
    }

    /**
     * Sets the value of the ownerId property.
     * 
     */
    public void setOwnerId(int value) {
        this.ownerId = value;
    }

    /**
     * Gets the value of the searchName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSearchName() {
        return searchName;
    }

    /**
     * Sets the value of the searchName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSearchName(String value) {
        this.searchName = value;
    }

    /**
     * Gets the value of the designerCountryId property.
     * 
     */
    public int getDesignerCountryId() {
        return designerCountryId;
    }

    /**
     * Sets the value of the designerCountryId property.
     * 
     */
    public void setDesignerCountryId(int value) {
        this.designerCountryId = value;
    }

    /**
     * Gets the value of the rating property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getRating() {
        return rating;
    }

    /**
     * Sets the value of the rating property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setRating(BigDecimal value) {
        this.rating = value;
    }

    /**
     * Gets the value of the schoolAwards property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSchoolAwards() {
        return schoolAwards;
    }

    /**
     * Sets the value of the schoolAwards property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSchoolAwards(String value) {
        this.schoolAwards = value;
    }

    /**
     * Gets the value of the keyword property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getKeyword() {
        return keyword;
    }

    /**
     * Sets the value of the keyword property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setKeyword(String value) {
        this.keyword = value;
    }

    /**
     * Gets the value of the boardFileFormat property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBoardFileFormat() {
        return boardFileFormat;
    }

    /**
     * Sets the value of the boardFileFormat property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBoardFileFormat(String value) {
        this.boardFileFormat = value;
    }

    /**
     * Gets the value of the fromPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getFromPrice() {
        return fromPrice;
    }

    /**
     * Sets the value of the fromPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFromPrice(BigDecimal value) {
        this.fromPrice = value;
    }

    /**
     * Gets the value of the toPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getToPrice() {
        return toPrice;
    }

    /**
     * Sets the value of the toPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setToPrice(BigDecimal value) {
        this.toPrice = value;
    }

    /**
     * Gets the value of the designerName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDesignerName() {
        return designerName;
    }

    /**
     * Sets the value of the designerName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDesignerName(String value) {
        this.designerName = value;
    }

    /**
     * Gets the value of the createdby property.
     * 
     */
    public int getCreatedby() {
        return createdby;
    }

    /**
     * Sets the value of the createdby property.
     * 
     */
    public void setCreatedby(int value) {
        this.createdby = value;
    }

    /**
     * Gets the value of the lastupdateby property.
     * 
     */
    public int getLastupdateby() {
        return lastupdateby;
    }

    /**
     * Sets the value of the lastupdateby property.
     * 
     */
    public void setLastupdateby(int value) {
        this.lastupdateby = value;
    }

    /**
     * Gets the value of the searchCategory property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the searchCategory property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSearchCategory().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrSearchCategoriesDomain }
     * 
     * 
     */
    public List<TrSearchCategoriesDomain> getSearchCategory() {
        if (searchCategory == null) {
            searchCategory = new ArrayList<TrSearchCategoriesDomain>();
        }
        return this.searchCategory;
    }

    /**
     * Gets the value of the searchLang property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the searchLang property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSearchLang().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrSearchLanguagesDomain }
     * 
     * 
     */
    public List<TrSearchLanguagesDomain> getSearchLang() {
        if (searchLang == null) {
            searchLang = new ArrayList<TrSearchLanguagesDomain>();
        }
        return this.searchLang;
    }

    /**
     * Gets the value of the searchSeason property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the searchSeason property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSearchSeason().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrSearchSeasonDomain }
     * 
     * 
     */
    public List<TrSearchSeasonDomain> getSearchSeason() {
        if (searchSeason == null) {
            searchSeason = new ArrayList<TrSearchSeasonDomain>();
        }
        return this.searchSeason;
    }

    /**
     * Gets the value of the searchSkills property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the searchSkills property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSearchSkills().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrSearchSkillsDomain }
     * 
     * 
     */
    public List<TrSearchSkillsDomain> getSearchSkills() {
        if (searchSkills == null) {
            searchSkills = new ArrayList<TrSearchSkillsDomain>();
        }
        return this.searchSkills;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theSearchId;
            theSearchId = this.getSearchId();
            strategy.appendField(locator, this, "searchId", buffer, theSearchId);
        }
        {
            int theOwnerId;
            theOwnerId = this.getOwnerId();
            strategy.appendField(locator, this, "ownerId", buffer, theOwnerId);
        }
        {
            String theSearchName;
            theSearchName = this.getSearchName();
            strategy.appendField(locator, this, "searchName", buffer, theSearchName);
        }
        {
            int theDesignerCountryId;
            theDesignerCountryId = this.getDesignerCountryId();
            strategy.appendField(locator, this, "designerCountryId", buffer, theDesignerCountryId);
        }
        {
            BigDecimal theRating;
            theRating = this.getRating();
            strategy.appendField(locator, this, "rating", buffer, theRating);
        }
        {
            String theSchoolAwards;
            theSchoolAwards = this.getSchoolAwards();
            strategy.appendField(locator, this, "schoolAwards", buffer, theSchoolAwards);
        }
        {
            String theKeyword;
            theKeyword = this.getKeyword();
            strategy.appendField(locator, this, "keyword", buffer, theKeyword);
        }
        {
            String theBoardFileFormat;
            theBoardFileFormat = this.getBoardFileFormat();
            strategy.appendField(locator, this, "boardFileFormat", buffer, theBoardFileFormat);
        }
        {
            BigDecimal theFromPrice;
            theFromPrice = this.getFromPrice();
            strategy.appendField(locator, this, "fromPrice", buffer, theFromPrice);
        }
        {
            BigDecimal theToPrice;
            theToPrice = this.getToPrice();
            strategy.appendField(locator, this, "toPrice", buffer, theToPrice);
        }
        {
            String theDesignerName;
            theDesignerName = this.getDesignerName();
            strategy.appendField(locator, this, "designerName", buffer, theDesignerName);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            strategy.appendField(locator, this, "createdby", buffer, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            strategy.appendField(locator, this, "lastupdateby", buffer, theLastupdateby);
        }
        {
            List<TrSearchCategoriesDomain> theSearchCategory;
            theSearchCategory = this.getSearchCategory();
            strategy.appendField(locator, this, "searchCategory", buffer, theSearchCategory);
        }
        {
            List<TrSearchLanguagesDomain> theSearchLang;
            theSearchLang = this.getSearchLang();
            strategy.appendField(locator, this, "searchLang", buffer, theSearchLang);
        }
        {
            List<TrSearchSeasonDomain> theSearchSeason;
            theSearchSeason = this.getSearchSeason();
            strategy.appendField(locator, this, "searchSeason", buffer, theSearchSeason);
        }
        {
            List<TrSearchSkillsDomain> theSearchSkills;
            theSearchSkills = this.getSearchSkills();
            strategy.appendField(locator, this, "searchSkills", buffer, theSearchSkills);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TrSeachesDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TrSeachesDomain that = ((TrSeachesDomain) object);
        {
            int lhsSearchId;
            lhsSearchId = this.getSearchId();
            int rhsSearchId;
            rhsSearchId = that.getSearchId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchId", lhsSearchId), LocatorUtils.property(thatLocator, "searchId", rhsSearchId), lhsSearchId, rhsSearchId)) {
                return false;
            }
        }
        {
            int lhsOwnerId;
            lhsOwnerId = this.getOwnerId();
            int rhsOwnerId;
            rhsOwnerId = that.getOwnerId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ownerId", lhsOwnerId), LocatorUtils.property(thatLocator, "ownerId", rhsOwnerId), lhsOwnerId, rhsOwnerId)) {
                return false;
            }
        }
        {
            String lhsSearchName;
            lhsSearchName = this.getSearchName();
            String rhsSearchName;
            rhsSearchName = that.getSearchName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchName", lhsSearchName), LocatorUtils.property(thatLocator, "searchName", rhsSearchName), lhsSearchName, rhsSearchName)) {
                return false;
            }
        }
        {
            int lhsDesignerCountryId;
            lhsDesignerCountryId = this.getDesignerCountryId();
            int rhsDesignerCountryId;
            rhsDesignerCountryId = that.getDesignerCountryId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "designerCountryId", lhsDesignerCountryId), LocatorUtils.property(thatLocator, "designerCountryId", rhsDesignerCountryId), lhsDesignerCountryId, rhsDesignerCountryId)) {
                return false;
            }
        }
        {
            BigDecimal lhsRating;
            lhsRating = this.getRating();
            BigDecimal rhsRating;
            rhsRating = that.getRating();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rating", lhsRating), LocatorUtils.property(thatLocator, "rating", rhsRating), lhsRating, rhsRating)) {
                return false;
            }
        }
        {
            String lhsSchoolAwards;
            lhsSchoolAwards = this.getSchoolAwards();
            String rhsSchoolAwards;
            rhsSchoolAwards = that.getSchoolAwards();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "schoolAwards", lhsSchoolAwards), LocatorUtils.property(thatLocator, "schoolAwards", rhsSchoolAwards), lhsSchoolAwards, rhsSchoolAwards)) {
                return false;
            }
        }
        {
            String lhsKeyword;
            lhsKeyword = this.getKeyword();
            String rhsKeyword;
            rhsKeyword = that.getKeyword();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "keyword", lhsKeyword), LocatorUtils.property(thatLocator, "keyword", rhsKeyword), lhsKeyword, rhsKeyword)) {
                return false;
            }
        }
        {
            String lhsBoardFileFormat;
            lhsBoardFileFormat = this.getBoardFileFormat();
            String rhsBoardFileFormat;
            rhsBoardFileFormat = that.getBoardFileFormat();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardFileFormat", lhsBoardFileFormat), LocatorUtils.property(thatLocator, "boardFileFormat", rhsBoardFileFormat), lhsBoardFileFormat, rhsBoardFileFormat)) {
                return false;
            }
        }
        {
            BigDecimal lhsFromPrice;
            lhsFromPrice = this.getFromPrice();
            BigDecimal rhsFromPrice;
            rhsFromPrice = that.getFromPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fromPrice", lhsFromPrice), LocatorUtils.property(thatLocator, "fromPrice", rhsFromPrice), lhsFromPrice, rhsFromPrice)) {
                return false;
            }
        }
        {
            BigDecimal lhsToPrice;
            lhsToPrice = this.getToPrice();
            BigDecimal rhsToPrice;
            rhsToPrice = that.getToPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toPrice", lhsToPrice), LocatorUtils.property(thatLocator, "toPrice", rhsToPrice), lhsToPrice, rhsToPrice)) {
                return false;
            }
        }
        {
            String lhsDesignerName;
            lhsDesignerName = this.getDesignerName();
            String rhsDesignerName;
            rhsDesignerName = that.getDesignerName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "designerName", lhsDesignerName), LocatorUtils.property(thatLocator, "designerName", rhsDesignerName), lhsDesignerName, rhsDesignerName)) {
                return false;
            }
        }
        {
            int lhsCreatedby;
            lhsCreatedby = this.getCreatedby();
            int rhsCreatedby;
            rhsCreatedby = that.getCreatedby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdby", lhsCreatedby), LocatorUtils.property(thatLocator, "createdby", rhsCreatedby), lhsCreatedby, rhsCreatedby)) {
                return false;
            }
        }
        {
            int lhsLastupdateby;
            lhsLastupdateby = this.getLastupdateby();
            int rhsLastupdateby;
            rhsLastupdateby = that.getLastupdateby();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastupdateby", lhsLastupdateby), LocatorUtils.property(thatLocator, "lastupdateby", rhsLastupdateby), lhsLastupdateby, rhsLastupdateby)) {
                return false;
            }
        }
        {
            List<TrSearchCategoriesDomain> lhsSearchCategory;
            lhsSearchCategory = this.getSearchCategory();
            List<TrSearchCategoriesDomain> rhsSearchCategory;
            rhsSearchCategory = that.getSearchCategory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchCategory", lhsSearchCategory), LocatorUtils.property(thatLocator, "searchCategory", rhsSearchCategory), lhsSearchCategory, rhsSearchCategory)) {
                return false;
            }
        }
        {
            List<TrSearchLanguagesDomain> lhsSearchLang;
            lhsSearchLang = this.getSearchLang();
            List<TrSearchLanguagesDomain> rhsSearchLang;
            rhsSearchLang = that.getSearchLang();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchLang", lhsSearchLang), LocatorUtils.property(thatLocator, "searchLang", rhsSearchLang), lhsSearchLang, rhsSearchLang)) {
                return false;
            }
        }
        {
            List<TrSearchSeasonDomain> lhsSearchSeason;
            lhsSearchSeason = this.getSearchSeason();
            List<TrSearchSeasonDomain> rhsSearchSeason;
            rhsSearchSeason = that.getSearchSeason();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchSeason", lhsSearchSeason), LocatorUtils.property(thatLocator, "searchSeason", rhsSearchSeason), lhsSearchSeason, rhsSearchSeason)) {
                return false;
            }
        }
        {
            List<TrSearchSkillsDomain> lhsSearchSkills;
            lhsSearchSkills = this.getSearchSkills();
            List<TrSearchSkillsDomain> rhsSearchSkills;
            rhsSearchSkills = that.getSearchSkills();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchSkills", lhsSearchSkills), LocatorUtils.property(thatLocator, "searchSkills", rhsSearchSkills), lhsSearchSkills, rhsSearchSkills)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theSearchId;
            theSearchId = this.getSearchId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchId", theSearchId), currentHashCode, theSearchId);
        }
        {
            int theOwnerId;
            theOwnerId = this.getOwnerId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ownerId", theOwnerId), currentHashCode, theOwnerId);
        }
        {
            String theSearchName;
            theSearchName = this.getSearchName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchName", theSearchName), currentHashCode, theSearchName);
        }
        {
            int theDesignerCountryId;
            theDesignerCountryId = this.getDesignerCountryId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "designerCountryId", theDesignerCountryId), currentHashCode, theDesignerCountryId);
        }
        {
            BigDecimal theRating;
            theRating = this.getRating();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rating", theRating), currentHashCode, theRating);
        }
        {
            String theSchoolAwards;
            theSchoolAwards = this.getSchoolAwards();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "schoolAwards", theSchoolAwards), currentHashCode, theSchoolAwards);
        }
        {
            String theKeyword;
            theKeyword = this.getKeyword();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "keyword", theKeyword), currentHashCode, theKeyword);
        }
        {
            String theBoardFileFormat;
            theBoardFileFormat = this.getBoardFileFormat();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardFileFormat", theBoardFileFormat), currentHashCode, theBoardFileFormat);
        }
        {
            BigDecimal theFromPrice;
            theFromPrice = this.getFromPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fromPrice", theFromPrice), currentHashCode, theFromPrice);
        }
        {
            BigDecimal theToPrice;
            theToPrice = this.getToPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toPrice", theToPrice), currentHashCode, theToPrice);
        }
        {
            String theDesignerName;
            theDesignerName = this.getDesignerName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "designerName", theDesignerName), currentHashCode, theDesignerName);
        }
        {
            int theCreatedby;
            theCreatedby = this.getCreatedby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdby", theCreatedby), currentHashCode, theCreatedby);
        }
        {
            int theLastupdateby;
            theLastupdateby = this.getLastupdateby();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastupdateby", theLastupdateby), currentHashCode, theLastupdateby);
        }
        {
            List<TrSearchCategoriesDomain> theSearchCategory;
            theSearchCategory = this.getSearchCategory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchCategory", theSearchCategory), currentHashCode, theSearchCategory);
        }
        {
            List<TrSearchLanguagesDomain> theSearchLang;
            theSearchLang = this.getSearchLang();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchLang", theSearchLang), currentHashCode, theSearchLang);
        }
        {
            List<TrSearchSeasonDomain> theSearchSeason;
            theSearchSeason = this.getSearchSeason();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchSeason", theSearchSeason), currentHashCode, theSearchSeason);
        }
        {
            List<TrSearchSkillsDomain> theSearchSkills;
            theSearchSkills = this.getSearchSkills();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchSkills", theSearchSkills), currentHashCode, theSearchSkills);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof TrSeachesDomain) {
            final TrSeachesDomain copy = ((TrSeachesDomain) draftCopy);
            int sourceSearchId;
            sourceSearchId = this.getSearchId();
            int copySearchId = strategy.copy(LocatorUtils.property(locator, "searchId", sourceSearchId), sourceSearchId);
            copy.setSearchId(copySearchId);
            int sourceOwnerId;
            sourceOwnerId = this.getOwnerId();
            int copyOwnerId = strategy.copy(LocatorUtils.property(locator, "ownerId", sourceOwnerId), sourceOwnerId);
            copy.setOwnerId(copyOwnerId);
            if (this.searchName!= null) {
                String sourceSearchName;
                sourceSearchName = this.getSearchName();
                String copySearchName = ((String) strategy.copy(LocatorUtils.property(locator, "searchName", sourceSearchName), sourceSearchName));
                copy.setSearchName(copySearchName);
            } else {
                copy.searchName = null;
            }
            int sourceDesignerCountryId;
            sourceDesignerCountryId = this.getDesignerCountryId();
            int copyDesignerCountryId = strategy.copy(LocatorUtils.property(locator, "designerCountryId", sourceDesignerCountryId), sourceDesignerCountryId);
            copy.setDesignerCountryId(copyDesignerCountryId);
            if (this.rating!= null) {
                BigDecimal sourceRating;
                sourceRating = this.getRating();
                BigDecimal copyRating = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "rating", sourceRating), sourceRating));
                copy.setRating(copyRating);
            } else {
                copy.rating = null;
            }
            if (this.schoolAwards!= null) {
                String sourceSchoolAwards;
                sourceSchoolAwards = this.getSchoolAwards();
                String copySchoolAwards = ((String) strategy.copy(LocatorUtils.property(locator, "schoolAwards", sourceSchoolAwards), sourceSchoolAwards));
                copy.setSchoolAwards(copySchoolAwards);
            } else {
                copy.schoolAwards = null;
            }
            if (this.keyword!= null) {
                String sourceKeyword;
                sourceKeyword = this.getKeyword();
                String copyKeyword = ((String) strategy.copy(LocatorUtils.property(locator, "keyword", sourceKeyword), sourceKeyword));
                copy.setKeyword(copyKeyword);
            } else {
                copy.keyword = null;
            }
            if (this.boardFileFormat!= null) {
                String sourceBoardFileFormat;
                sourceBoardFileFormat = this.getBoardFileFormat();
                String copyBoardFileFormat = ((String) strategy.copy(LocatorUtils.property(locator, "boardFileFormat", sourceBoardFileFormat), sourceBoardFileFormat));
                copy.setBoardFileFormat(copyBoardFileFormat);
            } else {
                copy.boardFileFormat = null;
            }
            if (this.fromPrice!= null) {
                BigDecimal sourceFromPrice;
                sourceFromPrice = this.getFromPrice();
                BigDecimal copyFromPrice = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "fromPrice", sourceFromPrice), sourceFromPrice));
                copy.setFromPrice(copyFromPrice);
            } else {
                copy.fromPrice = null;
            }
            if (this.toPrice!= null) {
                BigDecimal sourceToPrice;
                sourceToPrice = this.getToPrice();
                BigDecimal copyToPrice = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "toPrice", sourceToPrice), sourceToPrice));
                copy.setToPrice(copyToPrice);
            } else {
                copy.toPrice = null;
            }
            if (this.designerName!= null) {
                String sourceDesignerName;
                sourceDesignerName = this.getDesignerName();
                String copyDesignerName = ((String) strategy.copy(LocatorUtils.property(locator, "designerName", sourceDesignerName), sourceDesignerName));
                copy.setDesignerName(copyDesignerName);
            } else {
                copy.designerName = null;
            }
            int sourceCreatedby;
            sourceCreatedby = this.getCreatedby();
            int copyCreatedby = strategy.copy(LocatorUtils.property(locator, "createdby", sourceCreatedby), sourceCreatedby);
            copy.setCreatedby(copyCreatedby);
            int sourceLastupdateby;
            sourceLastupdateby = this.getLastupdateby();
            int copyLastupdateby = strategy.copy(LocatorUtils.property(locator, "lastupdateby", sourceLastupdateby), sourceLastupdateby);
            copy.setLastupdateby(copyLastupdateby);
            if ((this.searchCategory!= null)&&(!this.searchCategory.isEmpty())) {
                List<TrSearchCategoriesDomain> sourceSearchCategory;
                sourceSearchCategory = this.getSearchCategory();
                @SuppressWarnings("unchecked")
                List<TrSearchCategoriesDomain> copySearchCategory = ((List<TrSearchCategoriesDomain> ) strategy.copy(LocatorUtils.property(locator, "searchCategory", sourceSearchCategory), sourceSearchCategory));
                copy.searchCategory = null;
                List<TrSearchCategoriesDomain> uniqueSearchCategoryl = copy.getSearchCategory();
                uniqueSearchCategoryl.addAll(copySearchCategory);
            } else {
                copy.searchCategory = null;
            }
            if ((this.searchLang!= null)&&(!this.searchLang.isEmpty())) {
                List<TrSearchLanguagesDomain> sourceSearchLang;
                sourceSearchLang = this.getSearchLang();
                @SuppressWarnings("unchecked")
                List<TrSearchLanguagesDomain> copySearchLang = ((List<TrSearchLanguagesDomain> ) strategy.copy(LocatorUtils.property(locator, "searchLang", sourceSearchLang), sourceSearchLang));
                copy.searchLang = null;
                List<TrSearchLanguagesDomain> uniqueSearchLangl = copy.getSearchLang();
                uniqueSearchLangl.addAll(copySearchLang);
            } else {
                copy.searchLang = null;
            }
            if ((this.searchSeason!= null)&&(!this.searchSeason.isEmpty())) {
                List<TrSearchSeasonDomain> sourceSearchSeason;
                sourceSearchSeason = this.getSearchSeason();
                @SuppressWarnings("unchecked")
                List<TrSearchSeasonDomain> copySearchSeason = ((List<TrSearchSeasonDomain> ) strategy.copy(LocatorUtils.property(locator, "searchSeason", sourceSearchSeason), sourceSearchSeason));
                copy.searchSeason = null;
                List<TrSearchSeasonDomain> uniqueSearchSeasonl = copy.getSearchSeason();
                uniqueSearchSeasonl.addAll(copySearchSeason);
            } else {
                copy.searchSeason = null;
            }
            if ((this.searchSkills!= null)&&(!this.searchSkills.isEmpty())) {
                List<TrSearchSkillsDomain> sourceSearchSkills;
                sourceSearchSkills = this.getSearchSkills();
                @SuppressWarnings("unchecked")
                List<TrSearchSkillsDomain> copySearchSkills = ((List<TrSearchSkillsDomain> ) strategy.copy(LocatorUtils.property(locator, "searchSkills", sourceSearchSkills), sourceSearchSkills));
                copy.searchSkills = null;
                List<TrSearchSkillsDomain> uniqueSearchSkillsl = copy.getSearchSkills();
                uniqueSearchSkillsl.addAll(copySearchSkills);
            } else {
                copy.searchSkills = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new TrSeachesDomain();
    }

}
