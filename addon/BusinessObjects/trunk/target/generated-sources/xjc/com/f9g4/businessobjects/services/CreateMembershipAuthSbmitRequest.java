//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.f9g4.businessobjects.domain.TrMembershipAuthSubmitDomain;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CreateMembershipAuthSbmitRequest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CreateMembershipAuthSbmitRequest">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="cancelUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="returnUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="paymentMembershipListenerUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="userID" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="membershipType" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="trMembershipAuthSubmitDomain" type="{http://domain.businessobjects.f9g4.com}trMembershipAuthSubmitDomain" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CreateMembershipAuthSbmitRequest", propOrder = {
    "cancelUrl",
    "returnUrl",
    "paymentMembershipListenerUrl",
    "userID",
    "membershipType",
    "trMembershipAuthSubmitDomain"
})
@XmlRootElement(name = "CreateMembershipAuthSbmitRequest")
public class CreateMembershipAuthSbmitRequest implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String cancelUrl;
    @XmlElement(required = true)
    protected String returnUrl;
    @XmlElement(required = true)
    protected String paymentMembershipListenerUrl;
    protected int userID;
    @XmlElement(required = true)
    protected String membershipType;
    protected TrMembershipAuthSubmitDomain trMembershipAuthSubmitDomain;

    /**
     * Default no-arg constructor
     * 
     */
    public CreateMembershipAuthSbmitRequest() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public CreateMembershipAuthSbmitRequest(final String cancelUrl, final String returnUrl, final String paymentMembershipListenerUrl, final int userID, final String membershipType, final TrMembershipAuthSubmitDomain trMembershipAuthSubmitDomain) {
        this.cancelUrl = cancelUrl;
        this.returnUrl = returnUrl;
        this.paymentMembershipListenerUrl = paymentMembershipListenerUrl;
        this.userID = userID;
        this.membershipType = membershipType;
        this.trMembershipAuthSubmitDomain = trMembershipAuthSubmitDomain;
    }

    /**
     * Gets the value of the cancelUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCancelUrl() {
        return cancelUrl;
    }

    /**
     * Sets the value of the cancelUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCancelUrl(String value) {
        this.cancelUrl = value;
    }

    /**
     * Gets the value of the returnUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReturnUrl() {
        return returnUrl;
    }

    /**
     * Sets the value of the returnUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReturnUrl(String value) {
        this.returnUrl = value;
    }

    /**
     * Gets the value of the paymentMembershipListenerUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPaymentMembershipListenerUrl() {
        return paymentMembershipListenerUrl;
    }

    /**
     * Sets the value of the paymentMembershipListenerUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPaymentMembershipListenerUrl(String value) {
        this.paymentMembershipListenerUrl = value;
    }

    /**
     * Gets the value of the userID property.
     * 
     */
    public int getUserID() {
        return userID;
    }

    /**
     * Sets the value of the userID property.
     * 
     */
    public void setUserID(int value) {
        this.userID = value;
    }

    /**
     * Gets the value of the membershipType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMembershipType() {
        return membershipType;
    }

    /**
     * Sets the value of the membershipType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMembershipType(String value) {
        this.membershipType = value;
    }

    /**
     * Gets the value of the trMembershipAuthSubmitDomain property.
     * 
     * @return
     *     possible object is
     *     {@link TrMembershipAuthSubmitDomain }
     *     
     */
    public TrMembershipAuthSubmitDomain getTrMembershipAuthSubmitDomain() {
        return trMembershipAuthSubmitDomain;
    }

    /**
     * Sets the value of the trMembershipAuthSubmitDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrMembershipAuthSubmitDomain }
     *     
     */
    public void setTrMembershipAuthSubmitDomain(TrMembershipAuthSubmitDomain value) {
        this.trMembershipAuthSubmitDomain = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theCancelUrl;
            theCancelUrl = this.getCancelUrl();
            strategy.appendField(locator, this, "cancelUrl", buffer, theCancelUrl);
        }
        {
            String theReturnUrl;
            theReturnUrl = this.getReturnUrl();
            strategy.appendField(locator, this, "returnUrl", buffer, theReturnUrl);
        }
        {
            String thePaymentMembershipListenerUrl;
            thePaymentMembershipListenerUrl = this.getPaymentMembershipListenerUrl();
            strategy.appendField(locator, this, "paymentMembershipListenerUrl", buffer, thePaymentMembershipListenerUrl);
        }
        {
            int theUserID;
            theUserID = this.getUserID();
            strategy.appendField(locator, this, "userID", buffer, theUserID);
        }
        {
            String theMembershipType;
            theMembershipType = this.getMembershipType();
            strategy.appendField(locator, this, "membershipType", buffer, theMembershipType);
        }
        {
            TrMembershipAuthSubmitDomain theTrMembershipAuthSubmitDomain;
            theTrMembershipAuthSubmitDomain = this.getTrMembershipAuthSubmitDomain();
            strategy.appendField(locator, this, "trMembershipAuthSubmitDomain", buffer, theTrMembershipAuthSubmitDomain);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CreateMembershipAuthSbmitRequest)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CreateMembershipAuthSbmitRequest that = ((CreateMembershipAuthSbmitRequest) object);
        {
            String lhsCancelUrl;
            lhsCancelUrl = this.getCancelUrl();
            String rhsCancelUrl;
            rhsCancelUrl = that.getCancelUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cancelUrl", lhsCancelUrl), LocatorUtils.property(thatLocator, "cancelUrl", rhsCancelUrl), lhsCancelUrl, rhsCancelUrl)) {
                return false;
            }
        }
        {
            String lhsReturnUrl;
            lhsReturnUrl = this.getReturnUrl();
            String rhsReturnUrl;
            rhsReturnUrl = that.getReturnUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "returnUrl", lhsReturnUrl), LocatorUtils.property(thatLocator, "returnUrl", rhsReturnUrl), lhsReturnUrl, rhsReturnUrl)) {
                return false;
            }
        }
        {
            String lhsPaymentMembershipListenerUrl;
            lhsPaymentMembershipListenerUrl = this.getPaymentMembershipListenerUrl();
            String rhsPaymentMembershipListenerUrl;
            rhsPaymentMembershipListenerUrl = that.getPaymentMembershipListenerUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentMembershipListenerUrl", lhsPaymentMembershipListenerUrl), LocatorUtils.property(thatLocator, "paymentMembershipListenerUrl", rhsPaymentMembershipListenerUrl), lhsPaymentMembershipListenerUrl, rhsPaymentMembershipListenerUrl)) {
                return false;
            }
        }
        {
            int lhsUserID;
            lhsUserID = this.getUserID();
            int rhsUserID;
            rhsUserID = that.getUserID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userID", lhsUserID), LocatorUtils.property(thatLocator, "userID", rhsUserID), lhsUserID, rhsUserID)) {
                return false;
            }
        }
        {
            String lhsMembershipType;
            lhsMembershipType = this.getMembershipType();
            String rhsMembershipType;
            rhsMembershipType = that.getMembershipType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "membershipType", lhsMembershipType), LocatorUtils.property(thatLocator, "membershipType", rhsMembershipType), lhsMembershipType, rhsMembershipType)) {
                return false;
            }
        }
        {
            TrMembershipAuthSubmitDomain lhsTrMembershipAuthSubmitDomain;
            lhsTrMembershipAuthSubmitDomain = this.getTrMembershipAuthSubmitDomain();
            TrMembershipAuthSubmitDomain rhsTrMembershipAuthSubmitDomain;
            rhsTrMembershipAuthSubmitDomain = that.getTrMembershipAuthSubmitDomain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trMembershipAuthSubmitDomain", lhsTrMembershipAuthSubmitDomain), LocatorUtils.property(thatLocator, "trMembershipAuthSubmitDomain", rhsTrMembershipAuthSubmitDomain), lhsTrMembershipAuthSubmitDomain, rhsTrMembershipAuthSubmitDomain)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theCancelUrl;
            theCancelUrl = this.getCancelUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cancelUrl", theCancelUrl), currentHashCode, theCancelUrl);
        }
        {
            String theReturnUrl;
            theReturnUrl = this.getReturnUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "returnUrl", theReturnUrl), currentHashCode, theReturnUrl);
        }
        {
            String thePaymentMembershipListenerUrl;
            thePaymentMembershipListenerUrl = this.getPaymentMembershipListenerUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentMembershipListenerUrl", thePaymentMembershipListenerUrl), currentHashCode, thePaymentMembershipListenerUrl);
        }
        {
            int theUserID;
            theUserID = this.getUserID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userID", theUserID), currentHashCode, theUserID);
        }
        {
            String theMembershipType;
            theMembershipType = this.getMembershipType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "membershipType", theMembershipType), currentHashCode, theMembershipType);
        }
        {
            TrMembershipAuthSubmitDomain theTrMembershipAuthSubmitDomain;
            theTrMembershipAuthSubmitDomain = this.getTrMembershipAuthSubmitDomain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trMembershipAuthSubmitDomain", theTrMembershipAuthSubmitDomain), currentHashCode, theTrMembershipAuthSubmitDomain);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof CreateMembershipAuthSbmitRequest) {
            final CreateMembershipAuthSbmitRequest copy = ((CreateMembershipAuthSbmitRequest) draftCopy);
            if (this.cancelUrl!= null) {
                String sourceCancelUrl;
                sourceCancelUrl = this.getCancelUrl();
                String copyCancelUrl = ((String) strategy.copy(LocatorUtils.property(locator, "cancelUrl", sourceCancelUrl), sourceCancelUrl));
                copy.setCancelUrl(copyCancelUrl);
            } else {
                copy.cancelUrl = null;
            }
            if (this.returnUrl!= null) {
                String sourceReturnUrl;
                sourceReturnUrl = this.getReturnUrl();
                String copyReturnUrl = ((String) strategy.copy(LocatorUtils.property(locator, "returnUrl", sourceReturnUrl), sourceReturnUrl));
                copy.setReturnUrl(copyReturnUrl);
            } else {
                copy.returnUrl = null;
            }
            if (this.paymentMembershipListenerUrl!= null) {
                String sourcePaymentMembershipListenerUrl;
                sourcePaymentMembershipListenerUrl = this.getPaymentMembershipListenerUrl();
                String copyPaymentMembershipListenerUrl = ((String) strategy.copy(LocatorUtils.property(locator, "paymentMembershipListenerUrl", sourcePaymentMembershipListenerUrl), sourcePaymentMembershipListenerUrl));
                copy.setPaymentMembershipListenerUrl(copyPaymentMembershipListenerUrl);
            } else {
                copy.paymentMembershipListenerUrl = null;
            }
            int sourceUserID;
            sourceUserID = this.getUserID();
            int copyUserID = strategy.copy(LocatorUtils.property(locator, "userID", sourceUserID), sourceUserID);
            copy.setUserID(copyUserID);
            if (this.membershipType!= null) {
                String sourceMembershipType;
                sourceMembershipType = this.getMembershipType();
                String copyMembershipType = ((String) strategy.copy(LocatorUtils.property(locator, "membershipType", sourceMembershipType), sourceMembershipType));
                copy.setMembershipType(copyMembershipType);
            } else {
                copy.membershipType = null;
            }
            if (this.trMembershipAuthSubmitDomain!= null) {
                TrMembershipAuthSubmitDomain sourceTrMembershipAuthSubmitDomain;
                sourceTrMembershipAuthSubmitDomain = this.getTrMembershipAuthSubmitDomain();
                TrMembershipAuthSubmitDomain copyTrMembershipAuthSubmitDomain = ((TrMembershipAuthSubmitDomain) strategy.copy(LocatorUtils.property(locator, "trMembershipAuthSubmitDomain", sourceTrMembershipAuthSubmitDomain), sourceTrMembershipAuthSubmitDomain));
                copy.setTrMembershipAuthSubmitDomain(copyTrMembershipAuthSubmitDomain);
            } else {
                copy.trMembershipAuthSubmitDomain = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CreateMembershipAuthSbmitRequest();
    }

}
