//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.f9g4.businessobjects.domain.TrSalesTransactionDetailsDomain;
import com.f9g4.businessobjects.domain.TrSalesTransactionHeaderDomain;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CreateSalesTransactionRequest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CreateSalesTransactionRequest">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="payActoin" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="salesTransactionHeaderDomain" type="{http://domain.businessobjects.f9g4.com}trSalesTransactionHeaderDomain"/>
 *         &lt;element name="salesTransactionDetailsDomain" type="{http://domain.businessobjects.f9g4.com}trSalesTransactionDetailsDomain" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CreateSalesTransactionRequest", propOrder = {
    "payActoin",
    "salesTransactionHeaderDomain",
    "salesTransactionDetailsDomain"
})
@XmlRootElement(name = "CreateSalesTransactionRequest")
public class CreateSalesTransactionRequest implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String payActoin;
    @XmlElement(required = true)
    protected TrSalesTransactionHeaderDomain salesTransactionHeaderDomain;
    @XmlElement(required = true)
    protected List<TrSalesTransactionDetailsDomain> salesTransactionDetailsDomain;

    /**
     * Default no-arg constructor
     * 
     */
    public CreateSalesTransactionRequest() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public CreateSalesTransactionRequest(final String payActoin, final TrSalesTransactionHeaderDomain salesTransactionHeaderDomain, final List<TrSalesTransactionDetailsDomain> salesTransactionDetailsDomain) {
        this.payActoin = payActoin;
        this.salesTransactionHeaderDomain = salesTransactionHeaderDomain;
        this.salesTransactionDetailsDomain = salesTransactionDetailsDomain;
    }

    /**
     * Gets the value of the payActoin property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPayActoin() {
        return payActoin;
    }

    /**
     * Sets the value of the payActoin property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPayActoin(String value) {
        this.payActoin = value;
    }

    /**
     * Gets the value of the salesTransactionHeaderDomain property.
     * 
     * @return
     *     possible object is
     *     {@link TrSalesTransactionHeaderDomain }
     *     
     */
    public TrSalesTransactionHeaderDomain getSalesTransactionHeaderDomain() {
        return salesTransactionHeaderDomain;
    }

    /**
     * Sets the value of the salesTransactionHeaderDomain property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrSalesTransactionHeaderDomain }
     *     
     */
    public void setSalesTransactionHeaderDomain(TrSalesTransactionHeaderDomain value) {
        this.salesTransactionHeaderDomain = value;
    }

    /**
     * Gets the value of the salesTransactionDetailsDomain property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the salesTransactionDetailsDomain property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSalesTransactionDetailsDomain().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TrSalesTransactionDetailsDomain }
     * 
     * 
     */
    public List<TrSalesTransactionDetailsDomain> getSalesTransactionDetailsDomain() {
        if (salesTransactionDetailsDomain == null) {
            salesTransactionDetailsDomain = new ArrayList<TrSalesTransactionDetailsDomain>();
        }
        return this.salesTransactionDetailsDomain;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String thePayActoin;
            thePayActoin = this.getPayActoin();
            strategy.appendField(locator, this, "payActoin", buffer, thePayActoin);
        }
        {
            TrSalesTransactionHeaderDomain theSalesTransactionHeaderDomain;
            theSalesTransactionHeaderDomain = this.getSalesTransactionHeaderDomain();
            strategy.appendField(locator, this, "salesTransactionHeaderDomain", buffer, theSalesTransactionHeaderDomain);
        }
        {
            List<TrSalesTransactionDetailsDomain> theSalesTransactionDetailsDomain;
            theSalesTransactionDetailsDomain = this.getSalesTransactionDetailsDomain();
            strategy.appendField(locator, this, "salesTransactionDetailsDomain", buffer, theSalesTransactionDetailsDomain);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CreateSalesTransactionRequest)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CreateSalesTransactionRequest that = ((CreateSalesTransactionRequest) object);
        {
            String lhsPayActoin;
            lhsPayActoin = this.getPayActoin();
            String rhsPayActoin;
            rhsPayActoin = that.getPayActoin();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "payActoin", lhsPayActoin), LocatorUtils.property(thatLocator, "payActoin", rhsPayActoin), lhsPayActoin, rhsPayActoin)) {
                return false;
            }
        }
        {
            TrSalesTransactionHeaderDomain lhsSalesTransactionHeaderDomain;
            lhsSalesTransactionHeaderDomain = this.getSalesTransactionHeaderDomain();
            TrSalesTransactionHeaderDomain rhsSalesTransactionHeaderDomain;
            rhsSalesTransactionHeaderDomain = that.getSalesTransactionHeaderDomain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTransactionHeaderDomain", lhsSalesTransactionHeaderDomain), LocatorUtils.property(thatLocator, "salesTransactionHeaderDomain", rhsSalesTransactionHeaderDomain), lhsSalesTransactionHeaderDomain, rhsSalesTransactionHeaderDomain)) {
                return false;
            }
        }
        {
            List<TrSalesTransactionDetailsDomain> lhsSalesTransactionDetailsDomain;
            lhsSalesTransactionDetailsDomain = this.getSalesTransactionDetailsDomain();
            List<TrSalesTransactionDetailsDomain> rhsSalesTransactionDetailsDomain;
            rhsSalesTransactionDetailsDomain = that.getSalesTransactionDetailsDomain();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTransactionDetailsDomain", lhsSalesTransactionDetailsDomain), LocatorUtils.property(thatLocator, "salesTransactionDetailsDomain", rhsSalesTransactionDetailsDomain), lhsSalesTransactionDetailsDomain, rhsSalesTransactionDetailsDomain)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String thePayActoin;
            thePayActoin = this.getPayActoin();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "payActoin", thePayActoin), currentHashCode, thePayActoin);
        }
        {
            TrSalesTransactionHeaderDomain theSalesTransactionHeaderDomain;
            theSalesTransactionHeaderDomain = this.getSalesTransactionHeaderDomain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTransactionHeaderDomain", theSalesTransactionHeaderDomain), currentHashCode, theSalesTransactionHeaderDomain);
        }
        {
            List<TrSalesTransactionDetailsDomain> theSalesTransactionDetailsDomain;
            theSalesTransactionDetailsDomain = this.getSalesTransactionDetailsDomain();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTransactionDetailsDomain", theSalesTransactionDetailsDomain), currentHashCode, theSalesTransactionDetailsDomain);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof CreateSalesTransactionRequest) {
            final CreateSalesTransactionRequest copy = ((CreateSalesTransactionRequest) draftCopy);
            if (this.payActoin!= null) {
                String sourcePayActoin;
                sourcePayActoin = this.getPayActoin();
                String copyPayActoin = ((String) strategy.copy(LocatorUtils.property(locator, "payActoin", sourcePayActoin), sourcePayActoin));
                copy.setPayActoin(copyPayActoin);
            } else {
                copy.payActoin = null;
            }
            if (this.salesTransactionHeaderDomain!= null) {
                TrSalesTransactionHeaderDomain sourceSalesTransactionHeaderDomain;
                sourceSalesTransactionHeaderDomain = this.getSalesTransactionHeaderDomain();
                TrSalesTransactionHeaderDomain copySalesTransactionHeaderDomain = ((TrSalesTransactionHeaderDomain) strategy.copy(LocatorUtils.property(locator, "salesTransactionHeaderDomain", sourceSalesTransactionHeaderDomain), sourceSalesTransactionHeaderDomain));
                copy.setSalesTransactionHeaderDomain(copySalesTransactionHeaderDomain);
            } else {
                copy.salesTransactionHeaderDomain = null;
            }
            if ((this.salesTransactionDetailsDomain!= null)&&(!this.salesTransactionDetailsDomain.isEmpty())) {
                List<TrSalesTransactionDetailsDomain> sourceSalesTransactionDetailsDomain;
                sourceSalesTransactionDetailsDomain = this.getSalesTransactionDetailsDomain();
                @SuppressWarnings("unchecked")
                List<TrSalesTransactionDetailsDomain> copySalesTransactionDetailsDomain = ((List<TrSalesTransactionDetailsDomain> ) strategy.copy(LocatorUtils.property(locator, "salesTransactionDetailsDomain", sourceSalesTransactionDetailsDomain), sourceSalesTransactionDetailsDomain));
                copy.salesTransactionDetailsDomain = null;
                List<TrSalesTransactionDetailsDomain> uniqueSalesTransactionDetailsDomainl = copy.getSalesTransactionDetailsDomain();
                uniqueSalesTransactionDetailsDomainl.addAll(copySalesTransactionDetailsDomain);
            } else {
                copy.salesTransactionDetailsDomain = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CreateSalesTransactionRequest();
    }

}
