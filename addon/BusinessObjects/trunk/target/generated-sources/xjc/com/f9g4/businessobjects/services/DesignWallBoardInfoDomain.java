//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for DesignWallBoardInfoDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DesignWallBoardInfoDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="userName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="boardPrice">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="totalPrice">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="sellerPayDate" type="{http://www.w3.org/2001/XMLSchema}dateTime"/>
 *         &lt;element name="lastname" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="firstname" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="profilename" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="useProfilename" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="statusdescription" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="mainImageUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="thumbnailUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="tileImageUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="fileType" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="boardId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DesignWallBoardInfoDomain", propOrder = {
    "userName",
    "boardPrice",
    "totalPrice",
    "sellerPayDate",
    "lastname",
    "firstname",
    "profilename",
    "useProfilename",
    "statusdescription",
    "mainImageUrl",
    "thumbnailUrl",
    "tileImageUrl",
    "fileType",
    "name",
    "boardId"
})
public class DesignWallBoardInfoDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String userName;
    @XmlElement(required = true)
    protected BigDecimal boardPrice;
    @XmlElement(required = true)
    protected BigDecimal totalPrice;
    @XmlElement(required = true)
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar sellerPayDate;
    @XmlElement(required = true)
    protected String lastname;
    @XmlElement(required = true)
    protected String firstname;
    @XmlElement(required = true)
    protected String profilename;
    protected int useProfilename;
    @XmlElement(required = true)
    protected String statusdescription;
    @XmlElement(required = true)
    protected String mainImageUrl;
    @XmlElement(required = true)
    protected String thumbnailUrl;
    @XmlElement(required = true)
    protected String tileImageUrl;
    @XmlElement(required = true)
    protected String fileType;
    @XmlElement(required = true)
    protected String name;
    protected int boardId;

    /**
     * Default no-arg constructor
     * 
     */
    public DesignWallBoardInfoDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public DesignWallBoardInfoDomain(final String userName, final BigDecimal boardPrice, final BigDecimal totalPrice, final XMLGregorianCalendar sellerPayDate, final String lastname, final String firstname, final String profilename, final int useProfilename, final String statusdescription, final String mainImageUrl, final String thumbnailUrl, final String tileImageUrl, final String fileType, final String name, final int boardId) {
        this.userName = userName;
        this.boardPrice = boardPrice;
        this.totalPrice = totalPrice;
        this.sellerPayDate = sellerPayDate;
        this.lastname = lastname;
        this.firstname = firstname;
        this.profilename = profilename;
        this.useProfilename = useProfilename;
        this.statusdescription = statusdescription;
        this.mainImageUrl = mainImageUrl;
        this.thumbnailUrl = thumbnailUrl;
        this.tileImageUrl = tileImageUrl;
        this.fileType = fileType;
        this.name = name;
        this.boardId = boardId;
    }

    /**
     * Gets the value of the userName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserName() {
        return userName;
    }

    /**
     * Sets the value of the userName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserName(String value) {
        this.userName = value;
    }

    /**
     * Gets the value of the boardPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getBoardPrice() {
        return boardPrice;
    }

    /**
     * Sets the value of the boardPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setBoardPrice(BigDecimal value) {
        this.boardPrice = value;
    }

    /**
     * Gets the value of the totalPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalPrice() {
        return totalPrice;
    }

    /**
     * Sets the value of the totalPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalPrice(BigDecimal value) {
        this.totalPrice = value;
    }

    /**
     * Gets the value of the sellerPayDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getSellerPayDate() {
        return sellerPayDate;
    }

    /**
     * Sets the value of the sellerPayDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setSellerPayDate(XMLGregorianCalendar value) {
        this.sellerPayDate = value;
    }

    /**
     * Gets the value of the lastname property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLastname() {
        return lastname;
    }

    /**
     * Sets the value of the lastname property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLastname(String value) {
        this.lastname = value;
    }

    /**
     * Gets the value of the firstname property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Sets the value of the firstname property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFirstname(String value) {
        this.firstname = value;
    }

    /**
     * Gets the value of the profilename property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProfilename() {
        return profilename;
    }

    /**
     * Sets the value of the profilename property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProfilename(String value) {
        this.profilename = value;
    }

    /**
     * Gets the value of the useProfilename property.
     * 
     */
    public int getUseProfilename() {
        return useProfilename;
    }

    /**
     * Sets the value of the useProfilename property.
     * 
     */
    public void setUseProfilename(int value) {
        this.useProfilename = value;
    }

    /**
     * Gets the value of the statusdescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatusdescription() {
        return statusdescription;
    }

    /**
     * Sets the value of the statusdescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatusdescription(String value) {
        this.statusdescription = value;
    }

    /**
     * Gets the value of the mainImageUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMainImageUrl() {
        return mainImageUrl;
    }

    /**
     * Sets the value of the mainImageUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMainImageUrl(String value) {
        this.mainImageUrl = value;
    }

    /**
     * Gets the value of the thumbnailUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getThumbnailUrl() {
        return thumbnailUrl;
    }

    /**
     * Sets the value of the thumbnailUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setThumbnailUrl(String value) {
        this.thumbnailUrl = value;
    }

    /**
     * Gets the value of the tileImageUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTileImageUrl() {
        return tileImageUrl;
    }

    /**
     * Sets the value of the tileImageUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTileImageUrl(String value) {
        this.tileImageUrl = value;
    }

    /**
     * Gets the value of the fileType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFileType() {
        return fileType;
    }

    /**
     * Sets the value of the fileType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFileType(String value) {
        this.fileType = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the boardId property.
     * 
     */
    public int getBoardId() {
        return boardId;
    }

    /**
     * Sets the value of the boardId property.
     * 
     */
    public void setBoardId(int value) {
        this.boardId = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theUserName;
            theUserName = this.getUserName();
            strategy.appendField(locator, this, "userName", buffer, theUserName);
        }
        {
            BigDecimal theBoardPrice;
            theBoardPrice = this.getBoardPrice();
            strategy.appendField(locator, this, "boardPrice", buffer, theBoardPrice);
        }
        {
            BigDecimal theTotalPrice;
            theTotalPrice = this.getTotalPrice();
            strategy.appendField(locator, this, "totalPrice", buffer, theTotalPrice);
        }
        {
            XMLGregorianCalendar theSellerPayDate;
            theSellerPayDate = this.getSellerPayDate();
            strategy.appendField(locator, this, "sellerPayDate", buffer, theSellerPayDate);
        }
        {
            String theLastname;
            theLastname = this.getLastname();
            strategy.appendField(locator, this, "lastname", buffer, theLastname);
        }
        {
            String theFirstname;
            theFirstname = this.getFirstname();
            strategy.appendField(locator, this, "firstname", buffer, theFirstname);
        }
        {
            String theProfilename;
            theProfilename = this.getProfilename();
            strategy.appendField(locator, this, "profilename", buffer, theProfilename);
        }
        {
            int theUseProfilename;
            theUseProfilename = this.getUseProfilename();
            strategy.appendField(locator, this, "useProfilename", buffer, theUseProfilename);
        }
        {
            String theStatusdescription;
            theStatusdescription = this.getStatusdescription();
            strategy.appendField(locator, this, "statusdescription", buffer, theStatusdescription);
        }
        {
            String theMainImageUrl;
            theMainImageUrl = this.getMainImageUrl();
            strategy.appendField(locator, this, "mainImageUrl", buffer, theMainImageUrl);
        }
        {
            String theThumbnailUrl;
            theThumbnailUrl = this.getThumbnailUrl();
            strategy.appendField(locator, this, "thumbnailUrl", buffer, theThumbnailUrl);
        }
        {
            String theTileImageUrl;
            theTileImageUrl = this.getTileImageUrl();
            strategy.appendField(locator, this, "tileImageUrl", buffer, theTileImageUrl);
        }
        {
            String theFileType;
            theFileType = this.getFileType();
            strategy.appendField(locator, this, "fileType", buffer, theFileType);
        }
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            strategy.appendField(locator, this, "boardId", buffer, theBoardId);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DesignWallBoardInfoDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DesignWallBoardInfoDomain that = ((DesignWallBoardInfoDomain) object);
        {
            String lhsUserName;
            lhsUserName = this.getUserName();
            String rhsUserName;
            rhsUserName = that.getUserName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userName", lhsUserName), LocatorUtils.property(thatLocator, "userName", rhsUserName), lhsUserName, rhsUserName)) {
                return false;
            }
        }
        {
            BigDecimal lhsBoardPrice;
            lhsBoardPrice = this.getBoardPrice();
            BigDecimal rhsBoardPrice;
            rhsBoardPrice = that.getBoardPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardPrice", lhsBoardPrice), LocatorUtils.property(thatLocator, "boardPrice", rhsBoardPrice), lhsBoardPrice, rhsBoardPrice)) {
                return false;
            }
        }
        {
            BigDecimal lhsTotalPrice;
            lhsTotalPrice = this.getTotalPrice();
            BigDecimal rhsTotalPrice;
            rhsTotalPrice = that.getTotalPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalPrice", lhsTotalPrice), LocatorUtils.property(thatLocator, "totalPrice", rhsTotalPrice), lhsTotalPrice, rhsTotalPrice)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsSellerPayDate;
            lhsSellerPayDate = this.getSellerPayDate();
            XMLGregorianCalendar rhsSellerPayDate;
            rhsSellerPayDate = that.getSellerPayDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sellerPayDate", lhsSellerPayDate), LocatorUtils.property(thatLocator, "sellerPayDate", rhsSellerPayDate), lhsSellerPayDate, rhsSellerPayDate)) {
                return false;
            }
        }
        {
            String lhsLastname;
            lhsLastname = this.getLastname();
            String rhsLastname;
            rhsLastname = that.getLastname();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastname", lhsLastname), LocatorUtils.property(thatLocator, "lastname", rhsLastname), lhsLastname, rhsLastname)) {
                return false;
            }
        }
        {
            String lhsFirstname;
            lhsFirstname = this.getFirstname();
            String rhsFirstname;
            rhsFirstname = that.getFirstname();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "firstname", lhsFirstname), LocatorUtils.property(thatLocator, "firstname", rhsFirstname), lhsFirstname, rhsFirstname)) {
                return false;
            }
        }
        {
            String lhsProfilename;
            lhsProfilename = this.getProfilename();
            String rhsProfilename;
            rhsProfilename = that.getProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "profilename", lhsProfilename), LocatorUtils.property(thatLocator, "profilename", rhsProfilename), lhsProfilename, rhsProfilename)) {
                return false;
            }
        }
        {
            int lhsUseProfilename;
            lhsUseProfilename = this.getUseProfilename();
            int rhsUseProfilename;
            rhsUseProfilename = that.getUseProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "useProfilename", lhsUseProfilename), LocatorUtils.property(thatLocator, "useProfilename", rhsUseProfilename), lhsUseProfilename, rhsUseProfilename)) {
                return false;
            }
        }
        {
            String lhsStatusdescription;
            lhsStatusdescription = this.getStatusdescription();
            String rhsStatusdescription;
            rhsStatusdescription = that.getStatusdescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "statusdescription", lhsStatusdescription), LocatorUtils.property(thatLocator, "statusdescription", rhsStatusdescription), lhsStatusdescription, rhsStatusdescription)) {
                return false;
            }
        }
        {
            String lhsMainImageUrl;
            lhsMainImageUrl = this.getMainImageUrl();
            String rhsMainImageUrl;
            rhsMainImageUrl = that.getMainImageUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mainImageUrl", lhsMainImageUrl), LocatorUtils.property(thatLocator, "mainImageUrl", rhsMainImageUrl), lhsMainImageUrl, rhsMainImageUrl)) {
                return false;
            }
        }
        {
            String lhsThumbnailUrl;
            lhsThumbnailUrl = this.getThumbnailUrl();
            String rhsThumbnailUrl;
            rhsThumbnailUrl = that.getThumbnailUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "thumbnailUrl", lhsThumbnailUrl), LocatorUtils.property(thatLocator, "thumbnailUrl", rhsThumbnailUrl), lhsThumbnailUrl, rhsThumbnailUrl)) {
                return false;
            }
        }
        {
            String lhsTileImageUrl;
            lhsTileImageUrl = this.getTileImageUrl();
            String rhsTileImageUrl;
            rhsTileImageUrl = that.getTileImageUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tileImageUrl", lhsTileImageUrl), LocatorUtils.property(thatLocator, "tileImageUrl", rhsTileImageUrl), lhsTileImageUrl, rhsTileImageUrl)) {
                return false;
            }
        }
        {
            String lhsFileType;
            lhsFileType = this.getFileType();
            String rhsFileType;
            rhsFileType = that.getFileType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fileType", lhsFileType), LocatorUtils.property(thatLocator, "fileType", rhsFileType), lhsFileType, rhsFileType)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            int lhsBoardId;
            lhsBoardId = this.getBoardId();
            int rhsBoardId;
            rhsBoardId = that.getBoardId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardId", lhsBoardId), LocatorUtils.property(thatLocator, "boardId", rhsBoardId), lhsBoardId, rhsBoardId)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theUserName;
            theUserName = this.getUserName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userName", theUserName), currentHashCode, theUserName);
        }
        {
            BigDecimal theBoardPrice;
            theBoardPrice = this.getBoardPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardPrice", theBoardPrice), currentHashCode, theBoardPrice);
        }
        {
            BigDecimal theTotalPrice;
            theTotalPrice = this.getTotalPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totalPrice", theTotalPrice), currentHashCode, theTotalPrice);
        }
        {
            XMLGregorianCalendar theSellerPayDate;
            theSellerPayDate = this.getSellerPayDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sellerPayDate", theSellerPayDate), currentHashCode, theSellerPayDate);
        }
        {
            String theLastname;
            theLastname = this.getLastname();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastname", theLastname), currentHashCode, theLastname);
        }
        {
            String theFirstname;
            theFirstname = this.getFirstname();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "firstname", theFirstname), currentHashCode, theFirstname);
        }
        {
            String theProfilename;
            theProfilename = this.getProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "profilename", theProfilename), currentHashCode, theProfilename);
        }
        {
            int theUseProfilename;
            theUseProfilename = this.getUseProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "useProfilename", theUseProfilename), currentHashCode, theUseProfilename);
        }
        {
            String theStatusdescription;
            theStatusdescription = this.getStatusdescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "statusdescription", theStatusdescription), currentHashCode, theStatusdescription);
        }
        {
            String theMainImageUrl;
            theMainImageUrl = this.getMainImageUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mainImageUrl", theMainImageUrl), currentHashCode, theMainImageUrl);
        }
        {
            String theThumbnailUrl;
            theThumbnailUrl = this.getThumbnailUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "thumbnailUrl", theThumbnailUrl), currentHashCode, theThumbnailUrl);
        }
        {
            String theTileImageUrl;
            theTileImageUrl = this.getTileImageUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tileImageUrl", theTileImageUrl), currentHashCode, theTileImageUrl);
        }
        {
            String theFileType;
            theFileType = this.getFileType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fileType", theFileType), currentHashCode, theFileType);
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardId", theBoardId), currentHashCode, theBoardId);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof DesignWallBoardInfoDomain) {
            final DesignWallBoardInfoDomain copy = ((DesignWallBoardInfoDomain) draftCopy);
            if (this.userName!= null) {
                String sourceUserName;
                sourceUserName = this.getUserName();
                String copyUserName = ((String) strategy.copy(LocatorUtils.property(locator, "userName", sourceUserName), sourceUserName));
                copy.setUserName(copyUserName);
            } else {
                copy.userName = null;
            }
            if (this.boardPrice!= null) {
                BigDecimal sourceBoardPrice;
                sourceBoardPrice = this.getBoardPrice();
                BigDecimal copyBoardPrice = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "boardPrice", sourceBoardPrice), sourceBoardPrice));
                copy.setBoardPrice(copyBoardPrice);
            } else {
                copy.boardPrice = null;
            }
            if (this.totalPrice!= null) {
                BigDecimal sourceTotalPrice;
                sourceTotalPrice = this.getTotalPrice();
                BigDecimal copyTotalPrice = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "totalPrice", sourceTotalPrice), sourceTotalPrice));
                copy.setTotalPrice(copyTotalPrice);
            } else {
                copy.totalPrice = null;
            }
            if (this.sellerPayDate!= null) {
                XMLGregorianCalendar sourceSellerPayDate;
                sourceSellerPayDate = this.getSellerPayDate();
                XMLGregorianCalendar copySellerPayDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "sellerPayDate", sourceSellerPayDate), sourceSellerPayDate));
                copy.setSellerPayDate(copySellerPayDate);
            } else {
                copy.sellerPayDate = null;
            }
            if (this.lastname!= null) {
                String sourceLastname;
                sourceLastname = this.getLastname();
                String copyLastname = ((String) strategy.copy(LocatorUtils.property(locator, "lastname", sourceLastname), sourceLastname));
                copy.setLastname(copyLastname);
            } else {
                copy.lastname = null;
            }
            if (this.firstname!= null) {
                String sourceFirstname;
                sourceFirstname = this.getFirstname();
                String copyFirstname = ((String) strategy.copy(LocatorUtils.property(locator, "firstname", sourceFirstname), sourceFirstname));
                copy.setFirstname(copyFirstname);
            } else {
                copy.firstname = null;
            }
            if (this.profilename!= null) {
                String sourceProfilename;
                sourceProfilename = this.getProfilename();
                String copyProfilename = ((String) strategy.copy(LocatorUtils.property(locator, "profilename", sourceProfilename), sourceProfilename));
                copy.setProfilename(copyProfilename);
            } else {
                copy.profilename = null;
            }
            int sourceUseProfilename;
            sourceUseProfilename = this.getUseProfilename();
            int copyUseProfilename = strategy.copy(LocatorUtils.property(locator, "useProfilename", sourceUseProfilename), sourceUseProfilename);
            copy.setUseProfilename(copyUseProfilename);
            if (this.statusdescription!= null) {
                String sourceStatusdescription;
                sourceStatusdescription = this.getStatusdescription();
                String copyStatusdescription = ((String) strategy.copy(LocatorUtils.property(locator, "statusdescription", sourceStatusdescription), sourceStatusdescription));
                copy.setStatusdescription(copyStatusdescription);
            } else {
                copy.statusdescription = null;
            }
            if (this.mainImageUrl!= null) {
                String sourceMainImageUrl;
                sourceMainImageUrl = this.getMainImageUrl();
                String copyMainImageUrl = ((String) strategy.copy(LocatorUtils.property(locator, "mainImageUrl", sourceMainImageUrl), sourceMainImageUrl));
                copy.setMainImageUrl(copyMainImageUrl);
            } else {
                copy.mainImageUrl = null;
            }
            if (this.thumbnailUrl!= null) {
                String sourceThumbnailUrl;
                sourceThumbnailUrl = this.getThumbnailUrl();
                String copyThumbnailUrl = ((String) strategy.copy(LocatorUtils.property(locator, "thumbnailUrl", sourceThumbnailUrl), sourceThumbnailUrl));
                copy.setThumbnailUrl(copyThumbnailUrl);
            } else {
                copy.thumbnailUrl = null;
            }
            if (this.tileImageUrl!= null) {
                String sourceTileImageUrl;
                sourceTileImageUrl = this.getTileImageUrl();
                String copyTileImageUrl = ((String) strategy.copy(LocatorUtils.property(locator, "tileImageUrl", sourceTileImageUrl), sourceTileImageUrl));
                copy.setTileImageUrl(copyTileImageUrl);
            } else {
                copy.tileImageUrl = null;
            }
            if (this.fileType!= null) {
                String sourceFileType;
                sourceFileType = this.getFileType();
                String copyFileType = ((String) strategy.copy(LocatorUtils.property(locator, "fileType", sourceFileType), sourceFileType));
                copy.setFileType(copyFileType);
            } else {
                copy.fileType = null;
            }
            if (this.name!= null) {
                String sourceName;
                sourceName = this.getName();
                String copyName = ((String) strategy.copy(LocatorUtils.property(locator, "name", sourceName), sourceName));
                copy.setName(copyName);
            } else {
                copy.name = null;
            }
            int sourceBoardId;
            sourceBoardId = this.getBoardId();
            int copyBoardId = strategy.copy(LocatorUtils.property(locator, "boardId", sourceBoardId), sourceBoardId);
            copy.setBoardId(copyBoardId);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new DesignWallBoardInfoDomain();
    }

}
