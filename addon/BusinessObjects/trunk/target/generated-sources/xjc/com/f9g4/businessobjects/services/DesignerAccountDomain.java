//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for DesignerAccountDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DesignerAccountDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="boardId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="boardName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="boardPrice">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="totalPrice">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *               &lt;totalDigits value="15"/>
 *               &lt;fractionDigits value="2"/>
 *               &lt;minExclusive value="-10000000000000"/>
 *               &lt;maxExclusive value="10000000000000"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="boardImage" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="tileImageUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="portfilioId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="portfolioName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="purchaserId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="purchaserName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="dateSold" type="{http://www.w3.org/2001/XMLSchema}dateTime"/>
 *         &lt;element name="paymentStatusId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="paymentStatus" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DesignerAccountDomain", propOrder = {
    "boardId",
    "boardName",
    "boardPrice",
    "totalPrice",
    "boardImage",
    "tileImageUrl",
    "portfilioId",
    "portfolioName",
    "purchaserId",
    "purchaserName",
    "dateSold",
    "paymentStatusId",
    "paymentStatus"
})
public class DesignerAccountDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int boardId;
    @XmlElement(required = true)
    protected String boardName;
    @XmlElement(required = true)
    protected BigDecimal boardPrice;
    @XmlElement(required = true)
    protected BigDecimal totalPrice;
    @XmlElement(required = true)
    protected String boardImage;
    @XmlElement(required = true)
    protected String tileImageUrl;
    protected int portfilioId;
    @XmlElement(required = true)
    protected String portfolioName;
    protected int purchaserId;
    @XmlElement(required = true)
    protected String purchaserName;
    @XmlElement(required = true)
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar dateSold;
    protected int paymentStatusId;
    @XmlElement(required = true)
    protected String paymentStatus;

    /**
     * Default no-arg constructor
     * 
     */
    public DesignerAccountDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public DesignerAccountDomain(final int boardId, final String boardName, final BigDecimal boardPrice, final BigDecimal totalPrice, final String boardImage, final String tileImageUrl, final int portfilioId, final String portfolioName, final int purchaserId, final String purchaserName, final XMLGregorianCalendar dateSold, final int paymentStatusId, final String paymentStatus) {
        this.boardId = boardId;
        this.boardName = boardName;
        this.boardPrice = boardPrice;
        this.totalPrice = totalPrice;
        this.boardImage = boardImage;
        this.tileImageUrl = tileImageUrl;
        this.portfilioId = portfilioId;
        this.portfolioName = portfolioName;
        this.purchaserId = purchaserId;
        this.purchaserName = purchaserName;
        this.dateSold = dateSold;
        this.paymentStatusId = paymentStatusId;
        this.paymentStatus = paymentStatus;
    }

    /**
     * Gets the value of the boardId property.
     * 
     */
    public int getBoardId() {
        return boardId;
    }

    /**
     * Sets the value of the boardId property.
     * 
     */
    public void setBoardId(int value) {
        this.boardId = value;
    }

    /**
     * Gets the value of the boardName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBoardName() {
        return boardName;
    }

    /**
     * Sets the value of the boardName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBoardName(String value) {
        this.boardName = value;
    }

    /**
     * Gets the value of the boardPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getBoardPrice() {
        return boardPrice;
    }

    /**
     * Sets the value of the boardPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setBoardPrice(BigDecimal value) {
        this.boardPrice = value;
    }

    /**
     * Gets the value of the totalPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalPrice() {
        return totalPrice;
    }

    /**
     * Sets the value of the totalPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalPrice(BigDecimal value) {
        this.totalPrice = value;
    }

    /**
     * Gets the value of the boardImage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBoardImage() {
        return boardImage;
    }

    /**
     * Sets the value of the boardImage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBoardImage(String value) {
        this.boardImage = value;
    }

    /**
     * Gets the value of the tileImageUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTileImageUrl() {
        return tileImageUrl;
    }

    /**
     * Sets the value of the tileImageUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTileImageUrl(String value) {
        this.tileImageUrl = value;
    }

    /**
     * Gets the value of the portfilioId property.
     * 
     */
    public int getPortfilioId() {
        return portfilioId;
    }

    /**
     * Sets the value of the portfilioId property.
     * 
     */
    public void setPortfilioId(int value) {
        this.portfilioId = value;
    }

    /**
     * Gets the value of the portfolioName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPortfolioName() {
        return portfolioName;
    }

    /**
     * Sets the value of the portfolioName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPortfolioName(String value) {
        this.portfolioName = value;
    }

    /**
     * Gets the value of the purchaserId property.
     * 
     */
    public int getPurchaserId() {
        return purchaserId;
    }

    /**
     * Sets the value of the purchaserId property.
     * 
     */
    public void setPurchaserId(int value) {
        this.purchaserId = value;
    }

    /**
     * Gets the value of the purchaserName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPurchaserName() {
        return purchaserName;
    }

    /**
     * Sets the value of the purchaserName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPurchaserName(String value) {
        this.purchaserName = value;
    }

    /**
     * Gets the value of the dateSold property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDateSold() {
        return dateSold;
    }

    /**
     * Sets the value of the dateSold property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDateSold(XMLGregorianCalendar value) {
        this.dateSold = value;
    }

    /**
     * Gets the value of the paymentStatusId property.
     * 
     */
    public int getPaymentStatusId() {
        return paymentStatusId;
    }

    /**
     * Sets the value of the paymentStatusId property.
     * 
     */
    public void setPaymentStatusId(int value) {
        this.paymentStatusId = value;
    }

    /**
     * Gets the value of the paymentStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPaymentStatus() {
        return paymentStatus;
    }

    /**
     * Sets the value of the paymentStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPaymentStatus(String value) {
        this.paymentStatus = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            strategy.appendField(locator, this, "boardId", buffer, theBoardId);
        }
        {
            String theBoardName;
            theBoardName = this.getBoardName();
            strategy.appendField(locator, this, "boardName", buffer, theBoardName);
        }
        {
            BigDecimal theBoardPrice;
            theBoardPrice = this.getBoardPrice();
            strategy.appendField(locator, this, "boardPrice", buffer, theBoardPrice);
        }
        {
            BigDecimal theTotalPrice;
            theTotalPrice = this.getTotalPrice();
            strategy.appendField(locator, this, "totalPrice", buffer, theTotalPrice);
        }
        {
            String theBoardImage;
            theBoardImage = this.getBoardImage();
            strategy.appendField(locator, this, "boardImage", buffer, theBoardImage);
        }
        {
            String theTileImageUrl;
            theTileImageUrl = this.getTileImageUrl();
            strategy.appendField(locator, this, "tileImageUrl", buffer, theTileImageUrl);
        }
        {
            int thePortfilioId;
            thePortfilioId = this.getPortfilioId();
            strategy.appendField(locator, this, "portfilioId", buffer, thePortfilioId);
        }
        {
            String thePortfolioName;
            thePortfolioName = this.getPortfolioName();
            strategy.appendField(locator, this, "portfolioName", buffer, thePortfolioName);
        }
        {
            int thePurchaserId;
            thePurchaserId = this.getPurchaserId();
            strategy.appendField(locator, this, "purchaserId", buffer, thePurchaserId);
        }
        {
            String thePurchaserName;
            thePurchaserName = this.getPurchaserName();
            strategy.appendField(locator, this, "purchaserName", buffer, thePurchaserName);
        }
        {
            XMLGregorianCalendar theDateSold;
            theDateSold = this.getDateSold();
            strategy.appendField(locator, this, "dateSold", buffer, theDateSold);
        }
        {
            int thePaymentStatusId;
            thePaymentStatusId = this.getPaymentStatusId();
            strategy.appendField(locator, this, "paymentStatusId", buffer, thePaymentStatusId);
        }
        {
            String thePaymentStatus;
            thePaymentStatus = this.getPaymentStatus();
            strategy.appendField(locator, this, "paymentStatus", buffer, thePaymentStatus);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DesignerAccountDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DesignerAccountDomain that = ((DesignerAccountDomain) object);
        {
            int lhsBoardId;
            lhsBoardId = this.getBoardId();
            int rhsBoardId;
            rhsBoardId = that.getBoardId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardId", lhsBoardId), LocatorUtils.property(thatLocator, "boardId", rhsBoardId), lhsBoardId, rhsBoardId)) {
                return false;
            }
        }
        {
            String lhsBoardName;
            lhsBoardName = this.getBoardName();
            String rhsBoardName;
            rhsBoardName = that.getBoardName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardName", lhsBoardName), LocatorUtils.property(thatLocator, "boardName", rhsBoardName), lhsBoardName, rhsBoardName)) {
                return false;
            }
        }
        {
            BigDecimal lhsBoardPrice;
            lhsBoardPrice = this.getBoardPrice();
            BigDecimal rhsBoardPrice;
            rhsBoardPrice = that.getBoardPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardPrice", lhsBoardPrice), LocatorUtils.property(thatLocator, "boardPrice", rhsBoardPrice), lhsBoardPrice, rhsBoardPrice)) {
                return false;
            }
        }
        {
            BigDecimal lhsTotalPrice;
            lhsTotalPrice = this.getTotalPrice();
            BigDecimal rhsTotalPrice;
            rhsTotalPrice = that.getTotalPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalPrice", lhsTotalPrice), LocatorUtils.property(thatLocator, "totalPrice", rhsTotalPrice), lhsTotalPrice, rhsTotalPrice)) {
                return false;
            }
        }
        {
            String lhsBoardImage;
            lhsBoardImage = this.getBoardImage();
            String rhsBoardImage;
            rhsBoardImage = that.getBoardImage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardImage", lhsBoardImage), LocatorUtils.property(thatLocator, "boardImage", rhsBoardImage), lhsBoardImage, rhsBoardImage)) {
                return false;
            }
        }
        {
            String lhsTileImageUrl;
            lhsTileImageUrl = this.getTileImageUrl();
            String rhsTileImageUrl;
            rhsTileImageUrl = that.getTileImageUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tileImageUrl", lhsTileImageUrl), LocatorUtils.property(thatLocator, "tileImageUrl", rhsTileImageUrl), lhsTileImageUrl, rhsTileImageUrl)) {
                return false;
            }
        }
        {
            int lhsPortfilioId;
            lhsPortfilioId = this.getPortfilioId();
            int rhsPortfilioId;
            rhsPortfilioId = that.getPortfilioId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfilioId", lhsPortfilioId), LocatorUtils.property(thatLocator, "portfilioId", rhsPortfilioId), lhsPortfilioId, rhsPortfilioId)) {
                return false;
            }
        }
        {
            String lhsPortfolioName;
            lhsPortfolioName = this.getPortfolioName();
            String rhsPortfolioName;
            rhsPortfolioName = that.getPortfolioName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfolioName", lhsPortfolioName), LocatorUtils.property(thatLocator, "portfolioName", rhsPortfolioName), lhsPortfolioName, rhsPortfolioName)) {
                return false;
            }
        }
        {
            int lhsPurchaserId;
            lhsPurchaserId = this.getPurchaserId();
            int rhsPurchaserId;
            rhsPurchaserId = that.getPurchaserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purchaserId", lhsPurchaserId), LocatorUtils.property(thatLocator, "purchaserId", rhsPurchaserId), lhsPurchaserId, rhsPurchaserId)) {
                return false;
            }
        }
        {
            String lhsPurchaserName;
            lhsPurchaserName = this.getPurchaserName();
            String rhsPurchaserName;
            rhsPurchaserName = that.getPurchaserName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "purchaserName", lhsPurchaserName), LocatorUtils.property(thatLocator, "purchaserName", rhsPurchaserName), lhsPurchaserName, rhsPurchaserName)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDateSold;
            lhsDateSold = this.getDateSold();
            XMLGregorianCalendar rhsDateSold;
            rhsDateSold = that.getDateSold();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateSold", lhsDateSold), LocatorUtils.property(thatLocator, "dateSold", rhsDateSold), lhsDateSold, rhsDateSold)) {
                return false;
            }
        }
        {
            int lhsPaymentStatusId;
            lhsPaymentStatusId = this.getPaymentStatusId();
            int rhsPaymentStatusId;
            rhsPaymentStatusId = that.getPaymentStatusId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentStatusId", lhsPaymentStatusId), LocatorUtils.property(thatLocator, "paymentStatusId", rhsPaymentStatusId), lhsPaymentStatusId, rhsPaymentStatusId)) {
                return false;
            }
        }
        {
            String lhsPaymentStatus;
            lhsPaymentStatus = this.getPaymentStatus();
            String rhsPaymentStatus;
            rhsPaymentStatus = that.getPaymentStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentStatus", lhsPaymentStatus), LocatorUtils.property(thatLocator, "paymentStatus", rhsPaymentStatus), lhsPaymentStatus, rhsPaymentStatus)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardId", theBoardId), currentHashCode, theBoardId);
        }
        {
            String theBoardName;
            theBoardName = this.getBoardName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardName", theBoardName), currentHashCode, theBoardName);
        }
        {
            BigDecimal theBoardPrice;
            theBoardPrice = this.getBoardPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardPrice", theBoardPrice), currentHashCode, theBoardPrice);
        }
        {
            BigDecimal theTotalPrice;
            theTotalPrice = this.getTotalPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totalPrice", theTotalPrice), currentHashCode, theTotalPrice);
        }
        {
            String theBoardImage;
            theBoardImage = this.getBoardImage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardImage", theBoardImage), currentHashCode, theBoardImage);
        }
        {
            String theTileImageUrl;
            theTileImageUrl = this.getTileImageUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tileImageUrl", theTileImageUrl), currentHashCode, theTileImageUrl);
        }
        {
            int thePortfilioId;
            thePortfilioId = this.getPortfilioId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfilioId", thePortfilioId), currentHashCode, thePortfilioId);
        }
        {
            String thePortfolioName;
            thePortfolioName = this.getPortfolioName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfolioName", thePortfolioName), currentHashCode, thePortfolioName);
        }
        {
            int thePurchaserId;
            thePurchaserId = this.getPurchaserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purchaserId", thePurchaserId), currentHashCode, thePurchaserId);
        }
        {
            String thePurchaserName;
            thePurchaserName = this.getPurchaserName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "purchaserName", thePurchaserName), currentHashCode, thePurchaserName);
        }
        {
            XMLGregorianCalendar theDateSold;
            theDateSold = this.getDateSold();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateSold", theDateSold), currentHashCode, theDateSold);
        }
        {
            int thePaymentStatusId;
            thePaymentStatusId = this.getPaymentStatusId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentStatusId", thePaymentStatusId), currentHashCode, thePaymentStatusId);
        }
        {
            String thePaymentStatus;
            thePaymentStatus = this.getPaymentStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentStatus", thePaymentStatus), currentHashCode, thePaymentStatus);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof DesignerAccountDomain) {
            final DesignerAccountDomain copy = ((DesignerAccountDomain) draftCopy);
            int sourceBoardId;
            sourceBoardId = this.getBoardId();
            int copyBoardId = strategy.copy(LocatorUtils.property(locator, "boardId", sourceBoardId), sourceBoardId);
            copy.setBoardId(copyBoardId);
            if (this.boardName!= null) {
                String sourceBoardName;
                sourceBoardName = this.getBoardName();
                String copyBoardName = ((String) strategy.copy(LocatorUtils.property(locator, "boardName", sourceBoardName), sourceBoardName));
                copy.setBoardName(copyBoardName);
            } else {
                copy.boardName = null;
            }
            if (this.boardPrice!= null) {
                BigDecimal sourceBoardPrice;
                sourceBoardPrice = this.getBoardPrice();
                BigDecimal copyBoardPrice = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "boardPrice", sourceBoardPrice), sourceBoardPrice));
                copy.setBoardPrice(copyBoardPrice);
            } else {
                copy.boardPrice = null;
            }
            if (this.totalPrice!= null) {
                BigDecimal sourceTotalPrice;
                sourceTotalPrice = this.getTotalPrice();
                BigDecimal copyTotalPrice = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "totalPrice", sourceTotalPrice), sourceTotalPrice));
                copy.setTotalPrice(copyTotalPrice);
            } else {
                copy.totalPrice = null;
            }
            if (this.boardImage!= null) {
                String sourceBoardImage;
                sourceBoardImage = this.getBoardImage();
                String copyBoardImage = ((String) strategy.copy(LocatorUtils.property(locator, "boardImage", sourceBoardImage), sourceBoardImage));
                copy.setBoardImage(copyBoardImage);
            } else {
                copy.boardImage = null;
            }
            if (this.tileImageUrl!= null) {
                String sourceTileImageUrl;
                sourceTileImageUrl = this.getTileImageUrl();
                String copyTileImageUrl = ((String) strategy.copy(LocatorUtils.property(locator, "tileImageUrl", sourceTileImageUrl), sourceTileImageUrl));
                copy.setTileImageUrl(copyTileImageUrl);
            } else {
                copy.tileImageUrl = null;
            }
            int sourcePortfilioId;
            sourcePortfilioId = this.getPortfilioId();
            int copyPortfilioId = strategy.copy(LocatorUtils.property(locator, "portfilioId", sourcePortfilioId), sourcePortfilioId);
            copy.setPortfilioId(copyPortfilioId);
            if (this.portfolioName!= null) {
                String sourcePortfolioName;
                sourcePortfolioName = this.getPortfolioName();
                String copyPortfolioName = ((String) strategy.copy(LocatorUtils.property(locator, "portfolioName", sourcePortfolioName), sourcePortfolioName));
                copy.setPortfolioName(copyPortfolioName);
            } else {
                copy.portfolioName = null;
            }
            int sourcePurchaserId;
            sourcePurchaserId = this.getPurchaserId();
            int copyPurchaserId = strategy.copy(LocatorUtils.property(locator, "purchaserId", sourcePurchaserId), sourcePurchaserId);
            copy.setPurchaserId(copyPurchaserId);
            if (this.purchaserName!= null) {
                String sourcePurchaserName;
                sourcePurchaserName = this.getPurchaserName();
                String copyPurchaserName = ((String) strategy.copy(LocatorUtils.property(locator, "purchaserName", sourcePurchaserName), sourcePurchaserName));
                copy.setPurchaserName(copyPurchaserName);
            } else {
                copy.purchaserName = null;
            }
            if (this.dateSold!= null) {
                XMLGregorianCalendar sourceDateSold;
                sourceDateSold = this.getDateSold();
                XMLGregorianCalendar copyDateSold = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "dateSold", sourceDateSold), sourceDateSold));
                copy.setDateSold(copyDateSold);
            } else {
                copy.dateSold = null;
            }
            int sourcePaymentStatusId;
            sourcePaymentStatusId = this.getPaymentStatusId();
            int copyPaymentStatusId = strategy.copy(LocatorUtils.property(locator, "paymentStatusId", sourcePaymentStatusId), sourcePaymentStatusId);
            copy.setPaymentStatusId(copyPaymentStatusId);
            if (this.paymentStatus!= null) {
                String sourcePaymentStatus;
                sourcePaymentStatus = this.getPaymentStatus();
                String copyPaymentStatus = ((String) strategy.copy(LocatorUtils.property(locator, "paymentStatus", sourcePaymentStatus), sourcePaymentStatus));
                copy.setPaymentStatus(copyPaymentStatus);
            } else {
                copy.paymentStatus = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new DesignerAccountDomain();
    }

}
