//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for GetBoardsByPMRequest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GetBoardsByPMRequest">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="userId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="publishToMP" type="{http://www.w3.org/2001/XMLSchema}int" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="portfolioTypes" type="{http://www.w3.org/2001/XMLSchema}int" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GetBoardsByPMRequest", propOrder = {
    "userId",
    "publishToMP",
    "portfolioTypes"
})
@XmlRootElement(name = "GetBoardsByPMRequest")
public class GetBoardsByPMRequest implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int userId;
    @XmlElement(type = Integer.class)
    protected List<Integer> publishToMP;
    @XmlElement(type = Integer.class)
    protected List<Integer> portfolioTypes;

    /**
     * Default no-arg constructor
     * 
     */
    public GetBoardsByPMRequest() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public GetBoardsByPMRequest(final int userId, final List<Integer> publishToMP, final List<Integer> portfolioTypes) {
        this.userId = userId;
        this.publishToMP = publishToMP;
        this.portfolioTypes = portfolioTypes;
    }

    /**
     * Gets the value of the userId property.
     * 
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     */
    public void setUserId(int value) {
        this.userId = value;
    }

    /**
     * Gets the value of the publishToMP property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the publishToMP property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPublishToMP().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
     * 
     * 
     */
    public List<Integer> getPublishToMP() {
        if (publishToMP == null) {
            publishToMP = new ArrayList<Integer>();
        }
        return this.publishToMP;
    }

    /**
     * Gets the value of the portfolioTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the portfolioTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPortfolioTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
     * 
     * 
     */
    public List<Integer> getPortfolioTypes() {
        if (portfolioTypes == null) {
            portfolioTypes = new ArrayList<Integer>();
        }
        return this.portfolioTypes;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            List<Integer> thePublishToMP;
            thePublishToMP = this.getPublishToMP();
            strategy.appendField(locator, this, "publishToMP", buffer, thePublishToMP);
        }
        {
            List<Integer> thePortfolioTypes;
            thePortfolioTypes = this.getPortfolioTypes();
            strategy.appendField(locator, this, "portfolioTypes", buffer, thePortfolioTypes);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GetBoardsByPMRequest)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final GetBoardsByPMRequest that = ((GetBoardsByPMRequest) object);
        {
            int lhsUserId;
            lhsUserId = this.getUserId();
            int rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            List<Integer> lhsPublishToMP;
            lhsPublishToMP = this.getPublishToMP();
            List<Integer> rhsPublishToMP;
            rhsPublishToMP = that.getPublishToMP();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publishToMP", lhsPublishToMP), LocatorUtils.property(thatLocator, "publishToMP", rhsPublishToMP), lhsPublishToMP, rhsPublishToMP)) {
                return false;
            }
        }
        {
            List<Integer> lhsPortfolioTypes;
            lhsPortfolioTypes = this.getPortfolioTypes();
            List<Integer> rhsPortfolioTypes;
            rhsPortfolioTypes = that.getPortfolioTypes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfolioTypes", lhsPortfolioTypes), LocatorUtils.property(thatLocator, "portfolioTypes", rhsPortfolioTypes), lhsPortfolioTypes, rhsPortfolioTypes)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            List<Integer> thePublishToMP;
            thePublishToMP = this.getPublishToMP();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publishToMP", thePublishToMP), currentHashCode, thePublishToMP);
        }
        {
            List<Integer> thePortfolioTypes;
            thePortfolioTypes = this.getPortfolioTypes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfolioTypes", thePortfolioTypes), currentHashCode, thePortfolioTypes);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof GetBoardsByPMRequest) {
            final GetBoardsByPMRequest copy = ((GetBoardsByPMRequest) draftCopy);
            int sourceUserId;
            sourceUserId = this.getUserId();
            int copyUserId = strategy.copy(LocatorUtils.property(locator, "userId", sourceUserId), sourceUserId);
            copy.setUserId(copyUserId);
            if ((this.publishToMP!= null)&&(!this.publishToMP.isEmpty())) {
                List<Integer> sourcePublishToMP;
                sourcePublishToMP = this.getPublishToMP();
                @SuppressWarnings("unchecked")
                List<Integer> copyPublishToMP = ((List<Integer> ) strategy.copy(LocatorUtils.property(locator, "publishToMP", sourcePublishToMP), sourcePublishToMP));
                copy.publishToMP = null;
                List<Integer> uniquePublishToMPl = copy.getPublishToMP();
                uniquePublishToMPl.addAll(copyPublishToMP);
            } else {
                copy.publishToMP = null;
            }
            if ((this.portfolioTypes!= null)&&(!this.portfolioTypes.isEmpty())) {
                List<Integer> sourcePortfolioTypes;
                sourcePortfolioTypes = this.getPortfolioTypes();
                @SuppressWarnings("unchecked")
                List<Integer> copyPortfolioTypes = ((List<Integer> ) strategy.copy(LocatorUtils.property(locator, "portfolioTypes", sourcePortfolioTypes), sourcePortfolioTypes));
                copy.portfolioTypes = null;
                List<Integer> uniquePortfolioTypesl = copy.getPortfolioTypes();
                uniquePortfolioTypesl.addAll(copyPortfolioTypes);
            } else {
                copy.portfolioTypes = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new GetBoardsByPMRequest();
    }

}
