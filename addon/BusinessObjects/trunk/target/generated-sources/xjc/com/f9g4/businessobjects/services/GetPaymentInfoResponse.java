//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.f9g4.businessobjects.common.Status;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for GetPaymentInfoResponse complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GetPaymentInfoResponse">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="status" type="{http://common.businessobjects.f9g4.com}Status"/>
 *         &lt;element name="ack" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="correlationId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="timestamp" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="build" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="payStatus" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="pendingReason" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="transactionId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="transactionStatus" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="senderTransactionId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="senderTransactionStatus" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="memo" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="senderEmail" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="actionType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="cancelUrl" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="returnUrl" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="currencyCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="feesPayer" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="trackingId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GetPaymentInfoResponse", propOrder = {
    "status",
    "ack",
    "correlationId",
    "timestamp",
    "build",
    "payStatus",
    "pendingReason",
    "transactionId",
    "transactionStatus",
    "senderTransactionId",
    "senderTransactionStatus",
    "memo",
    "senderEmail",
    "actionType",
    "cancelUrl",
    "returnUrl",
    "currencyCode",
    "feesPayer",
    "trackingId"
})
@XmlRootElement(name = "GetPaymentInfoResponse")
public class GetPaymentInfoResponse implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected Status status;
    protected String ack;
    protected String correlationId;
    protected String timestamp;
    protected String build;
    protected String payStatus;
    protected String pendingReason;
    protected String transactionId;
    protected String transactionStatus;
    protected String senderTransactionId;
    protected String senderTransactionStatus;
    protected String memo;
    protected String senderEmail;
    protected String actionType;
    protected String cancelUrl;
    protected String returnUrl;
    protected String currencyCode;
    protected String feesPayer;
    protected String trackingId;

    /**
     * Default no-arg constructor
     * 
     */
    public GetPaymentInfoResponse() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public GetPaymentInfoResponse(final Status status, final String ack, final String correlationId, final String timestamp, final String build, final String payStatus, final String pendingReason, final String transactionId, final String transactionStatus, final String senderTransactionId, final String senderTransactionStatus, final String memo, final String senderEmail, final String actionType, final String cancelUrl, final String returnUrl, final String currencyCode, final String feesPayer, final String trackingId) {
        this.status = status;
        this.ack = ack;
        this.correlationId = correlationId;
        this.timestamp = timestamp;
        this.build = build;
        this.payStatus = payStatus;
        this.pendingReason = pendingReason;
        this.transactionId = transactionId;
        this.transactionStatus = transactionStatus;
        this.senderTransactionId = senderTransactionId;
        this.senderTransactionStatus = senderTransactionStatus;
        this.memo = memo;
        this.senderEmail = senderEmail;
        this.actionType = actionType;
        this.cancelUrl = cancelUrl;
        this.returnUrl = returnUrl;
        this.currencyCode = currencyCode;
        this.feesPayer = feesPayer;
        this.trackingId = trackingId;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link Status }
     *     
     */
    public Status getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link Status }
     *     
     */
    public void setStatus(Status value) {
        this.status = value;
    }

    /**
     * Gets the value of the ack property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAck() {
        return ack;
    }

    /**
     * Sets the value of the ack property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAck(String value) {
        this.ack = value;
    }

    /**
     * Gets the value of the correlationId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCorrelationId() {
        return correlationId;
    }

    /**
     * Sets the value of the correlationId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCorrelationId(String value) {
        this.correlationId = value;
    }

    /**
     * Gets the value of the timestamp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTimestamp() {
        return timestamp;
    }

    /**
     * Sets the value of the timestamp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTimestamp(String value) {
        this.timestamp = value;
    }

    /**
     * Gets the value of the build property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBuild() {
        return build;
    }

    /**
     * Sets the value of the build property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBuild(String value) {
        this.build = value;
    }

    /**
     * Gets the value of the payStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPayStatus() {
        return payStatus;
    }

    /**
     * Sets the value of the payStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPayStatus(String value) {
        this.payStatus = value;
    }

    /**
     * Gets the value of the pendingReason property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPendingReason() {
        return pendingReason;
    }

    /**
     * Sets the value of the pendingReason property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPendingReason(String value) {
        this.pendingReason = value;
    }

    /**
     * Gets the value of the transactionId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTransactionId() {
        return transactionId;
    }

    /**
     * Sets the value of the transactionId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionId(String value) {
        this.transactionId = value;
    }

    /**
     * Gets the value of the transactionStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTransactionStatus() {
        return transactionStatus;
    }

    /**
     * Sets the value of the transactionStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionStatus(String value) {
        this.transactionStatus = value;
    }

    /**
     * Gets the value of the senderTransactionId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSenderTransactionId() {
        return senderTransactionId;
    }

    /**
     * Sets the value of the senderTransactionId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSenderTransactionId(String value) {
        this.senderTransactionId = value;
    }

    /**
     * Gets the value of the senderTransactionStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSenderTransactionStatus() {
        return senderTransactionStatus;
    }

    /**
     * Sets the value of the senderTransactionStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSenderTransactionStatus(String value) {
        this.senderTransactionStatus = value;
    }

    /**
     * Gets the value of the memo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMemo() {
        return memo;
    }

    /**
     * Sets the value of the memo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMemo(String value) {
        this.memo = value;
    }

    /**
     * Gets the value of the senderEmail property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSenderEmail() {
        return senderEmail;
    }

    /**
     * Sets the value of the senderEmail property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSenderEmail(String value) {
        this.senderEmail = value;
    }

    /**
     * Gets the value of the actionType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getActionType() {
        return actionType;
    }

    /**
     * Sets the value of the actionType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setActionType(String value) {
        this.actionType = value;
    }

    /**
     * Gets the value of the cancelUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCancelUrl() {
        return cancelUrl;
    }

    /**
     * Sets the value of the cancelUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCancelUrl(String value) {
        this.cancelUrl = value;
    }

    /**
     * Gets the value of the returnUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReturnUrl() {
        return returnUrl;
    }

    /**
     * Sets the value of the returnUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReturnUrl(String value) {
        this.returnUrl = value;
    }

    /**
     * Gets the value of the currencyCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCurrencyCode() {
        return currencyCode;
    }

    /**
     * Sets the value of the currencyCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCurrencyCode(String value) {
        this.currencyCode = value;
    }

    /**
     * Gets the value of the feesPayer property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFeesPayer() {
        return feesPayer;
    }

    /**
     * Sets the value of the feesPayer property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFeesPayer(String value) {
        this.feesPayer = value;
    }

    /**
     * Gets the value of the trackingId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTrackingId() {
        return trackingId;
    }

    /**
     * Sets the value of the trackingId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTrackingId(String value) {
        this.trackingId = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Status theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        {
            String theAck;
            theAck = this.getAck();
            strategy.appendField(locator, this, "ack", buffer, theAck);
        }
        {
            String theCorrelationId;
            theCorrelationId = this.getCorrelationId();
            strategy.appendField(locator, this, "correlationId", buffer, theCorrelationId);
        }
        {
            String theTimestamp;
            theTimestamp = this.getTimestamp();
            strategy.appendField(locator, this, "timestamp", buffer, theTimestamp);
        }
        {
            String theBuild;
            theBuild = this.getBuild();
            strategy.appendField(locator, this, "build", buffer, theBuild);
        }
        {
            String thePayStatus;
            thePayStatus = this.getPayStatus();
            strategy.appendField(locator, this, "payStatus", buffer, thePayStatus);
        }
        {
            String thePendingReason;
            thePendingReason = this.getPendingReason();
            strategy.appendField(locator, this, "pendingReason", buffer, thePendingReason);
        }
        {
            String theTransactionId;
            theTransactionId = this.getTransactionId();
            strategy.appendField(locator, this, "transactionId", buffer, theTransactionId);
        }
        {
            String theTransactionStatus;
            theTransactionStatus = this.getTransactionStatus();
            strategy.appendField(locator, this, "transactionStatus", buffer, theTransactionStatus);
        }
        {
            String theSenderTransactionId;
            theSenderTransactionId = this.getSenderTransactionId();
            strategy.appendField(locator, this, "senderTransactionId", buffer, theSenderTransactionId);
        }
        {
            String theSenderTransactionStatus;
            theSenderTransactionStatus = this.getSenderTransactionStatus();
            strategy.appendField(locator, this, "senderTransactionStatus", buffer, theSenderTransactionStatus);
        }
        {
            String theMemo;
            theMemo = this.getMemo();
            strategy.appendField(locator, this, "memo", buffer, theMemo);
        }
        {
            String theSenderEmail;
            theSenderEmail = this.getSenderEmail();
            strategy.appendField(locator, this, "senderEmail", buffer, theSenderEmail);
        }
        {
            String theActionType;
            theActionType = this.getActionType();
            strategy.appendField(locator, this, "actionType", buffer, theActionType);
        }
        {
            String theCancelUrl;
            theCancelUrl = this.getCancelUrl();
            strategy.appendField(locator, this, "cancelUrl", buffer, theCancelUrl);
        }
        {
            String theReturnUrl;
            theReturnUrl = this.getReturnUrl();
            strategy.appendField(locator, this, "returnUrl", buffer, theReturnUrl);
        }
        {
            String theCurrencyCode;
            theCurrencyCode = this.getCurrencyCode();
            strategy.appendField(locator, this, "currencyCode", buffer, theCurrencyCode);
        }
        {
            String theFeesPayer;
            theFeesPayer = this.getFeesPayer();
            strategy.appendField(locator, this, "feesPayer", buffer, theFeesPayer);
        }
        {
            String theTrackingId;
            theTrackingId = this.getTrackingId();
            strategy.appendField(locator, this, "trackingId", buffer, theTrackingId);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GetPaymentInfoResponse)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final GetPaymentInfoResponse that = ((GetPaymentInfoResponse) object);
        {
            Status lhsStatus;
            lhsStatus = this.getStatus();
            Status rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            String lhsAck;
            lhsAck = this.getAck();
            String rhsAck;
            rhsAck = that.getAck();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ack", lhsAck), LocatorUtils.property(thatLocator, "ack", rhsAck), lhsAck, rhsAck)) {
                return false;
            }
        }
        {
            String lhsCorrelationId;
            lhsCorrelationId = this.getCorrelationId();
            String rhsCorrelationId;
            rhsCorrelationId = that.getCorrelationId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "correlationId", lhsCorrelationId), LocatorUtils.property(thatLocator, "correlationId", rhsCorrelationId), lhsCorrelationId, rhsCorrelationId)) {
                return false;
            }
        }
        {
            String lhsTimestamp;
            lhsTimestamp = this.getTimestamp();
            String rhsTimestamp;
            rhsTimestamp = that.getTimestamp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timestamp", lhsTimestamp), LocatorUtils.property(thatLocator, "timestamp", rhsTimestamp), lhsTimestamp, rhsTimestamp)) {
                return false;
            }
        }
        {
            String lhsBuild;
            lhsBuild = this.getBuild();
            String rhsBuild;
            rhsBuild = that.getBuild();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "build", lhsBuild), LocatorUtils.property(thatLocator, "build", rhsBuild), lhsBuild, rhsBuild)) {
                return false;
            }
        }
        {
            String lhsPayStatus;
            lhsPayStatus = this.getPayStatus();
            String rhsPayStatus;
            rhsPayStatus = that.getPayStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "payStatus", lhsPayStatus), LocatorUtils.property(thatLocator, "payStatus", rhsPayStatus), lhsPayStatus, rhsPayStatus)) {
                return false;
            }
        }
        {
            String lhsPendingReason;
            lhsPendingReason = this.getPendingReason();
            String rhsPendingReason;
            rhsPendingReason = that.getPendingReason();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pendingReason", lhsPendingReason), LocatorUtils.property(thatLocator, "pendingReason", rhsPendingReason), lhsPendingReason, rhsPendingReason)) {
                return false;
            }
        }
        {
            String lhsTransactionId;
            lhsTransactionId = this.getTransactionId();
            String rhsTransactionId;
            rhsTransactionId = that.getTransactionId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionId", lhsTransactionId), LocatorUtils.property(thatLocator, "transactionId", rhsTransactionId), lhsTransactionId, rhsTransactionId)) {
                return false;
            }
        }
        {
            String lhsTransactionStatus;
            lhsTransactionStatus = this.getTransactionStatus();
            String rhsTransactionStatus;
            rhsTransactionStatus = that.getTransactionStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionStatus", lhsTransactionStatus), LocatorUtils.property(thatLocator, "transactionStatus", rhsTransactionStatus), lhsTransactionStatus, rhsTransactionStatus)) {
                return false;
            }
        }
        {
            String lhsSenderTransactionId;
            lhsSenderTransactionId = this.getSenderTransactionId();
            String rhsSenderTransactionId;
            rhsSenderTransactionId = that.getSenderTransactionId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "senderTransactionId", lhsSenderTransactionId), LocatorUtils.property(thatLocator, "senderTransactionId", rhsSenderTransactionId), lhsSenderTransactionId, rhsSenderTransactionId)) {
                return false;
            }
        }
        {
            String lhsSenderTransactionStatus;
            lhsSenderTransactionStatus = this.getSenderTransactionStatus();
            String rhsSenderTransactionStatus;
            rhsSenderTransactionStatus = that.getSenderTransactionStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "senderTransactionStatus", lhsSenderTransactionStatus), LocatorUtils.property(thatLocator, "senderTransactionStatus", rhsSenderTransactionStatus), lhsSenderTransactionStatus, rhsSenderTransactionStatus)) {
                return false;
            }
        }
        {
            String lhsMemo;
            lhsMemo = this.getMemo();
            String rhsMemo;
            rhsMemo = that.getMemo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "memo", lhsMemo), LocatorUtils.property(thatLocator, "memo", rhsMemo), lhsMemo, rhsMemo)) {
                return false;
            }
        }
        {
            String lhsSenderEmail;
            lhsSenderEmail = this.getSenderEmail();
            String rhsSenderEmail;
            rhsSenderEmail = that.getSenderEmail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "senderEmail", lhsSenderEmail), LocatorUtils.property(thatLocator, "senderEmail", rhsSenderEmail), lhsSenderEmail, rhsSenderEmail)) {
                return false;
            }
        }
        {
            String lhsActionType;
            lhsActionType = this.getActionType();
            String rhsActionType;
            rhsActionType = that.getActionType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "actionType", lhsActionType), LocatorUtils.property(thatLocator, "actionType", rhsActionType), lhsActionType, rhsActionType)) {
                return false;
            }
        }
        {
            String lhsCancelUrl;
            lhsCancelUrl = this.getCancelUrl();
            String rhsCancelUrl;
            rhsCancelUrl = that.getCancelUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cancelUrl", lhsCancelUrl), LocatorUtils.property(thatLocator, "cancelUrl", rhsCancelUrl), lhsCancelUrl, rhsCancelUrl)) {
                return false;
            }
        }
        {
            String lhsReturnUrl;
            lhsReturnUrl = this.getReturnUrl();
            String rhsReturnUrl;
            rhsReturnUrl = that.getReturnUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "returnUrl", lhsReturnUrl), LocatorUtils.property(thatLocator, "returnUrl", rhsReturnUrl), lhsReturnUrl, rhsReturnUrl)) {
                return false;
            }
        }
        {
            String lhsCurrencyCode;
            lhsCurrencyCode = this.getCurrencyCode();
            String rhsCurrencyCode;
            rhsCurrencyCode = that.getCurrencyCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currencyCode", lhsCurrencyCode), LocatorUtils.property(thatLocator, "currencyCode", rhsCurrencyCode), lhsCurrencyCode, rhsCurrencyCode)) {
                return false;
            }
        }
        {
            String lhsFeesPayer;
            lhsFeesPayer = this.getFeesPayer();
            String rhsFeesPayer;
            rhsFeesPayer = that.getFeesPayer();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "feesPayer", lhsFeesPayer), LocatorUtils.property(thatLocator, "feesPayer", rhsFeesPayer), lhsFeesPayer, rhsFeesPayer)) {
                return false;
            }
        }
        {
            String lhsTrackingId;
            lhsTrackingId = this.getTrackingId();
            String rhsTrackingId;
            rhsTrackingId = that.getTrackingId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trackingId", lhsTrackingId), LocatorUtils.property(thatLocator, "trackingId", rhsTrackingId), lhsTrackingId, rhsTrackingId)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Status theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            String theAck;
            theAck = this.getAck();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ack", theAck), currentHashCode, theAck);
        }
        {
            String theCorrelationId;
            theCorrelationId = this.getCorrelationId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "correlationId", theCorrelationId), currentHashCode, theCorrelationId);
        }
        {
            String theTimestamp;
            theTimestamp = this.getTimestamp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timestamp", theTimestamp), currentHashCode, theTimestamp);
        }
        {
            String theBuild;
            theBuild = this.getBuild();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "build", theBuild), currentHashCode, theBuild);
        }
        {
            String thePayStatus;
            thePayStatus = this.getPayStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "payStatus", thePayStatus), currentHashCode, thePayStatus);
        }
        {
            String thePendingReason;
            thePendingReason = this.getPendingReason();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pendingReason", thePendingReason), currentHashCode, thePendingReason);
        }
        {
            String theTransactionId;
            theTransactionId = this.getTransactionId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionId", theTransactionId), currentHashCode, theTransactionId);
        }
        {
            String theTransactionStatus;
            theTransactionStatus = this.getTransactionStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionStatus", theTransactionStatus), currentHashCode, theTransactionStatus);
        }
        {
            String theSenderTransactionId;
            theSenderTransactionId = this.getSenderTransactionId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "senderTransactionId", theSenderTransactionId), currentHashCode, theSenderTransactionId);
        }
        {
            String theSenderTransactionStatus;
            theSenderTransactionStatus = this.getSenderTransactionStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "senderTransactionStatus", theSenderTransactionStatus), currentHashCode, theSenderTransactionStatus);
        }
        {
            String theMemo;
            theMemo = this.getMemo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "memo", theMemo), currentHashCode, theMemo);
        }
        {
            String theSenderEmail;
            theSenderEmail = this.getSenderEmail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "senderEmail", theSenderEmail), currentHashCode, theSenderEmail);
        }
        {
            String theActionType;
            theActionType = this.getActionType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "actionType", theActionType), currentHashCode, theActionType);
        }
        {
            String theCancelUrl;
            theCancelUrl = this.getCancelUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cancelUrl", theCancelUrl), currentHashCode, theCancelUrl);
        }
        {
            String theReturnUrl;
            theReturnUrl = this.getReturnUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "returnUrl", theReturnUrl), currentHashCode, theReturnUrl);
        }
        {
            String theCurrencyCode;
            theCurrencyCode = this.getCurrencyCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currencyCode", theCurrencyCode), currentHashCode, theCurrencyCode);
        }
        {
            String theFeesPayer;
            theFeesPayer = this.getFeesPayer();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "feesPayer", theFeesPayer), currentHashCode, theFeesPayer);
        }
        {
            String theTrackingId;
            theTrackingId = this.getTrackingId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trackingId", theTrackingId), currentHashCode, theTrackingId);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof GetPaymentInfoResponse) {
            final GetPaymentInfoResponse copy = ((GetPaymentInfoResponse) draftCopy);
            if (this.status!= null) {
                Status sourceStatus;
                sourceStatus = this.getStatus();
                Status copyStatus = ((Status) strategy.copy(LocatorUtils.property(locator, "status", sourceStatus), sourceStatus));
                copy.setStatus(copyStatus);
            } else {
                copy.status = null;
            }
            if (this.ack!= null) {
                String sourceAck;
                sourceAck = this.getAck();
                String copyAck = ((String) strategy.copy(LocatorUtils.property(locator, "ack", sourceAck), sourceAck));
                copy.setAck(copyAck);
            } else {
                copy.ack = null;
            }
            if (this.correlationId!= null) {
                String sourceCorrelationId;
                sourceCorrelationId = this.getCorrelationId();
                String copyCorrelationId = ((String) strategy.copy(LocatorUtils.property(locator, "correlationId", sourceCorrelationId), sourceCorrelationId));
                copy.setCorrelationId(copyCorrelationId);
            } else {
                copy.correlationId = null;
            }
            if (this.timestamp!= null) {
                String sourceTimestamp;
                sourceTimestamp = this.getTimestamp();
                String copyTimestamp = ((String) strategy.copy(LocatorUtils.property(locator, "timestamp", sourceTimestamp), sourceTimestamp));
                copy.setTimestamp(copyTimestamp);
            } else {
                copy.timestamp = null;
            }
            if (this.build!= null) {
                String sourceBuild;
                sourceBuild = this.getBuild();
                String copyBuild = ((String) strategy.copy(LocatorUtils.property(locator, "build", sourceBuild), sourceBuild));
                copy.setBuild(copyBuild);
            } else {
                copy.build = null;
            }
            if (this.payStatus!= null) {
                String sourcePayStatus;
                sourcePayStatus = this.getPayStatus();
                String copyPayStatus = ((String) strategy.copy(LocatorUtils.property(locator, "payStatus", sourcePayStatus), sourcePayStatus));
                copy.setPayStatus(copyPayStatus);
            } else {
                copy.payStatus = null;
            }
            if (this.pendingReason!= null) {
                String sourcePendingReason;
                sourcePendingReason = this.getPendingReason();
                String copyPendingReason = ((String) strategy.copy(LocatorUtils.property(locator, "pendingReason", sourcePendingReason), sourcePendingReason));
                copy.setPendingReason(copyPendingReason);
            } else {
                copy.pendingReason = null;
            }
            if (this.transactionId!= null) {
                String sourceTransactionId;
                sourceTransactionId = this.getTransactionId();
                String copyTransactionId = ((String) strategy.copy(LocatorUtils.property(locator, "transactionId", sourceTransactionId), sourceTransactionId));
                copy.setTransactionId(copyTransactionId);
            } else {
                copy.transactionId = null;
            }
            if (this.transactionStatus!= null) {
                String sourceTransactionStatus;
                sourceTransactionStatus = this.getTransactionStatus();
                String copyTransactionStatus = ((String) strategy.copy(LocatorUtils.property(locator, "transactionStatus", sourceTransactionStatus), sourceTransactionStatus));
                copy.setTransactionStatus(copyTransactionStatus);
            } else {
                copy.transactionStatus = null;
            }
            if (this.senderTransactionId!= null) {
                String sourceSenderTransactionId;
                sourceSenderTransactionId = this.getSenderTransactionId();
                String copySenderTransactionId = ((String) strategy.copy(LocatorUtils.property(locator, "senderTransactionId", sourceSenderTransactionId), sourceSenderTransactionId));
                copy.setSenderTransactionId(copySenderTransactionId);
            } else {
                copy.senderTransactionId = null;
            }
            if (this.senderTransactionStatus!= null) {
                String sourceSenderTransactionStatus;
                sourceSenderTransactionStatus = this.getSenderTransactionStatus();
                String copySenderTransactionStatus = ((String) strategy.copy(LocatorUtils.property(locator, "senderTransactionStatus", sourceSenderTransactionStatus), sourceSenderTransactionStatus));
                copy.setSenderTransactionStatus(copySenderTransactionStatus);
            } else {
                copy.senderTransactionStatus = null;
            }
            if (this.memo!= null) {
                String sourceMemo;
                sourceMemo = this.getMemo();
                String copyMemo = ((String) strategy.copy(LocatorUtils.property(locator, "memo", sourceMemo), sourceMemo));
                copy.setMemo(copyMemo);
            } else {
                copy.memo = null;
            }
            if (this.senderEmail!= null) {
                String sourceSenderEmail;
                sourceSenderEmail = this.getSenderEmail();
                String copySenderEmail = ((String) strategy.copy(LocatorUtils.property(locator, "senderEmail", sourceSenderEmail), sourceSenderEmail));
                copy.setSenderEmail(copySenderEmail);
            } else {
                copy.senderEmail = null;
            }
            if (this.actionType!= null) {
                String sourceActionType;
                sourceActionType = this.getActionType();
                String copyActionType = ((String) strategy.copy(LocatorUtils.property(locator, "actionType", sourceActionType), sourceActionType));
                copy.setActionType(copyActionType);
            } else {
                copy.actionType = null;
            }
            if (this.cancelUrl!= null) {
                String sourceCancelUrl;
                sourceCancelUrl = this.getCancelUrl();
                String copyCancelUrl = ((String) strategy.copy(LocatorUtils.property(locator, "cancelUrl", sourceCancelUrl), sourceCancelUrl));
                copy.setCancelUrl(copyCancelUrl);
            } else {
                copy.cancelUrl = null;
            }
            if (this.returnUrl!= null) {
                String sourceReturnUrl;
                sourceReturnUrl = this.getReturnUrl();
                String copyReturnUrl = ((String) strategy.copy(LocatorUtils.property(locator, "returnUrl", sourceReturnUrl), sourceReturnUrl));
                copy.setReturnUrl(copyReturnUrl);
            } else {
                copy.returnUrl = null;
            }
            if (this.currencyCode!= null) {
                String sourceCurrencyCode;
                sourceCurrencyCode = this.getCurrencyCode();
                String copyCurrencyCode = ((String) strategy.copy(LocatorUtils.property(locator, "currencyCode", sourceCurrencyCode), sourceCurrencyCode));
                copy.setCurrencyCode(copyCurrencyCode);
            } else {
                copy.currencyCode = null;
            }
            if (this.feesPayer!= null) {
                String sourceFeesPayer;
                sourceFeesPayer = this.getFeesPayer();
                String copyFeesPayer = ((String) strategy.copy(LocatorUtils.property(locator, "feesPayer", sourceFeesPayer), sourceFeesPayer));
                copy.setFeesPayer(copyFeesPayer);
            } else {
                copy.feesPayer = null;
            }
            if (this.trackingId!= null) {
                String sourceTrackingId;
                sourceTrackingId = this.getTrackingId();
                String copyTrackingId = ((String) strategy.copy(LocatorUtils.property(locator, "trackingId", sourceTrackingId), sourceTrackingId));
                copy.setTrackingId(copyTrackingId);
            } else {
                copy.trackingId = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new GetPaymentInfoResponse();
    }

}
