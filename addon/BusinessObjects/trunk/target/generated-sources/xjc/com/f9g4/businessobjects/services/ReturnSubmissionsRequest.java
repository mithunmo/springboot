//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.f9g4.businessobjects.domain.TrPortfolioDomain;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ReturnSubmissionsRequest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ReturnSubmissionsRequest">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="targetPortfolioId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="targetBoardPrice" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="newPortfolio" type="{http://domain.businessobjects.f9g4.com}trPortfolioDomain"/>
 *         &lt;element name="sendNotification" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ReturnSubmissionsRequest", propOrder = {
    "targetPortfolioId",
    "targetBoardPrice",
    "newPortfolio",
    "sendNotification"
})
@XmlRootElement(name = "ReturnSubmissionsRequest")
public class ReturnSubmissionsRequest implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int targetPortfolioId;
    protected int targetBoardPrice;
    @XmlElement(required = true)
    protected TrPortfolioDomain newPortfolio;
    @XmlElement(defaultValue = "true")
    protected boolean sendNotification;

    /**
     * Default no-arg constructor
     * 
     */
    public ReturnSubmissionsRequest() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public ReturnSubmissionsRequest(final int targetPortfolioId, final int targetBoardPrice, final TrPortfolioDomain newPortfolio, final boolean sendNotification) {
        this.targetPortfolioId = targetPortfolioId;
        this.targetBoardPrice = targetBoardPrice;
        this.newPortfolio = newPortfolio;
        this.sendNotification = sendNotification;
    }

    /**
     * Gets the value of the targetPortfolioId property.
     * 
     */
    public int getTargetPortfolioId() {
        return targetPortfolioId;
    }

    /**
     * Sets the value of the targetPortfolioId property.
     * 
     */
    public void setTargetPortfolioId(int value) {
        this.targetPortfolioId = value;
    }

    /**
     * Gets the value of the targetBoardPrice property.
     * 
     */
    public int getTargetBoardPrice() {
        return targetBoardPrice;
    }

    /**
     * Sets the value of the targetBoardPrice property.
     * 
     */
    public void setTargetBoardPrice(int value) {
        this.targetBoardPrice = value;
    }

    /**
     * Gets the value of the newPortfolio property.
     * 
     * @return
     *     possible object is
     *     {@link TrPortfolioDomain }
     *     
     */
    public TrPortfolioDomain getNewPortfolio() {
        return newPortfolio;
    }

    /**
     * Sets the value of the newPortfolio property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrPortfolioDomain }
     *     
     */
    public void setNewPortfolio(TrPortfolioDomain value) {
        this.newPortfolio = value;
    }

    /**
     * Gets the value of the sendNotification property.
     * 
     */
    public boolean isSendNotification() {
        return sendNotification;
    }

    /**
     * Sets the value of the sendNotification property.
     * 
     */
    public void setSendNotification(boolean value) {
        this.sendNotification = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theTargetPortfolioId;
            theTargetPortfolioId = this.getTargetPortfolioId();
            strategy.appendField(locator, this, "targetPortfolioId", buffer, theTargetPortfolioId);
        }
        {
            int theTargetBoardPrice;
            theTargetBoardPrice = this.getTargetBoardPrice();
            strategy.appendField(locator, this, "targetBoardPrice", buffer, theTargetBoardPrice);
        }
        {
            TrPortfolioDomain theNewPortfolio;
            theNewPortfolio = this.getNewPortfolio();
            strategy.appendField(locator, this, "newPortfolio", buffer, theNewPortfolio);
        }
        {
            boolean theSendNotification;
            theSendNotification = this.isSendNotification();
            strategy.appendField(locator, this, "sendNotification", buffer, theSendNotification);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ReturnSubmissionsRequest)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ReturnSubmissionsRequest that = ((ReturnSubmissionsRequest) object);
        {
            int lhsTargetPortfolioId;
            lhsTargetPortfolioId = this.getTargetPortfolioId();
            int rhsTargetPortfolioId;
            rhsTargetPortfolioId = that.getTargetPortfolioId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "targetPortfolioId", lhsTargetPortfolioId), LocatorUtils.property(thatLocator, "targetPortfolioId", rhsTargetPortfolioId), lhsTargetPortfolioId, rhsTargetPortfolioId)) {
                return false;
            }
        }
        {
            int lhsTargetBoardPrice;
            lhsTargetBoardPrice = this.getTargetBoardPrice();
            int rhsTargetBoardPrice;
            rhsTargetBoardPrice = that.getTargetBoardPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "targetBoardPrice", lhsTargetBoardPrice), LocatorUtils.property(thatLocator, "targetBoardPrice", rhsTargetBoardPrice), lhsTargetBoardPrice, rhsTargetBoardPrice)) {
                return false;
            }
        }
        {
            TrPortfolioDomain lhsNewPortfolio;
            lhsNewPortfolio = this.getNewPortfolio();
            TrPortfolioDomain rhsNewPortfolio;
            rhsNewPortfolio = that.getNewPortfolio();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "newPortfolio", lhsNewPortfolio), LocatorUtils.property(thatLocator, "newPortfolio", rhsNewPortfolio), lhsNewPortfolio, rhsNewPortfolio)) {
                return false;
            }
        }
        {
            boolean lhsSendNotification;
            lhsSendNotification = this.isSendNotification();
            boolean rhsSendNotification;
            rhsSendNotification = that.isSendNotification();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sendNotification", lhsSendNotification), LocatorUtils.property(thatLocator, "sendNotification", rhsSendNotification), lhsSendNotification, rhsSendNotification)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theTargetPortfolioId;
            theTargetPortfolioId = this.getTargetPortfolioId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "targetPortfolioId", theTargetPortfolioId), currentHashCode, theTargetPortfolioId);
        }
        {
            int theTargetBoardPrice;
            theTargetBoardPrice = this.getTargetBoardPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "targetBoardPrice", theTargetBoardPrice), currentHashCode, theTargetBoardPrice);
        }
        {
            TrPortfolioDomain theNewPortfolio;
            theNewPortfolio = this.getNewPortfolio();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "newPortfolio", theNewPortfolio), currentHashCode, theNewPortfolio);
        }
        {
            boolean theSendNotification;
            theSendNotification = this.isSendNotification();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sendNotification", theSendNotification), currentHashCode, theSendNotification);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof ReturnSubmissionsRequest) {
            final ReturnSubmissionsRequest copy = ((ReturnSubmissionsRequest) draftCopy);
            int sourceTargetPortfolioId;
            sourceTargetPortfolioId = this.getTargetPortfolioId();
            int copyTargetPortfolioId = strategy.copy(LocatorUtils.property(locator, "targetPortfolioId", sourceTargetPortfolioId), sourceTargetPortfolioId);
            copy.setTargetPortfolioId(copyTargetPortfolioId);
            int sourceTargetBoardPrice;
            sourceTargetBoardPrice = this.getTargetBoardPrice();
            int copyTargetBoardPrice = strategy.copy(LocatorUtils.property(locator, "targetBoardPrice", sourceTargetBoardPrice), sourceTargetBoardPrice);
            copy.setTargetBoardPrice(copyTargetBoardPrice);
            if (this.newPortfolio!= null) {
                TrPortfolioDomain sourceNewPortfolio;
                sourceNewPortfolio = this.getNewPortfolio();
                TrPortfolioDomain copyNewPortfolio = ((TrPortfolioDomain) strategy.copy(LocatorUtils.property(locator, "newPortfolio", sourceNewPortfolio), sourceNewPortfolio));
                copy.setNewPortfolio(copyNewPortfolio);
            } else {
                copy.newPortfolio = null;
            }
            boolean sourceSendNotification;
            sourceSendNotification = this.isSendNotification();
            boolean copySendNotification = strategy.copy(LocatorUtils.property(locator, "sendNotification", sourceSendNotification), sourceSendNotification);
            copy.setSendNotification(copySendNotification);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new ReturnSubmissionsRequest();
    }

}
