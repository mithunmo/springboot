//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for SearchExampleBoardsRequest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SearchExampleBoardsRequest">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="designerName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ratingOption" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="countryIds" type="{http://www.w3.org/2001/XMLSchema}int" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="skillIds" type="{http://www.w3.org/2001/XMLSchema}int" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="languageIds" type="{http://www.w3.org/2001/XMLSchema}int" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="schoolAwards" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="userId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="isPortfolioSearch" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="portfoliosearchstartdate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="portfoliosearchenddate">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}dateTime">
 *               &lt;minInclusive value="1000-01-01T00:00:00"/>
 *               &lt;maxInclusive value="9999-12-31T23:59:59"/>
 *               &lt;pattern value="\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}T\p{Nd}{2}:\p{Nd}{2}:\p{Nd}{2}"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="expertiseIds" type="{http://www.w3.org/2001/XMLSchema}int" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="specialtyIds" type="{http://www.w3.org/2001/XMLSchema}int" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="educationIds" type="{http://www.w3.org/2001/XMLSchema}int" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="minAdminRating" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="maxAdminRating" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SearchExampleBoardsRequest", propOrder = {
    "designerName",
    "ratingOption",
    "countryIds",
    "skillIds",
    "languageIds",
    "schoolAwards",
    "userId",
    "isPortfolioSearch",
    "portfoliosearchstartdate",
    "portfoliosearchenddate",
    "expertiseIds",
    "specialtyIds",
    "educationIds",
    "minAdminRating",
    "maxAdminRating"
})
@XmlRootElement(name = "SearchExampleBoardsRequest")
public class SearchExampleBoardsRequest implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected String designerName;
    protected Integer ratingOption;
    @XmlElement(type = Integer.class)
    protected List<Integer> countryIds;
    @XmlElement(type = Integer.class)
    protected List<Integer> skillIds;
    @XmlElement(type = Integer.class)
    protected List<Integer> languageIds;
    protected String schoolAwards;
    protected int userId;
    protected boolean isPortfolioSearch;
    @XmlElement(required = true)
    protected XMLGregorianCalendar portfoliosearchstartdate;
    @XmlElement(required = true)
    protected XMLGregorianCalendar portfoliosearchenddate;
    @XmlElement(type = Integer.class)
    protected List<Integer> expertiseIds;
    @XmlElement(type = Integer.class)
    protected List<Integer> specialtyIds;
    @XmlElement(type = Integer.class)
    protected List<Integer> educationIds;
    protected int minAdminRating;
    protected int maxAdminRating;

    /**
     * Default no-arg constructor
     * 
     */
    public SearchExampleBoardsRequest() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public SearchExampleBoardsRequest(final String designerName, final Integer ratingOption, final List<Integer> countryIds, final List<Integer> skillIds, final List<Integer> languageIds, final String schoolAwards, final int userId, final boolean isPortfolioSearch, final XMLGregorianCalendar portfoliosearchstartdate, final XMLGregorianCalendar portfoliosearchenddate, final List<Integer> expertiseIds, final List<Integer> specialtyIds, final List<Integer> educationIds, final int minAdminRating, final int maxAdminRating) {
        this.designerName = designerName;
        this.ratingOption = ratingOption;
        this.countryIds = countryIds;
        this.skillIds = skillIds;
        this.languageIds = languageIds;
        this.schoolAwards = schoolAwards;
        this.userId = userId;
        this.isPortfolioSearch = isPortfolioSearch;
        this.portfoliosearchstartdate = portfoliosearchstartdate;
        this.portfoliosearchenddate = portfoliosearchenddate;
        this.expertiseIds = expertiseIds;
        this.specialtyIds = specialtyIds;
        this.educationIds = educationIds;
        this.minAdminRating = minAdminRating;
        this.maxAdminRating = maxAdminRating;
    }

    /**
     * Gets the value of the designerName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDesignerName() {
        return designerName;
    }

    /**
     * Sets the value of the designerName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDesignerName(String value) {
        this.designerName = value;
    }

    /**
     * Gets the value of the ratingOption property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getRatingOption() {
        return ratingOption;
    }

    /**
     * Sets the value of the ratingOption property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRatingOption(Integer value) {
        this.ratingOption = value;
    }

    /**
     * Gets the value of the countryIds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the countryIds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCountryIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
     * 
     * 
     */
    public List<Integer> getCountryIds() {
        if (countryIds == null) {
            countryIds = new ArrayList<Integer>();
        }
        return this.countryIds;
    }

    /**
     * Gets the value of the skillIds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the skillIds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSkillIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
     * 
     * 
     */
    public List<Integer> getSkillIds() {
        if (skillIds == null) {
            skillIds = new ArrayList<Integer>();
        }
        return this.skillIds;
    }

    /**
     * Gets the value of the languageIds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the languageIds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLanguageIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
     * 
     * 
     */
    public List<Integer> getLanguageIds() {
        if (languageIds == null) {
            languageIds = new ArrayList<Integer>();
        }
        return this.languageIds;
    }

    /**
     * Gets the value of the schoolAwards property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSchoolAwards() {
        return schoolAwards;
    }

    /**
     * Sets the value of the schoolAwards property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSchoolAwards(String value) {
        this.schoolAwards = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     */
    public void setUserId(int value) {
        this.userId = value;
    }

    /**
     * Gets the value of the isPortfolioSearch property.
     * 
     */
    public boolean isIsPortfolioSearch() {
        return isPortfolioSearch;
    }

    /**
     * Sets the value of the isPortfolioSearch property.
     * 
     */
    public void setIsPortfolioSearch(boolean value) {
        this.isPortfolioSearch = value;
    }

    /**
     * Gets the value of the portfoliosearchstartdate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getPortfoliosearchstartdate() {
        return portfoliosearchstartdate;
    }

    /**
     * Sets the value of the portfoliosearchstartdate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setPortfoliosearchstartdate(XMLGregorianCalendar value) {
        this.portfoliosearchstartdate = value;
    }

    /**
     * Gets the value of the portfoliosearchenddate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getPortfoliosearchenddate() {
        return portfoliosearchenddate;
    }

    /**
     * Sets the value of the portfoliosearchenddate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setPortfoliosearchenddate(XMLGregorianCalendar value) {
        this.portfoliosearchenddate = value;
    }

    /**
     * Gets the value of the expertiseIds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the expertiseIds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExpertiseIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
     * 
     * 
     */
    public List<Integer> getExpertiseIds() {
        if (expertiseIds == null) {
            expertiseIds = new ArrayList<Integer>();
        }
        return this.expertiseIds;
    }

    /**
     * Gets the value of the specialtyIds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the specialtyIds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSpecialtyIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
     * 
     * 
     */
    public List<Integer> getSpecialtyIds() {
        if (specialtyIds == null) {
            specialtyIds = new ArrayList<Integer>();
        }
        return this.specialtyIds;
    }

    /**
     * Gets the value of the educationIds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the educationIds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEducationIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
     * 
     * 
     */
    public List<Integer> getEducationIds() {
        if (educationIds == null) {
            educationIds = new ArrayList<Integer>();
        }
        return this.educationIds;
    }

    /**
     * Gets the value of the minAdminRating property.
     * 
     */
    public int getMinAdminRating() {
        return minAdminRating;
    }

    /**
     * Sets the value of the minAdminRating property.
     * 
     */
    public void setMinAdminRating(int value) {
        this.minAdminRating = value;
    }

    /**
     * Gets the value of the maxAdminRating property.
     * 
     */
    public int getMaxAdminRating() {
        return maxAdminRating;
    }

    /**
     * Sets the value of the maxAdminRating property.
     * 
     */
    public void setMaxAdminRating(int value) {
        this.maxAdminRating = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theDesignerName;
            theDesignerName = this.getDesignerName();
            strategy.appendField(locator, this, "designerName", buffer, theDesignerName);
        }
        {
            Integer theRatingOption;
            theRatingOption = this.getRatingOption();
            strategy.appendField(locator, this, "ratingOption", buffer, theRatingOption);
        }
        {
            List<Integer> theCountryIds;
            theCountryIds = this.getCountryIds();
            strategy.appendField(locator, this, "countryIds", buffer, theCountryIds);
        }
        {
            List<Integer> theSkillIds;
            theSkillIds = this.getSkillIds();
            strategy.appendField(locator, this, "skillIds", buffer, theSkillIds);
        }
        {
            List<Integer> theLanguageIds;
            theLanguageIds = this.getLanguageIds();
            strategy.appendField(locator, this, "languageIds", buffer, theLanguageIds);
        }
        {
            String theSchoolAwards;
            theSchoolAwards = this.getSchoolAwards();
            strategy.appendField(locator, this, "schoolAwards", buffer, theSchoolAwards);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            boolean theIsPortfolioSearch;
            theIsPortfolioSearch = this.isIsPortfolioSearch();
            strategy.appendField(locator, this, "isPortfolioSearch", buffer, theIsPortfolioSearch);
        }
        {
            XMLGregorianCalendar thePortfoliosearchstartdate;
            thePortfoliosearchstartdate = this.getPortfoliosearchstartdate();
            strategy.appendField(locator, this, "portfoliosearchstartdate", buffer, thePortfoliosearchstartdate);
        }
        {
            XMLGregorianCalendar thePortfoliosearchenddate;
            thePortfoliosearchenddate = this.getPortfoliosearchenddate();
            strategy.appendField(locator, this, "portfoliosearchenddate", buffer, thePortfoliosearchenddate);
        }
        {
            List<Integer> theExpertiseIds;
            theExpertiseIds = this.getExpertiseIds();
            strategy.appendField(locator, this, "expertiseIds", buffer, theExpertiseIds);
        }
        {
            List<Integer> theSpecialtyIds;
            theSpecialtyIds = this.getSpecialtyIds();
            strategy.appendField(locator, this, "specialtyIds", buffer, theSpecialtyIds);
        }
        {
            List<Integer> theEducationIds;
            theEducationIds = this.getEducationIds();
            strategy.appendField(locator, this, "educationIds", buffer, theEducationIds);
        }
        {
            int theMinAdminRating;
            theMinAdminRating = this.getMinAdminRating();
            strategy.appendField(locator, this, "minAdminRating", buffer, theMinAdminRating);
        }
        {
            int theMaxAdminRating;
            theMaxAdminRating = this.getMaxAdminRating();
            strategy.appendField(locator, this, "maxAdminRating", buffer, theMaxAdminRating);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SearchExampleBoardsRequest)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final SearchExampleBoardsRequest that = ((SearchExampleBoardsRequest) object);
        {
            String lhsDesignerName;
            lhsDesignerName = this.getDesignerName();
            String rhsDesignerName;
            rhsDesignerName = that.getDesignerName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "designerName", lhsDesignerName), LocatorUtils.property(thatLocator, "designerName", rhsDesignerName), lhsDesignerName, rhsDesignerName)) {
                return false;
            }
        }
        {
            Integer lhsRatingOption;
            lhsRatingOption = this.getRatingOption();
            Integer rhsRatingOption;
            rhsRatingOption = that.getRatingOption();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ratingOption", lhsRatingOption), LocatorUtils.property(thatLocator, "ratingOption", rhsRatingOption), lhsRatingOption, rhsRatingOption)) {
                return false;
            }
        }
        {
            List<Integer> lhsCountryIds;
            lhsCountryIds = this.getCountryIds();
            List<Integer> rhsCountryIds;
            rhsCountryIds = that.getCountryIds();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countryIds", lhsCountryIds), LocatorUtils.property(thatLocator, "countryIds", rhsCountryIds), lhsCountryIds, rhsCountryIds)) {
                return false;
            }
        }
        {
            List<Integer> lhsSkillIds;
            lhsSkillIds = this.getSkillIds();
            List<Integer> rhsSkillIds;
            rhsSkillIds = that.getSkillIds();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "skillIds", lhsSkillIds), LocatorUtils.property(thatLocator, "skillIds", rhsSkillIds), lhsSkillIds, rhsSkillIds)) {
                return false;
            }
        }
        {
            List<Integer> lhsLanguageIds;
            lhsLanguageIds = this.getLanguageIds();
            List<Integer> rhsLanguageIds;
            rhsLanguageIds = that.getLanguageIds();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "languageIds", lhsLanguageIds), LocatorUtils.property(thatLocator, "languageIds", rhsLanguageIds), lhsLanguageIds, rhsLanguageIds)) {
                return false;
            }
        }
        {
            String lhsSchoolAwards;
            lhsSchoolAwards = this.getSchoolAwards();
            String rhsSchoolAwards;
            rhsSchoolAwards = that.getSchoolAwards();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "schoolAwards", lhsSchoolAwards), LocatorUtils.property(thatLocator, "schoolAwards", rhsSchoolAwards), lhsSchoolAwards, rhsSchoolAwards)) {
                return false;
            }
        }
        {
            int lhsUserId;
            lhsUserId = this.getUserId();
            int rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            boolean lhsIsPortfolioSearch;
            lhsIsPortfolioSearch = this.isIsPortfolioSearch();
            boolean rhsIsPortfolioSearch;
            rhsIsPortfolioSearch = that.isIsPortfolioSearch();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isPortfolioSearch", lhsIsPortfolioSearch), LocatorUtils.property(thatLocator, "isPortfolioSearch", rhsIsPortfolioSearch), lhsIsPortfolioSearch, rhsIsPortfolioSearch)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsPortfoliosearchstartdate;
            lhsPortfoliosearchstartdate = this.getPortfoliosearchstartdate();
            XMLGregorianCalendar rhsPortfoliosearchstartdate;
            rhsPortfoliosearchstartdate = that.getPortfoliosearchstartdate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfoliosearchstartdate", lhsPortfoliosearchstartdate), LocatorUtils.property(thatLocator, "portfoliosearchstartdate", rhsPortfoliosearchstartdate), lhsPortfoliosearchstartdate, rhsPortfoliosearchstartdate)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsPortfoliosearchenddate;
            lhsPortfoliosearchenddate = this.getPortfoliosearchenddate();
            XMLGregorianCalendar rhsPortfoliosearchenddate;
            rhsPortfoliosearchenddate = that.getPortfoliosearchenddate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfoliosearchenddate", lhsPortfoliosearchenddate), LocatorUtils.property(thatLocator, "portfoliosearchenddate", rhsPortfoliosearchenddate), lhsPortfoliosearchenddate, rhsPortfoliosearchenddate)) {
                return false;
            }
        }
        {
            List<Integer> lhsExpertiseIds;
            lhsExpertiseIds = this.getExpertiseIds();
            List<Integer> rhsExpertiseIds;
            rhsExpertiseIds = that.getExpertiseIds();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expertiseIds", lhsExpertiseIds), LocatorUtils.property(thatLocator, "expertiseIds", rhsExpertiseIds), lhsExpertiseIds, rhsExpertiseIds)) {
                return false;
            }
        }
        {
            List<Integer> lhsSpecialtyIds;
            lhsSpecialtyIds = this.getSpecialtyIds();
            List<Integer> rhsSpecialtyIds;
            rhsSpecialtyIds = that.getSpecialtyIds();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "specialtyIds", lhsSpecialtyIds), LocatorUtils.property(thatLocator, "specialtyIds", rhsSpecialtyIds), lhsSpecialtyIds, rhsSpecialtyIds)) {
                return false;
            }
        }
        {
            List<Integer> lhsEducationIds;
            lhsEducationIds = this.getEducationIds();
            List<Integer> rhsEducationIds;
            rhsEducationIds = that.getEducationIds();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "educationIds", lhsEducationIds), LocatorUtils.property(thatLocator, "educationIds", rhsEducationIds), lhsEducationIds, rhsEducationIds)) {
                return false;
            }
        }
        {
            int lhsMinAdminRating;
            lhsMinAdminRating = this.getMinAdminRating();
            int rhsMinAdminRating;
            rhsMinAdminRating = that.getMinAdminRating();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "minAdminRating", lhsMinAdminRating), LocatorUtils.property(thatLocator, "minAdminRating", rhsMinAdminRating), lhsMinAdminRating, rhsMinAdminRating)) {
                return false;
            }
        }
        {
            int lhsMaxAdminRating;
            lhsMaxAdminRating = this.getMaxAdminRating();
            int rhsMaxAdminRating;
            rhsMaxAdminRating = that.getMaxAdminRating();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxAdminRating", lhsMaxAdminRating), LocatorUtils.property(thatLocator, "maxAdminRating", rhsMaxAdminRating), lhsMaxAdminRating, rhsMaxAdminRating)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theDesignerName;
            theDesignerName = this.getDesignerName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "designerName", theDesignerName), currentHashCode, theDesignerName);
        }
        {
            Integer theRatingOption;
            theRatingOption = this.getRatingOption();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ratingOption", theRatingOption), currentHashCode, theRatingOption);
        }
        {
            List<Integer> theCountryIds;
            theCountryIds = this.getCountryIds();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryIds", theCountryIds), currentHashCode, theCountryIds);
        }
        {
            List<Integer> theSkillIds;
            theSkillIds = this.getSkillIds();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "skillIds", theSkillIds), currentHashCode, theSkillIds);
        }
        {
            List<Integer> theLanguageIds;
            theLanguageIds = this.getLanguageIds();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "languageIds", theLanguageIds), currentHashCode, theLanguageIds);
        }
        {
            String theSchoolAwards;
            theSchoolAwards = this.getSchoolAwards();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "schoolAwards", theSchoolAwards), currentHashCode, theSchoolAwards);
        }
        {
            int theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            boolean theIsPortfolioSearch;
            theIsPortfolioSearch = this.isIsPortfolioSearch();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isPortfolioSearch", theIsPortfolioSearch), currentHashCode, theIsPortfolioSearch);
        }
        {
            XMLGregorianCalendar thePortfoliosearchstartdate;
            thePortfoliosearchstartdate = this.getPortfoliosearchstartdate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfoliosearchstartdate", thePortfoliosearchstartdate), currentHashCode, thePortfoliosearchstartdate);
        }
        {
            XMLGregorianCalendar thePortfoliosearchenddate;
            thePortfoliosearchenddate = this.getPortfoliosearchenddate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfoliosearchenddate", thePortfoliosearchenddate), currentHashCode, thePortfoliosearchenddate);
        }
        {
            List<Integer> theExpertiseIds;
            theExpertiseIds = this.getExpertiseIds();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expertiseIds", theExpertiseIds), currentHashCode, theExpertiseIds);
        }
        {
            List<Integer> theSpecialtyIds;
            theSpecialtyIds = this.getSpecialtyIds();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "specialtyIds", theSpecialtyIds), currentHashCode, theSpecialtyIds);
        }
        {
            List<Integer> theEducationIds;
            theEducationIds = this.getEducationIds();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "educationIds", theEducationIds), currentHashCode, theEducationIds);
        }
        {
            int theMinAdminRating;
            theMinAdminRating = this.getMinAdminRating();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "minAdminRating", theMinAdminRating), currentHashCode, theMinAdminRating);
        }
        {
            int theMaxAdminRating;
            theMaxAdminRating = this.getMaxAdminRating();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxAdminRating", theMaxAdminRating), currentHashCode, theMaxAdminRating);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof SearchExampleBoardsRequest) {
            final SearchExampleBoardsRequest copy = ((SearchExampleBoardsRequest) draftCopy);
            if (this.designerName!= null) {
                String sourceDesignerName;
                sourceDesignerName = this.getDesignerName();
                String copyDesignerName = ((String) strategy.copy(LocatorUtils.property(locator, "designerName", sourceDesignerName), sourceDesignerName));
                copy.setDesignerName(copyDesignerName);
            } else {
                copy.designerName = null;
            }
            if (this.ratingOption!= null) {
                Integer sourceRatingOption;
                sourceRatingOption = this.getRatingOption();
                Integer copyRatingOption = ((Integer) strategy.copy(LocatorUtils.property(locator, "ratingOption", sourceRatingOption), sourceRatingOption));
                copy.setRatingOption(copyRatingOption);
            } else {
                copy.ratingOption = null;
            }
            if ((this.countryIds!= null)&&(!this.countryIds.isEmpty())) {
                List<Integer> sourceCountryIds;
                sourceCountryIds = this.getCountryIds();
                @SuppressWarnings("unchecked")
                List<Integer> copyCountryIds = ((List<Integer> ) strategy.copy(LocatorUtils.property(locator, "countryIds", sourceCountryIds), sourceCountryIds));
                copy.countryIds = null;
                List<Integer> uniqueCountryIdsl = copy.getCountryIds();
                uniqueCountryIdsl.addAll(copyCountryIds);
            } else {
                copy.countryIds = null;
            }
            if ((this.skillIds!= null)&&(!this.skillIds.isEmpty())) {
                List<Integer> sourceSkillIds;
                sourceSkillIds = this.getSkillIds();
                @SuppressWarnings("unchecked")
                List<Integer> copySkillIds = ((List<Integer> ) strategy.copy(LocatorUtils.property(locator, "skillIds", sourceSkillIds), sourceSkillIds));
                copy.skillIds = null;
                List<Integer> uniqueSkillIdsl = copy.getSkillIds();
                uniqueSkillIdsl.addAll(copySkillIds);
            } else {
                copy.skillIds = null;
            }
            if ((this.languageIds!= null)&&(!this.languageIds.isEmpty())) {
                List<Integer> sourceLanguageIds;
                sourceLanguageIds = this.getLanguageIds();
                @SuppressWarnings("unchecked")
                List<Integer> copyLanguageIds = ((List<Integer> ) strategy.copy(LocatorUtils.property(locator, "languageIds", sourceLanguageIds), sourceLanguageIds));
                copy.languageIds = null;
                List<Integer> uniqueLanguageIdsl = copy.getLanguageIds();
                uniqueLanguageIdsl.addAll(copyLanguageIds);
            } else {
                copy.languageIds = null;
            }
            if (this.schoolAwards!= null) {
                String sourceSchoolAwards;
                sourceSchoolAwards = this.getSchoolAwards();
                String copySchoolAwards = ((String) strategy.copy(LocatorUtils.property(locator, "schoolAwards", sourceSchoolAwards), sourceSchoolAwards));
                copy.setSchoolAwards(copySchoolAwards);
            } else {
                copy.schoolAwards = null;
            }
            int sourceUserId;
            sourceUserId = this.getUserId();
            int copyUserId = strategy.copy(LocatorUtils.property(locator, "userId", sourceUserId), sourceUserId);
            copy.setUserId(copyUserId);
            boolean sourceIsPortfolioSearch;
            sourceIsPortfolioSearch = this.isIsPortfolioSearch();
            boolean copyIsPortfolioSearch = strategy.copy(LocatorUtils.property(locator, "isPortfolioSearch", sourceIsPortfolioSearch), sourceIsPortfolioSearch);
            copy.setIsPortfolioSearch(copyIsPortfolioSearch);
            if (this.portfoliosearchstartdate!= null) {
                XMLGregorianCalendar sourcePortfoliosearchstartdate;
                sourcePortfoliosearchstartdate = this.getPortfoliosearchstartdate();
                XMLGregorianCalendar copyPortfoliosearchstartdate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "portfoliosearchstartdate", sourcePortfoliosearchstartdate), sourcePortfoliosearchstartdate));
                copy.setPortfoliosearchstartdate(copyPortfoliosearchstartdate);
            } else {
                copy.portfoliosearchstartdate = null;
            }
            if (this.portfoliosearchenddate!= null) {
                XMLGregorianCalendar sourcePortfoliosearchenddate;
                sourcePortfoliosearchenddate = this.getPortfoliosearchenddate();
                XMLGregorianCalendar copyPortfoliosearchenddate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "portfoliosearchenddate", sourcePortfoliosearchenddate), sourcePortfoliosearchenddate));
                copy.setPortfoliosearchenddate(copyPortfoliosearchenddate);
            } else {
                copy.portfoliosearchenddate = null;
            }
            if ((this.expertiseIds!= null)&&(!this.expertiseIds.isEmpty())) {
                List<Integer> sourceExpertiseIds;
                sourceExpertiseIds = this.getExpertiseIds();
                @SuppressWarnings("unchecked")
                List<Integer> copyExpertiseIds = ((List<Integer> ) strategy.copy(LocatorUtils.property(locator, "expertiseIds", sourceExpertiseIds), sourceExpertiseIds));
                copy.expertiseIds = null;
                List<Integer> uniqueExpertiseIdsl = copy.getExpertiseIds();
                uniqueExpertiseIdsl.addAll(copyExpertiseIds);
            } else {
                copy.expertiseIds = null;
            }
            if ((this.specialtyIds!= null)&&(!this.specialtyIds.isEmpty())) {
                List<Integer> sourceSpecialtyIds;
                sourceSpecialtyIds = this.getSpecialtyIds();
                @SuppressWarnings("unchecked")
                List<Integer> copySpecialtyIds = ((List<Integer> ) strategy.copy(LocatorUtils.property(locator, "specialtyIds", sourceSpecialtyIds), sourceSpecialtyIds));
                copy.specialtyIds = null;
                List<Integer> uniqueSpecialtyIdsl = copy.getSpecialtyIds();
                uniqueSpecialtyIdsl.addAll(copySpecialtyIds);
            } else {
                copy.specialtyIds = null;
            }
            if ((this.educationIds!= null)&&(!this.educationIds.isEmpty())) {
                List<Integer> sourceEducationIds;
                sourceEducationIds = this.getEducationIds();
                @SuppressWarnings("unchecked")
                List<Integer> copyEducationIds = ((List<Integer> ) strategy.copy(LocatorUtils.property(locator, "educationIds", sourceEducationIds), sourceEducationIds));
                copy.educationIds = null;
                List<Integer> uniqueEducationIdsl = copy.getEducationIds();
                uniqueEducationIdsl.addAll(copyEducationIds);
            } else {
                copy.educationIds = null;
            }
            int sourceMinAdminRating;
            sourceMinAdminRating = this.getMinAdminRating();
            int copyMinAdminRating = strategy.copy(LocatorUtils.property(locator, "minAdminRating", sourceMinAdminRating), sourceMinAdminRating);
            copy.setMinAdminRating(copyMinAdminRating);
            int sourceMaxAdminRating;
            sourceMaxAdminRating = this.getMaxAdminRating();
            int copyMaxAdminRating = strategy.copy(LocatorUtils.property(locator, "maxAdminRating", sourceMaxAdminRating), sourceMaxAdminRating);
            copy.setMaxAdminRating(copyMaxAdminRating);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new SearchExampleBoardsRequest();
    }

}
