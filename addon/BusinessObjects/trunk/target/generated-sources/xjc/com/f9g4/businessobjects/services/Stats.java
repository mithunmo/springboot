//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for stats complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="stats">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="boardsPurchasedCount" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="boardsPurchasedTotal" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="boardsViewedToday" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="boardsViewedWeek" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="boardsViewedMonth" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "stats", propOrder = {
    "boardsPurchasedCount",
    "boardsPurchasedTotal",
    "boardsViewedToday",
    "boardsViewedWeek",
    "boardsViewedMonth"
})
public class Stats implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int boardsPurchasedCount;
    protected double boardsPurchasedTotal;
    protected int boardsViewedToday;
    protected int boardsViewedWeek;
    protected int boardsViewedMonth;

    /**
     * Default no-arg constructor
     * 
     */
    public Stats() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public Stats(final int boardsPurchasedCount, final double boardsPurchasedTotal, final int boardsViewedToday, final int boardsViewedWeek, final int boardsViewedMonth) {
        this.boardsPurchasedCount = boardsPurchasedCount;
        this.boardsPurchasedTotal = boardsPurchasedTotal;
        this.boardsViewedToday = boardsViewedToday;
        this.boardsViewedWeek = boardsViewedWeek;
        this.boardsViewedMonth = boardsViewedMonth;
    }

    /**
     * Gets the value of the boardsPurchasedCount property.
     * 
     */
    public int getBoardsPurchasedCount() {
        return boardsPurchasedCount;
    }

    /**
     * Sets the value of the boardsPurchasedCount property.
     * 
     */
    public void setBoardsPurchasedCount(int value) {
        this.boardsPurchasedCount = value;
    }

    /**
     * Gets the value of the boardsPurchasedTotal property.
     * 
     */
    public double getBoardsPurchasedTotal() {
        return boardsPurchasedTotal;
    }

    /**
     * Sets the value of the boardsPurchasedTotal property.
     * 
     */
    public void setBoardsPurchasedTotal(double value) {
        this.boardsPurchasedTotal = value;
    }

    /**
     * Gets the value of the boardsViewedToday property.
     * 
     */
    public int getBoardsViewedToday() {
        return boardsViewedToday;
    }

    /**
     * Sets the value of the boardsViewedToday property.
     * 
     */
    public void setBoardsViewedToday(int value) {
        this.boardsViewedToday = value;
    }

    /**
     * Gets the value of the boardsViewedWeek property.
     * 
     */
    public int getBoardsViewedWeek() {
        return boardsViewedWeek;
    }

    /**
     * Sets the value of the boardsViewedWeek property.
     * 
     */
    public void setBoardsViewedWeek(int value) {
        this.boardsViewedWeek = value;
    }

    /**
     * Gets the value of the boardsViewedMonth property.
     * 
     */
    public int getBoardsViewedMonth() {
        return boardsViewedMonth;
    }

    /**
     * Sets the value of the boardsViewedMonth property.
     * 
     */
    public void setBoardsViewedMonth(int value) {
        this.boardsViewedMonth = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theBoardsPurchasedCount;
            theBoardsPurchasedCount = this.getBoardsPurchasedCount();
            strategy.appendField(locator, this, "boardsPurchasedCount", buffer, theBoardsPurchasedCount);
        }
        {
            double theBoardsPurchasedTotal;
            theBoardsPurchasedTotal = this.getBoardsPurchasedTotal();
            strategy.appendField(locator, this, "boardsPurchasedTotal", buffer, theBoardsPurchasedTotal);
        }
        {
            int theBoardsViewedToday;
            theBoardsViewedToday = this.getBoardsViewedToday();
            strategy.appendField(locator, this, "boardsViewedToday", buffer, theBoardsViewedToday);
        }
        {
            int theBoardsViewedWeek;
            theBoardsViewedWeek = this.getBoardsViewedWeek();
            strategy.appendField(locator, this, "boardsViewedWeek", buffer, theBoardsViewedWeek);
        }
        {
            int theBoardsViewedMonth;
            theBoardsViewedMonth = this.getBoardsViewedMonth();
            strategy.appendField(locator, this, "boardsViewedMonth", buffer, theBoardsViewedMonth);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Stats)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Stats that = ((Stats) object);
        {
            int lhsBoardsPurchasedCount;
            lhsBoardsPurchasedCount = this.getBoardsPurchasedCount();
            int rhsBoardsPurchasedCount;
            rhsBoardsPurchasedCount = that.getBoardsPurchasedCount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardsPurchasedCount", lhsBoardsPurchasedCount), LocatorUtils.property(thatLocator, "boardsPurchasedCount", rhsBoardsPurchasedCount), lhsBoardsPurchasedCount, rhsBoardsPurchasedCount)) {
                return false;
            }
        }
        {
            double lhsBoardsPurchasedTotal;
            lhsBoardsPurchasedTotal = this.getBoardsPurchasedTotal();
            double rhsBoardsPurchasedTotal;
            rhsBoardsPurchasedTotal = that.getBoardsPurchasedTotal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardsPurchasedTotal", lhsBoardsPurchasedTotal), LocatorUtils.property(thatLocator, "boardsPurchasedTotal", rhsBoardsPurchasedTotal), lhsBoardsPurchasedTotal, rhsBoardsPurchasedTotal)) {
                return false;
            }
        }
        {
            int lhsBoardsViewedToday;
            lhsBoardsViewedToday = this.getBoardsViewedToday();
            int rhsBoardsViewedToday;
            rhsBoardsViewedToday = that.getBoardsViewedToday();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardsViewedToday", lhsBoardsViewedToday), LocatorUtils.property(thatLocator, "boardsViewedToday", rhsBoardsViewedToday), lhsBoardsViewedToday, rhsBoardsViewedToday)) {
                return false;
            }
        }
        {
            int lhsBoardsViewedWeek;
            lhsBoardsViewedWeek = this.getBoardsViewedWeek();
            int rhsBoardsViewedWeek;
            rhsBoardsViewedWeek = that.getBoardsViewedWeek();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardsViewedWeek", lhsBoardsViewedWeek), LocatorUtils.property(thatLocator, "boardsViewedWeek", rhsBoardsViewedWeek), lhsBoardsViewedWeek, rhsBoardsViewedWeek)) {
                return false;
            }
        }
        {
            int lhsBoardsViewedMonth;
            lhsBoardsViewedMonth = this.getBoardsViewedMonth();
            int rhsBoardsViewedMonth;
            rhsBoardsViewedMonth = that.getBoardsViewedMonth();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardsViewedMonth", lhsBoardsViewedMonth), LocatorUtils.property(thatLocator, "boardsViewedMonth", rhsBoardsViewedMonth), lhsBoardsViewedMonth, rhsBoardsViewedMonth)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theBoardsPurchasedCount;
            theBoardsPurchasedCount = this.getBoardsPurchasedCount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardsPurchasedCount", theBoardsPurchasedCount), currentHashCode, theBoardsPurchasedCount);
        }
        {
            double theBoardsPurchasedTotal;
            theBoardsPurchasedTotal = this.getBoardsPurchasedTotal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardsPurchasedTotal", theBoardsPurchasedTotal), currentHashCode, theBoardsPurchasedTotal);
        }
        {
            int theBoardsViewedToday;
            theBoardsViewedToday = this.getBoardsViewedToday();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardsViewedToday", theBoardsViewedToday), currentHashCode, theBoardsViewedToday);
        }
        {
            int theBoardsViewedWeek;
            theBoardsViewedWeek = this.getBoardsViewedWeek();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardsViewedWeek", theBoardsViewedWeek), currentHashCode, theBoardsViewedWeek);
        }
        {
            int theBoardsViewedMonth;
            theBoardsViewedMonth = this.getBoardsViewedMonth();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardsViewedMonth", theBoardsViewedMonth), currentHashCode, theBoardsViewedMonth);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof Stats) {
            final Stats copy = ((Stats) draftCopy);
            int sourceBoardsPurchasedCount;
            sourceBoardsPurchasedCount = this.getBoardsPurchasedCount();
            int copyBoardsPurchasedCount = strategy.copy(LocatorUtils.property(locator, "boardsPurchasedCount", sourceBoardsPurchasedCount), sourceBoardsPurchasedCount);
            copy.setBoardsPurchasedCount(copyBoardsPurchasedCount);
            double sourceBoardsPurchasedTotal;
            sourceBoardsPurchasedTotal = this.getBoardsPurchasedTotal();
            double copyBoardsPurchasedTotal = strategy.copy(LocatorUtils.property(locator, "boardsPurchasedTotal", sourceBoardsPurchasedTotal), sourceBoardsPurchasedTotal);
            copy.setBoardsPurchasedTotal(copyBoardsPurchasedTotal);
            int sourceBoardsViewedToday;
            sourceBoardsViewedToday = this.getBoardsViewedToday();
            int copyBoardsViewedToday = strategy.copy(LocatorUtils.property(locator, "boardsViewedToday", sourceBoardsViewedToday), sourceBoardsViewedToday);
            copy.setBoardsViewedToday(copyBoardsViewedToday);
            int sourceBoardsViewedWeek;
            sourceBoardsViewedWeek = this.getBoardsViewedWeek();
            int copyBoardsViewedWeek = strategy.copy(LocatorUtils.property(locator, "boardsViewedWeek", sourceBoardsViewedWeek), sourceBoardsViewedWeek);
            copy.setBoardsViewedWeek(copyBoardsViewedWeek);
            int sourceBoardsViewedMonth;
            sourceBoardsViewedMonth = this.getBoardsViewedMonth();
            int copyBoardsViewedMonth = strategy.copy(LocatorUtils.property(locator, "boardsViewedMonth", sourceBoardsViewedMonth), sourceBoardsViewedMonth);
            copy.setBoardsViewedMonth(copyBoardsViewedMonth);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new Stats();
    }

}
