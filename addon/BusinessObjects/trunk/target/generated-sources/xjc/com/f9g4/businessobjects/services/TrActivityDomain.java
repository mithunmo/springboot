//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.20 at 11:56:16 AM EST 
//


package com.f9g4.businessobjects.services;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import com.f9g4.businessobjects.domain.TrBoardDomain;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for TrActivityDomain complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TrActivityDomain">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="clickId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="boardImageUrl" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="boardId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="boardName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="board" type="{http://domain.businessobjects.f9g4.com}trBoardDomain"/>
 *         &lt;element name="season" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="price" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="designerId" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="designerName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="dateViewed" type="{http://www.w3.org/2001/XMLSchema}date"/>
 *         &lt;element name="portfolioname" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="noofhits" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="profilename" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="useProfilename" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TrActivityDomain", propOrder = {
    "clickId",
    "boardImageUrl",
    "boardId",
    "boardName",
    "board",
    "season",
    "price",
    "designerId",
    "designerName",
    "dateViewed",
    "portfolioname",
    "noofhits",
    "profilename",
    "useProfilename"
})
public class TrActivityDomain implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    protected int clickId;
    @XmlElement(required = true)
    protected String boardImageUrl;
    protected int boardId;
    @XmlElement(required = true)
    protected String boardName;
    @XmlElement(required = true)
    protected TrBoardDomain board;
    @XmlElement(required = true)
    protected String season;
    @XmlElement(required = true)
    protected String price;
    protected int designerId;
    @XmlElement(required = true)
    protected String designerName;
    @XmlElement(required = true)
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar dateViewed;
    @XmlElement(required = true)
    protected String portfolioname;
    protected int noofhits;
    @XmlElement(required = true)
    protected String profilename;
    protected int useProfilename;

    /**
     * Default no-arg constructor
     * 
     */
    public TrActivityDomain() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TrActivityDomain(final int clickId, final String boardImageUrl, final int boardId, final String boardName, final TrBoardDomain board, final String season, final String price, final int designerId, final String designerName, final XMLGregorianCalendar dateViewed, final String portfolioname, final int noofhits, final String profilename, final int useProfilename) {
        this.clickId = clickId;
        this.boardImageUrl = boardImageUrl;
        this.boardId = boardId;
        this.boardName = boardName;
        this.board = board;
        this.season = season;
        this.price = price;
        this.designerId = designerId;
        this.designerName = designerName;
        this.dateViewed = dateViewed;
        this.portfolioname = portfolioname;
        this.noofhits = noofhits;
        this.profilename = profilename;
        this.useProfilename = useProfilename;
    }

    /**
     * Gets the value of the clickId property.
     * 
     */
    public int getClickId() {
        return clickId;
    }

    /**
     * Sets the value of the clickId property.
     * 
     */
    public void setClickId(int value) {
        this.clickId = value;
    }

    /**
     * Gets the value of the boardImageUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBoardImageUrl() {
        return boardImageUrl;
    }

    /**
     * Sets the value of the boardImageUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBoardImageUrl(String value) {
        this.boardImageUrl = value;
    }

    /**
     * Gets the value of the boardId property.
     * 
     */
    public int getBoardId() {
        return boardId;
    }

    /**
     * Sets the value of the boardId property.
     * 
     */
    public void setBoardId(int value) {
        this.boardId = value;
    }

    /**
     * Gets the value of the boardName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBoardName() {
        return boardName;
    }

    /**
     * Sets the value of the boardName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBoardName(String value) {
        this.boardName = value;
    }

    /**
     * Gets the value of the board property.
     * 
     * @return
     *     possible object is
     *     {@link TrBoardDomain }
     *     
     */
    public TrBoardDomain getBoard() {
        return board;
    }

    /**
     * Sets the value of the board property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrBoardDomain }
     *     
     */
    public void setBoard(TrBoardDomain value) {
        this.board = value;
    }

    /**
     * Gets the value of the season property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSeason() {
        return season;
    }

    /**
     * Sets the value of the season property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSeason(String value) {
        this.season = value;
    }

    /**
     * Gets the value of the price property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPrice() {
        return price;
    }

    /**
     * Sets the value of the price property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrice(String value) {
        this.price = value;
    }

    /**
     * Gets the value of the designerId property.
     * 
     */
    public int getDesignerId() {
        return designerId;
    }

    /**
     * Sets the value of the designerId property.
     * 
     */
    public void setDesignerId(int value) {
        this.designerId = value;
    }

    /**
     * Gets the value of the designerName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDesignerName() {
        return designerName;
    }

    /**
     * Sets the value of the designerName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDesignerName(String value) {
        this.designerName = value;
    }

    /**
     * Gets the value of the dateViewed property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDateViewed() {
        return dateViewed;
    }

    /**
     * Sets the value of the dateViewed property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDateViewed(XMLGregorianCalendar value) {
        this.dateViewed = value;
    }

    /**
     * Gets the value of the portfolioname property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPortfolioname() {
        return portfolioname;
    }

    /**
     * Sets the value of the portfolioname property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPortfolioname(String value) {
        this.portfolioname = value;
    }

    /**
     * Gets the value of the noofhits property.
     * 
     */
    public int getNoofhits() {
        return noofhits;
    }

    /**
     * Sets the value of the noofhits property.
     * 
     */
    public void setNoofhits(int value) {
        this.noofhits = value;
    }

    /**
     * Gets the value of the profilename property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProfilename() {
        return profilename;
    }

    /**
     * Sets the value of the profilename property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProfilename(String value) {
        this.profilename = value;
    }

    /**
     * Gets the value of the useProfilename property.
     * 
     */
    public int getUseProfilename() {
        return useProfilename;
    }

    /**
     * Sets the value of the useProfilename property.
     * 
     */
    public void setUseProfilename(int value) {
        this.useProfilename = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            int theClickId;
            theClickId = this.getClickId();
            strategy.appendField(locator, this, "clickId", buffer, theClickId);
        }
        {
            String theBoardImageUrl;
            theBoardImageUrl = this.getBoardImageUrl();
            strategy.appendField(locator, this, "boardImageUrl", buffer, theBoardImageUrl);
        }
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            strategy.appendField(locator, this, "boardId", buffer, theBoardId);
        }
        {
            String theBoardName;
            theBoardName = this.getBoardName();
            strategy.appendField(locator, this, "boardName", buffer, theBoardName);
        }
        {
            TrBoardDomain theBoard;
            theBoard = this.getBoard();
            strategy.appendField(locator, this, "board", buffer, theBoard);
        }
        {
            String theSeason;
            theSeason = this.getSeason();
            strategy.appendField(locator, this, "season", buffer, theSeason);
        }
        {
            String thePrice;
            thePrice = this.getPrice();
            strategy.appendField(locator, this, "price", buffer, thePrice);
        }
        {
            int theDesignerId;
            theDesignerId = this.getDesignerId();
            strategy.appendField(locator, this, "designerId", buffer, theDesignerId);
        }
        {
            String theDesignerName;
            theDesignerName = this.getDesignerName();
            strategy.appendField(locator, this, "designerName", buffer, theDesignerName);
        }
        {
            XMLGregorianCalendar theDateViewed;
            theDateViewed = this.getDateViewed();
            strategy.appendField(locator, this, "dateViewed", buffer, theDateViewed);
        }
        {
            String thePortfolioname;
            thePortfolioname = this.getPortfolioname();
            strategy.appendField(locator, this, "portfolioname", buffer, thePortfolioname);
        }
        {
            int theNoofhits;
            theNoofhits = this.getNoofhits();
            strategy.appendField(locator, this, "noofhits", buffer, theNoofhits);
        }
        {
            String theProfilename;
            theProfilename = this.getProfilename();
            strategy.appendField(locator, this, "profilename", buffer, theProfilename);
        }
        {
            int theUseProfilename;
            theUseProfilename = this.getUseProfilename();
            strategy.appendField(locator, this, "useProfilename", buffer, theUseProfilename);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TrActivityDomain)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TrActivityDomain that = ((TrActivityDomain) object);
        {
            int lhsClickId;
            lhsClickId = this.getClickId();
            int rhsClickId;
            rhsClickId = that.getClickId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "clickId", lhsClickId), LocatorUtils.property(thatLocator, "clickId", rhsClickId), lhsClickId, rhsClickId)) {
                return false;
            }
        }
        {
            String lhsBoardImageUrl;
            lhsBoardImageUrl = this.getBoardImageUrl();
            String rhsBoardImageUrl;
            rhsBoardImageUrl = that.getBoardImageUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardImageUrl", lhsBoardImageUrl), LocatorUtils.property(thatLocator, "boardImageUrl", rhsBoardImageUrl), lhsBoardImageUrl, rhsBoardImageUrl)) {
                return false;
            }
        }
        {
            int lhsBoardId;
            lhsBoardId = this.getBoardId();
            int rhsBoardId;
            rhsBoardId = that.getBoardId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardId", lhsBoardId), LocatorUtils.property(thatLocator, "boardId", rhsBoardId), lhsBoardId, rhsBoardId)) {
                return false;
            }
        }
        {
            String lhsBoardName;
            lhsBoardName = this.getBoardName();
            String rhsBoardName;
            rhsBoardName = that.getBoardName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "boardName", lhsBoardName), LocatorUtils.property(thatLocator, "boardName", rhsBoardName), lhsBoardName, rhsBoardName)) {
                return false;
            }
        }
        {
            TrBoardDomain lhsBoard;
            lhsBoard = this.getBoard();
            TrBoardDomain rhsBoard;
            rhsBoard = that.getBoard();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "board", lhsBoard), LocatorUtils.property(thatLocator, "board", rhsBoard), lhsBoard, rhsBoard)) {
                return false;
            }
        }
        {
            String lhsSeason;
            lhsSeason = this.getSeason();
            String rhsSeason;
            rhsSeason = that.getSeason();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "season", lhsSeason), LocatorUtils.property(thatLocator, "season", rhsSeason), lhsSeason, rhsSeason)) {
                return false;
            }
        }
        {
            String lhsPrice;
            lhsPrice = this.getPrice();
            String rhsPrice;
            rhsPrice = that.getPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "price", lhsPrice), LocatorUtils.property(thatLocator, "price", rhsPrice), lhsPrice, rhsPrice)) {
                return false;
            }
        }
        {
            int lhsDesignerId;
            lhsDesignerId = this.getDesignerId();
            int rhsDesignerId;
            rhsDesignerId = that.getDesignerId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "designerId", lhsDesignerId), LocatorUtils.property(thatLocator, "designerId", rhsDesignerId), lhsDesignerId, rhsDesignerId)) {
                return false;
            }
        }
        {
            String lhsDesignerName;
            lhsDesignerName = this.getDesignerName();
            String rhsDesignerName;
            rhsDesignerName = that.getDesignerName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "designerName", lhsDesignerName), LocatorUtils.property(thatLocator, "designerName", rhsDesignerName), lhsDesignerName, rhsDesignerName)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDateViewed;
            lhsDateViewed = this.getDateViewed();
            XMLGregorianCalendar rhsDateViewed;
            rhsDateViewed = that.getDateViewed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateViewed", lhsDateViewed), LocatorUtils.property(thatLocator, "dateViewed", rhsDateViewed), lhsDateViewed, rhsDateViewed)) {
                return false;
            }
        }
        {
            String lhsPortfolioname;
            lhsPortfolioname = this.getPortfolioname();
            String rhsPortfolioname;
            rhsPortfolioname = that.getPortfolioname();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "portfolioname", lhsPortfolioname), LocatorUtils.property(thatLocator, "portfolioname", rhsPortfolioname), lhsPortfolioname, rhsPortfolioname)) {
                return false;
            }
        }
        {
            int lhsNoofhits;
            lhsNoofhits = this.getNoofhits();
            int rhsNoofhits;
            rhsNoofhits = that.getNoofhits();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noofhits", lhsNoofhits), LocatorUtils.property(thatLocator, "noofhits", rhsNoofhits), lhsNoofhits, rhsNoofhits)) {
                return false;
            }
        }
        {
            String lhsProfilename;
            lhsProfilename = this.getProfilename();
            String rhsProfilename;
            rhsProfilename = that.getProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "profilename", lhsProfilename), LocatorUtils.property(thatLocator, "profilename", rhsProfilename), lhsProfilename, rhsProfilename)) {
                return false;
            }
        }
        {
            int lhsUseProfilename;
            lhsUseProfilename = this.getUseProfilename();
            int rhsUseProfilename;
            rhsUseProfilename = that.getUseProfilename();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "useProfilename", lhsUseProfilename), LocatorUtils.property(thatLocator, "useProfilename", rhsUseProfilename), lhsUseProfilename, rhsUseProfilename)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            int theClickId;
            theClickId = this.getClickId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "clickId", theClickId), currentHashCode, theClickId);
        }
        {
            String theBoardImageUrl;
            theBoardImageUrl = this.getBoardImageUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardImageUrl", theBoardImageUrl), currentHashCode, theBoardImageUrl);
        }
        {
            int theBoardId;
            theBoardId = this.getBoardId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardId", theBoardId), currentHashCode, theBoardId);
        }
        {
            String theBoardName;
            theBoardName = this.getBoardName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "boardName", theBoardName), currentHashCode, theBoardName);
        }
        {
            TrBoardDomain theBoard;
            theBoard = this.getBoard();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "board", theBoard), currentHashCode, theBoard);
        }
        {
            String theSeason;
            theSeason = this.getSeason();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "season", theSeason), currentHashCode, theSeason);
        }
        {
            String thePrice;
            thePrice = this.getPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "price", thePrice), currentHashCode, thePrice);
        }
        {
            int theDesignerId;
            theDesignerId = this.getDesignerId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "designerId", theDesignerId), currentHashCode, theDesignerId);
        }
        {
            String theDesignerName;
            theDesignerName = this.getDesignerName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "designerName", theDesignerName), currentHashCode, theDesignerName);
        }
        {
            XMLGregorianCalendar theDateViewed;
            theDateViewed = this.getDateViewed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateViewed", theDateViewed), currentHashCode, theDateViewed);
        }
        {
            String thePortfolioname;
            thePortfolioname = this.getPortfolioname();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "portfolioname", thePortfolioname), currentHashCode, thePortfolioname);
        }
        {
            int theNoofhits;
            theNoofhits = this.getNoofhits();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noofhits", theNoofhits), currentHashCode, theNoofhits);
        }
        {
            String theProfilename;
            theProfilename = this.getProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "profilename", theProfilename), currentHashCode, theProfilename);
        }
        {
            int theUseProfilename;
            theUseProfilename = this.getUseProfilename();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "useProfilename", theUseProfilename), currentHashCode, theUseProfilename);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof TrActivityDomain) {
            final TrActivityDomain copy = ((TrActivityDomain) draftCopy);
            int sourceClickId;
            sourceClickId = this.getClickId();
            int copyClickId = strategy.copy(LocatorUtils.property(locator, "clickId", sourceClickId), sourceClickId);
            copy.setClickId(copyClickId);
            if (this.boardImageUrl!= null) {
                String sourceBoardImageUrl;
                sourceBoardImageUrl = this.getBoardImageUrl();
                String copyBoardImageUrl = ((String) strategy.copy(LocatorUtils.property(locator, "boardImageUrl", sourceBoardImageUrl), sourceBoardImageUrl));
                copy.setBoardImageUrl(copyBoardImageUrl);
            } else {
                copy.boardImageUrl = null;
            }
            int sourceBoardId;
            sourceBoardId = this.getBoardId();
            int copyBoardId = strategy.copy(LocatorUtils.property(locator, "boardId", sourceBoardId), sourceBoardId);
            copy.setBoardId(copyBoardId);
            if (this.boardName!= null) {
                String sourceBoardName;
                sourceBoardName = this.getBoardName();
                String copyBoardName = ((String) strategy.copy(LocatorUtils.property(locator, "boardName", sourceBoardName), sourceBoardName));
                copy.setBoardName(copyBoardName);
            } else {
                copy.boardName = null;
            }
            if (this.board!= null) {
                TrBoardDomain sourceBoard;
                sourceBoard = this.getBoard();
                TrBoardDomain copyBoard = ((TrBoardDomain) strategy.copy(LocatorUtils.property(locator, "board", sourceBoard), sourceBoard));
                copy.setBoard(copyBoard);
            } else {
                copy.board = null;
            }
            if (this.season!= null) {
                String sourceSeason;
                sourceSeason = this.getSeason();
                String copySeason = ((String) strategy.copy(LocatorUtils.property(locator, "season", sourceSeason), sourceSeason));
                copy.setSeason(copySeason);
            } else {
                copy.season = null;
            }
            if (this.price!= null) {
                String sourcePrice;
                sourcePrice = this.getPrice();
                String copyPrice = ((String) strategy.copy(LocatorUtils.property(locator, "price", sourcePrice), sourcePrice));
                copy.setPrice(copyPrice);
            } else {
                copy.price = null;
            }
            int sourceDesignerId;
            sourceDesignerId = this.getDesignerId();
            int copyDesignerId = strategy.copy(LocatorUtils.property(locator, "designerId", sourceDesignerId), sourceDesignerId);
            copy.setDesignerId(copyDesignerId);
            if (this.designerName!= null) {
                String sourceDesignerName;
                sourceDesignerName = this.getDesignerName();
                String copyDesignerName = ((String) strategy.copy(LocatorUtils.property(locator, "designerName", sourceDesignerName), sourceDesignerName));
                copy.setDesignerName(copyDesignerName);
            } else {
                copy.designerName = null;
            }
            if (this.dateViewed!= null) {
                XMLGregorianCalendar sourceDateViewed;
                sourceDateViewed = this.getDateViewed();
                XMLGregorianCalendar copyDateViewed = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "dateViewed", sourceDateViewed), sourceDateViewed));
                copy.setDateViewed(copyDateViewed);
            } else {
                copy.dateViewed = null;
            }
            if (this.portfolioname!= null) {
                String sourcePortfolioname;
                sourcePortfolioname = this.getPortfolioname();
                String copyPortfolioname = ((String) strategy.copy(LocatorUtils.property(locator, "portfolioname", sourcePortfolioname), sourcePortfolioname));
                copy.setPortfolioname(copyPortfolioname);
            } else {
                copy.portfolioname = null;
            }
            int sourceNoofhits;
            sourceNoofhits = this.getNoofhits();
            int copyNoofhits = strategy.copy(LocatorUtils.property(locator, "noofhits", sourceNoofhits), sourceNoofhits);
            copy.setNoofhits(copyNoofhits);
            if (this.profilename!= null) {
                String sourceProfilename;
                sourceProfilename = this.getProfilename();
                String copyProfilename = ((String) strategy.copy(LocatorUtils.property(locator, "profilename", sourceProfilename), sourceProfilename));
                copy.setProfilename(copyProfilename);
            } else {
                copy.profilename = null;
            }
            int sourceUseProfilename;
            sourceUseProfilename = this.getUseProfilename();
            int copyUseProfilename = strategy.copy(LocatorUtils.property(locator, "useProfilename", sourceUseProfilename), sourceUseProfilename);
            copy.setUseProfilename(copyUseProfilename);
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new TrActivityDomain();
    }

}
