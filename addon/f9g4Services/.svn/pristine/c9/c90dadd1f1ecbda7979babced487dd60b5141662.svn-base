package com.f9g4.domain;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Calendar;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;

import org.codehaus.jackson.annotate.JsonIgnore;

/**
 */

@Entity
@NamedQueries({
		@NamedQuery(name = "findAdUsersByAboutYou", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.aboutYou = ?1"),
		@NamedQuery(name = "findAdUsersByAboutYouContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.aboutYou like ?1"),
		@NamedQuery(name = "findAdUsersByActiveStatus", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.activeStatus = ?1"),
		@NamedQuery(name = "findAdUsersByCompanyName", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.companyName = ?1"),
		@NamedQuery(name = "findAdUsersByCompanyNameContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.companyName like ?1"),
		@NamedQuery(name = "findAdUsersByCompanyWebsite", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.companyWebsite = ?1"),
		@NamedQuery(name = "findAdUsersByCompanyWebsiteContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.companyWebsite like ?1"),
		@NamedQuery(name = "findAdUsersByCreatedBy", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.createdBy = ?1"),
		@NamedQuery(name = "findAdUsersByCreationDate", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.creationDate = ?1"),
		@NamedQuery(name = "findAdUsersByFirstname", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.firstname = ?1"),
		@NamedQuery(name = "findAdUsersByFirstnameContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.firstname like ?1"),
		@NamedQuery(name = "findAdUsersByLangCode", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.langCode = ?1"),
		@NamedQuery(name = "findAdUsersByLangCodeContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.langCode like ?1"),
		@NamedQuery(name = "findAdUsersByLastUpdateDate", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.lastUpdateDate = ?1"),
		@NamedQuery(name = "findAdUsersByLastUpdatedBy", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.lastUpdatedBy = ?1"),
		@NamedQuery(name = "findAdUsersByLastname", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.lastname = ?1"),
		@NamedQuery(name = "findAdUsersByLastnameContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.lastname like ?1"),
		@NamedQuery(name = "findAdUsersByOverallRating", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.overallRating = ?1"),
		@NamedQuery(name = "findAdUsersByPassword", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.password = ?1"),
		@NamedQuery(name = "findAdUsersByPasswordContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.password like ?1"),
		@NamedQuery(name = "findAdUsersByPrimaryKey", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.userId = ?1"),
		@NamedQuery(name = "findAdUsersByProfileName", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.profilename = ?1"),
		@NamedQuery(name = "findAdUsersBySchoolAwards", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.schoolAwards = ?1"),
		@NamedQuery(name = "findAdUsersBySchoolAwardsContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.schoolAwards like ?1"),
		@NamedQuery(name = "findAdUsersBySecurityAnswer1", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.securityAnswer1 = ?1"),
		@NamedQuery(name = "findAdUsersBySecurityAnswer1Containing", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.securityAnswer1 like ?1"),
		@NamedQuery(name = "findAdUsersBySecurityAnswer2", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.securityAnswer2 = ?1"),
		@NamedQuery(name = "findAdUsersBySecurityAnswer2Containing", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.securityAnswer2 like ?1"),
		@NamedQuery(name = "findAdUsersBySecurityAnswer3", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.securityAnswer3 = ?1"),
		@NamedQuery(name = "findAdUsersBySecurityAnswer3Containing", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.securityAnswer3 like ?1"),
		@NamedQuery(name = "findAdUsersByTaxId", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.taxId = ?1"),
		@NamedQuery(name = "findAdUsersByTaxIdContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.taxId like ?1"),
		@NamedQuery(name = "findAdUsersByUserId", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.userId = ?1"),
		@NamedQuery(name = "findAdUsersByUserName", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.userName = ?1"),
		@NamedQuery(name = "findAdUsersByUserNameContaining", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.userName like ?1"),
		@NamedQuery(name = "findAdUsersByRegStatusAndUserType", query = "select myAdUsers from AdUsers myAdUsers where myAdUsers.adLookupValuesByRegStatusId.lookupValueId in ?1 and myAdUsers.adLookupValuesByUserTypeId.lookupValueId in ?2 order by myAdUsers.lastname asc"),
		@NamedQuery(name = "findAllAdUserss", query = "select myAdUsers from AdUsers myAdUsers") })
@Table( name = "ad_users")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(namespace = "f9g4/com/f9g4/app/domain", name = "AdUsers")
@XmlRootElement(namespace = "f9g4/com/f9g4/app/domain")
public class AdUsers implements Serializable {
	private static final long serialVersionUID = 1L;

	/**
	 */

	@Column(name = "USER_ID", nullable = false)
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Basic(fetch = FetchType.EAGER)
	@Id
	@XmlElement
	Integer userId;
	/**
	 * Email address
	 * 
	 */

	@Column(name = "USER_NAME", length = 240, nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String userName;
	/**
	 * Encrypted password
	 * 
	 */

	@Column(name = "PASSWORD", length = 500, nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String password;
	/**
	 */

	@Column(name = "FIRSTNAME", length = 240, nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String firstname;
	/**
	 */

	@Column(name = "LASTNAME", length = 240, nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String lastname;
	/**
	 */

	@Column(name = "COMPANY_NAME", length = 500)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String companyName;
	/**
	 */

	@Column(name="PROFILE_NAME", nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String profilename;
	/**
	 */
	
	@Column(name = "ABOUT_YOU", length = 4000)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String aboutYou;
	/**
	 */

	@Column(name = "COMPANY_WEBSITE", length = 500)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String companyWebsite;
	/**
	 */

	@Column(name = "LOGO_IMAGE_URL", length = 500)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String logoImageUrl;
	/**
	 */

	@Column(name = "SCHOOL_AWARDS", length = 4000)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String schoolAwards;
	/**
	 */

	@Column(name = "ACTIVE_STATUS", nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	Integer activeStatus;
	/**
	 * Encrypt Questions
	 * 
	 */

	@Column(name = "SECURITY_ANSWER1", length = 500, nullable = true)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String securityAnswer1;
	/**
	 */

	@Column(name = "SECURITY_ANSWER2", length = 500, nullable = true)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String securityAnswer2;
	/**
	 */

	@Column(name = "SECURITY_ANSWER3", length = 500)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String securityAnswer3;
	/**
	 */

	@Column(name = "TAX_ID", length = 20)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String taxId;
	/**
	 */

	@Column(name = "OVERALL_RATING", precision = 12)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	BigDecimal overallRating;
	/**
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATION_DATE", nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	Calendar creationDate;
	/**
	 */

	@Column(name = "CREATED_BY", nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	Integer createdBy;
	/**
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_UPDATE_DATE", nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	Calendar lastUpdateDate;
	/**
	 */

	@Column(name = "LAST_UPDATED_BY", nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	Integer lastUpdatedBy;
	/**
	 */

	@Column(name = "LANG_CODE", length = 10, nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String langCode;

	/**
	 */
	
	@Column(name = "TEMP_PASSWORD", nullable = false)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	Integer tempPassword;
	/**
	 */
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "REG_STATUS_ID", referencedColumnName = "LOOKUP_VALUE_ID", nullable = false) })
	@XmlTransient
	AdLookupValues adLookupValuesByRegStatusId;
	/**
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SECURITY_QUESTION1_ID", referencedColumnName = "LOOKUP_VALUE_ID", nullable = true) })
	@XmlTransient
	AdLookupValues adLookupValuesBySecurityQuestion1Id;
	/**
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SECURITY_QUESTION2_ID", referencedColumnName = "LOOKUP_VALUE_ID", nullable = true) })
	@XmlTransient
	AdLookupValues adLookupValuesBySecurityQuestion2Id;
	/**
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SECURITY_QUESTION3_ID", referencedColumnName = "LOOKUP_VALUE_ID") })
	@XmlTransient
	AdLookupValues adLookupValuesBySecurityQuestion3Id;
	/**
	 */
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns({ @JoinColumn(name = "USER_TYPE_ID", referencedColumnName = "LOOKUP_VALUE_ID", nullable = false) })
	@XmlTransient
	AdLookupValues adLookupValuesByUserTypeId;

	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrRatings> trRatingses;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdActiveUsers> adActiveUserses;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrSalesTransactionDetails> trSalesTransactionDetailses;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrPaymentAuthSubmit> trPaymentAuthSubmits;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrReferrals> trReferralses;
	/**
	 */
	@OneToMany(mappedBy = "adUsersByOriginalUserId", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrBoard> trBoardsForOriginalUserId;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrRecentlyViewed> trRecentlyVieweds;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdAcceptTerms> adAcceptTermses;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdUserLanguages> adUserLanguageses;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdUserSkills> adUserSkillses;
	
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdUserDegaccs> adUserDegaccs;
	
	
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdUserEducations> adUserEducations;
	
	
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdUserExpertises> adUserExpertises;
	
	
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdUserSpecialities> adUserSpecialities;
	
	/**
	 */
	@OneToMany(mappedBy = "adUsersByOriginalUserId", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrBoard> trBoardsForCurrentUserId;
	/**
	 */
	@OneToMany(mappedBy = "adUsersByToUserId", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrMessages> trMessagesesForToUserId;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdAddresses> adAddresseses;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdContacts> adContactses;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL}, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdUserMemberships> adUserMembershipset;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrPortfolio> trPortfolios;
	/**
	 */
	@OneToMany(mappedBy = "adUsersByToUserId", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.TrMessages> trMessagesesForFromUserId;
	/**
	 */
	@OneToMany(mappedBy = "adUsers", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@XmlElement(name = "", namespace = "")
	java.util.Set<com.f9g4.domain.AdUserDocuments> adUserDocuments;
	
	@Column(name = "HDYH_ABOUT_US", length = 2000)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String howDidYouHearAboutUs;
	
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumns({ @JoinColumn(name = "EDUCATION_ID", referencedColumnName = "LOOKUP_VALUE_ID", nullable = true) })
//	@XmlTransient
//	AdLookupValues educationId;
//	
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumns({ @JoinColumn(name = "SPECIALTY_ID", referencedColumnName = "LOOKUP_VALUE_ID", nullable = false) })
//	@XmlTransient
//	AdLookupValues specialtyId;
//	
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumns({ @JoinColumn(name = "EXPERTISE_ID", referencedColumnName = "LOOKUP_VALUE_ID", nullable = false) })
//	@XmlTransient
//	AdLookupValues expertiseId;
//	
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumns({ @JoinColumn(name = "DEG_ACC_ID", referencedColumnName = "LOOKUP_VALUE_ID", nullable = false) })
//	@XmlTransient
//	AdLookupValues degAccId;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "YRS_EXP_ID", referencedColumnName = "LOOKUP_VALUE_ID", nullable = false) })
	@XmlTransient
	AdLookupValues yrsExpId;
	
	@Column(name = "COMPANIES_WORKED", length = 2000)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String companiesWorked;
	
	@Column(name = "approver_comments", length = 2000)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	String approverComments;
	
	@Column(name = "ADMIN_RATING", precision = 12)
	@Basic(fetch = FetchType.EAGER)
	@XmlElement
	BigDecimal adminRating;


	public String getApproverComments() {
		return approverComments;
	}

	public void setApproverComments(String approverComments) {
		this.approverComments = approverComments;
	}

	public String getCompaniesWorked() {
		return companiesWorked;
	}

	public void setCompaniesWorked(String companiesWorked) {
		this.companiesWorked = companiesWorked;
	}

	public String getHowDidYouHearAboutUs() {
		return howDidYouHearAboutUs;
	}

	public void setHowDidYouHearAboutUs(String howDidYouHearAboutUs) {
		this.howDidYouHearAboutUs = howDidYouHearAboutUs;
	}

	

	public AdLookupValues getYrsExpId() {
		return yrsExpId;
	}

	public void setYrsExpId(AdLookupValues yrsExpId) {
		this.yrsExpId = yrsExpId;
	}

	public java.util.Set<com.f9g4.domain.AdUserDocuments> getAdUserDocuments() {
		return adUserDocuments;
	}

	public void setAdUserDocuments(
			java.util.Set<com.f9g4.domain.AdUserDocuments> adUserDocuments) {
		this.adUserDocuments = adUserDocuments;
	}

	public Integer getTempPassword() {
		return tempPassword;
	}

	public void setTempPassword(Integer tempPassword) {
		this.tempPassword = tempPassword;
	}
	/**
	 */
	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	/**
	 */
	public Integer getUserId() {
		return this.userId;
	}

	/**
	 * Email address
	 * 
	 */
	public void setUserName(String userName) {
		this.userName = userName;
	}

	/**
	 * Email address
	 * 
	 */
	public String getUserName() {
		return this.userName;
	}

	/**
	 * Encrypted password
	 * 
	 */
	public void setPassword(String password) {
		this.password = password;
	}

	/**
	 * Encrypted password
	 * 
	 */
	public String getPassword() {
		return this.password;
	}

	/**
	 */
	public void setProfilename(String profilename) {
		this.profilename = profilename;
	}

	/**
	 */
	public String getProfilename() {
		return this.profilename;
	}

	/**
	 */
	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	/**
	 */
	public String getFirstname() {
		return this.firstname;
	}
	
	
	/**
	 */
	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	/**
	 */
	public String getLastname() {
		return this.lastname;
	}

	/**
	 */
	public void setCompanyName(String companyName) {
		this.companyName = companyName;
	}

	/**
	 */
	public String getCompanyName() {
		return this.companyName;
	}

	/**
	 */
	public void setAboutYou(String aboutYou) {
		this.aboutYou = aboutYou;
	}

	/**
	 */
	public String getAboutYou() {
		return this.aboutYou;
	}

	/**
	 */
	public void setCompanyWebsite(String companyWebsite) {
		this.companyWebsite = companyWebsite;
	}

	/**
	 */
	public String getCompanyWebsite() {
		return this.companyWebsite;
	}

	/**
	 */
	public void setSchoolAwards(String schoolAwards) {
		this.schoolAwards = schoolAwards;
	}

	/**
	 */
	public String getSchoolAwards() {
		return this.schoolAwards;
	}

	/**
	 */
	public void setActiveStatus(Integer activeStatus) {
		this.activeStatus = activeStatus;
	}

	/**
	 */
	public Integer getActiveStatus() {
		return this.activeStatus;
	}

	/**
	 * Encrypt Questions
	 * 
	 */
	public void setSecurityAnswer1(String securityAnswer1) {
		this.securityAnswer1 = securityAnswer1;
	}

	/**
	 * Encrypt Questions
	 * 
	 */
	public String getSecurityAnswer1() {
		return this.securityAnswer1;
	}

	/**
	 */
	public void setSecurityAnswer2(String securityAnswer2) {
		this.securityAnswer2 = securityAnswer2;
	}

	/**
	 */
	public String getSecurityAnswer2() {
		return this.securityAnswer2;
	}

	/**
	 */
	public void setSecurityAnswer3(String securityAnswer3) {
		this.securityAnswer3 = securityAnswer3;
	}

	/**
	 */
	public String getSecurityAnswer3() {
		return this.securityAnswer3;
	}

	/**
	 */
	public void setTaxId(String taxId) {
		this.taxId = taxId;
	}

	/**
	 */
	public String getTaxId() {
		return this.taxId;
	}

	/**
	 */
	public void setOverallRating(BigDecimal overallRating) {
		this.overallRating = overallRating;
	}

	/**
	 */
	public BigDecimal getOverallRating() {
		return this.overallRating;
	}

	/**
	 */
	public void setCreationDate(Calendar creationDate) {
		this.creationDate = creationDate;
	}

	/**
	 */
	public Calendar getCreationDate() {
		return this.creationDate;
	}

	/**
	 */
	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	/**
	 */
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	/**
	 */
	public void setLastUpdateDate(Calendar lastUpdateDate) {
		this.lastUpdateDate = lastUpdateDate;
	}

	/**
	 */
	public Calendar getLastUpdateDate() {
		return this.lastUpdateDate;
	}

	/**
	 */
	public void setLastUpdatedBy(Integer lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	/**
	 */
	public Integer getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	/**
	 */
	public void setLangCode(String langCode) {
		this.langCode = langCode;
	}

	/**
	 */
	public String getLangCode() {
		return this.langCode;
	}

	/**
	 */
	public void setAdLookupValuesByRegStatusId(AdLookupValues adLookupValuesByRegStatusId) {
		this.adLookupValuesByRegStatusId = adLookupValuesByRegStatusId;
	}

	/**
	 */
	@JsonIgnore
	public AdLookupValues getAdLookupValuesByRegStatusId() {
		return adLookupValuesByRegStatusId;
	}

	/**
	 */
	public void setAdLookupValuesBySecurityQuestion1Id(AdLookupValues adLookupValuesBySecurityQuestion1Id) {
		this.adLookupValuesBySecurityQuestion1Id = adLookupValuesBySecurityQuestion1Id;
	}

	/**
	 */
	@JsonIgnore
	public AdLookupValues getAdLookupValuesBySecurityQuestion1Id() {
		return adLookupValuesBySecurityQuestion1Id;
	}

	/**
	 */
	public void setAdLookupValuesBySecurityQuestion2Id(AdLookupValues adLookupValuesBySecurityQuestion2Id) {
		this.adLookupValuesBySecurityQuestion2Id = adLookupValuesBySecurityQuestion2Id;
	}

	/**
	 */
	@JsonIgnore
	public AdLookupValues getAdLookupValuesBySecurityQuestion2Id() {
		return adLookupValuesBySecurityQuestion2Id;
	}

	/**
	 */
	public void setAdLookupValuesBySecurityQuestion3Id(AdLookupValues adLookupValuesBySecurityQuestion3Id) {
		this.adLookupValuesBySecurityQuestion3Id = adLookupValuesBySecurityQuestion3Id;
	}

	/**
	 */
	@JsonIgnore
	public AdLookupValues getAdLookupValuesBySecurityQuestion3Id() {
		return adLookupValuesBySecurityQuestion3Id;
	}

	/**
	 */
	public void setTrRatingses(Set<TrRatings> trRatingses) {
		this.trRatingses = trRatingses;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrRatings> getTrRatingses() {
		if (trRatingses == null) {
			trRatingses = new java.util.LinkedHashSet<com.f9g4.domain.TrRatings>();
		}
		return trRatingses;
	}

	/**
	 */
	public void setAdActiveUserses(Set<AdActiveUsers> adActiveUserses) {
		this.adActiveUserses = adActiveUserses;
	}

	/**
	 */
	@JsonIgnore
	public Set<AdActiveUsers> getAdActiveUserses() {
		if (adActiveUserses == null) {
			adActiveUserses = new java.util.LinkedHashSet<com.f9g4.domain.AdActiveUsers>();
		}
		return adActiveUserses;
	}

	/**
	 */
	public void setTrSalesTransactionDetailses(Set<TrSalesTransactionDetails> trSalesTransactionDetailses) {
		this.trSalesTransactionDetailses = trSalesTransactionDetailses;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrSalesTransactionDetails> getTrSalesTransactionDetailses() {
		if (trSalesTransactionDetailses == null) {
			trSalesTransactionDetailses = new java.util.LinkedHashSet<com.f9g4.domain.TrSalesTransactionDetails>();
		}
		return trSalesTransactionDetailses;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrPaymentAuthSubmit> getTrPaymentAuthSubmits() {
		if (trPaymentAuthSubmits == null) {
			trPaymentAuthSubmits = new java.util.LinkedHashSet<com.f9g4.domain.TrPaymentAuthSubmit>();
		}
		return trPaymentAuthSubmits;
	}

	/**
	 */
	public void setTrReferralses(Set<TrReferrals> trReferralses) {
		this.trReferralses = trReferralses;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrReferrals> getTrReferralses() {
		if (trReferralses == null) {
			trReferralses = new java.util.LinkedHashSet<com.f9g4.domain.TrReferrals>();
		}
		return trReferralses;
	}

	/**
	 */
	public void setTrBoardsForOriginalUserId(Set<TrBoard> trBoardsForOriginalUserId) {
		this.trBoardsForOriginalUserId = trBoardsForOriginalUserId;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrBoard> getTrBoardsForOriginalUserId() {
		if (trBoardsForOriginalUserId == null) {
			trBoardsForOriginalUserId = new java.util.LinkedHashSet<com.f9g4.domain.TrBoard>();
		}
		return trBoardsForOriginalUserId;
	}

	/**
	 */
	public void setTrRecentlyVieweds(Set<TrRecentlyViewed> trRecentlyVieweds) {
		this.trRecentlyVieweds = trRecentlyVieweds;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrRecentlyViewed> getTrRecentlyVieweds() {
		if (trRecentlyVieweds == null) {
			trRecentlyVieweds = new java.util.LinkedHashSet<com.f9g4.domain.TrRecentlyViewed>();
		}
		return trRecentlyVieweds;
	}

	/**
	 */
	public void setAdAcceptTermses(Set<AdAcceptTerms> adAcceptTermses) {
		this.adAcceptTermses = adAcceptTermses;
	}

	/**
	 */
	@JsonIgnore
	public Set<AdAcceptTerms> getAdAcceptTermses() {
		if (adAcceptTermses == null) {
			adAcceptTermses = new java.util.LinkedHashSet<com.f9g4.domain.AdAcceptTerms>();
		}
		return adAcceptTermses;
	}

	/**
	 */
	public void setAdUserLanguageses(Set<AdUserLanguages> adUserLanguageses) {
		this.adUserLanguageses = adUserLanguageses;
	}

	/**
	 */
	@JsonIgnore
	public Set<AdUserLanguages> getAdUserLanguageses() {
		if (adUserLanguageses == null) {
			adUserLanguageses = new java.util.LinkedHashSet<com.f9g4.domain.AdUserLanguages>();
		}
		return adUserLanguageses;
	}

	/**
	 */
	public void setAdUserSkillses(Set<AdUserSkills> adUserSkillses) {
		this.adUserSkillses = adUserSkillses;
	}

	/**
	 */
	@JsonIgnore
	public Set<AdUserSkills> getAdUserSkillses() {
		if (adUserSkillses == null) {
			adUserSkillses = new java.util.LinkedHashSet<com.f9g4.domain.AdUserSkills>();
		}
		return adUserSkillses;
	}
	

	@JsonIgnore
	public java.util.Set<com.f9g4.domain.AdUserDegaccs> getAdUserDegaccs() {
		return adUserDegaccs;
	}

	public void setAdUserDegaccs(
			java.util.Set<com.f9g4.domain.AdUserDegaccs> adUserDegaccs) {
		this.adUserDegaccs = adUserDegaccs;
	}

	@JsonIgnore
	public java.util.Set<com.f9g4.domain.AdUserEducations> getAdUserEducations() {
		return adUserEducations;
	}

	public void setAdUserEducations(
			java.util.Set<com.f9g4.domain.AdUserEducations> adUserEducations) {
		this.adUserEducations = adUserEducations;
	}

	@JsonIgnore
	public java.util.Set<com.f9g4.domain.AdUserExpertises> getAdUserExpertises() {
		return adUserExpertises;
	}

	public void setAdUserExpertises(
			java.util.Set<com.f9g4.domain.AdUserExpertises> adUserExpertises) {
		this.adUserExpertises = adUserExpertises;
	}

	
	public java.util.Set<com.f9g4.domain.AdUserSpecialities> getAdUserSpecialities() {
		return adUserSpecialities;
	}

	public void setAdUserSpecialities(
			java.util.Set<com.f9g4.domain.AdUserSpecialities> adUserSpecialities) {
		this.adUserSpecialities = adUserSpecialities;
	}



	/**
	 */
	public void setTrBoardsForCurrentUserId(Set<TrBoard> trBoardsForCurrentUserId) {
		this.trBoardsForCurrentUserId = trBoardsForCurrentUserId;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrBoard> getTrBoardsForCurrentUserId() {
		if (trBoardsForCurrentUserId == null) {
			trBoardsForCurrentUserId = new java.util.LinkedHashSet<com.f9g4.domain.TrBoard>();
		}
		return trBoardsForCurrentUserId;
	}

	/**
	 */
	public void setTrMessagesesForToUserId(Set<TrMessages> trMessagesesForToUserId) {
		this.trMessagesesForToUserId = trMessagesesForToUserId;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrMessages> getTrMessagesesForToUserId() {
		if (trMessagesesForToUserId == null) {
			trMessagesesForToUserId = new java.util.LinkedHashSet<com.f9g4.domain.TrMessages>();
		}
		return trMessagesesForToUserId;
	}

	/**
	 */
	public void setAdAddresseses(Set<AdAddresses> adAddresseses) {
		this.adAddresseses = adAddresseses;
	}

	/**
	 */
	@JsonIgnore
	public Set<AdAddresses> getAdAddresseses() {
		if (adAddresseses == null) {
			adAddresseses = new java.util.LinkedHashSet<com.f9g4.domain.AdAddresses>();
		}
		return adAddresseses;
	}

	/**
	 */
	public void setAdContactses(Set<AdContacts> adContactses) {
		this.adContactses = adContactses;
	}

	/**
	 */
	@JsonIgnore
	public Set<AdContacts> getAdContactses() {
		if (adContactses == null) {
			adContactses = new java.util.LinkedHashSet<com.f9g4.domain.AdContacts>();
		}
		return adContactses;
	}

	/**
	 */
	public void setAdUserMembershipset(Set<AdUserMemberships> adUserMembershipset) {
		this.adUserMembershipset = adUserMembershipset;
	}

	/**
	 */
	@JsonIgnore
	public Set<AdUserMemberships> getAdUserMembershipset() {
		if (adUserMembershipset == null) {
			adUserMembershipset = new java.util.LinkedHashSet<com.f9g4.domain.AdUserMemberships>();
		}
		return adUserMembershipset;
	}

	/**
	 */
	public void setTrPortfolios(Set<TrPortfolio> trPortfolios) {
		this.trPortfolios = trPortfolios;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrPortfolio> getTrPortfolios() {
		if (trPortfolios == null) {
			trPortfolios = new java.util.LinkedHashSet<com.f9g4.domain.TrPortfolio>();
		}
		return trPortfolios;
	}

	/**
	 */
	public void setTrMessagesesForFromUserId(Set<TrMessages> trMessagesesForFromUserId) {
		this.trMessagesesForFromUserId = trMessagesesForFromUserId;
	}

	/**
	 */
	@JsonIgnore
	public Set<TrMessages> getTrMessagesesForFromUserId() {
		if (trMessagesesForFromUserId == null) {
			trMessagesesForFromUserId = new java.util.LinkedHashSet<com.f9g4.domain.TrMessages>();
		}
		return trMessagesesForFromUserId;
	}


	/**
	 */
	public String getLogoImageUrl() {
		return logoImageUrl;
	}

	/**
	 */
	public void setLogoImageUrl(String logoImageUrl) {
		this.logoImageUrl = logoImageUrl;
	}

	/**
	 */
	public AdLookupValues getAdLookupValuesByUserTypeId() {
		return adLookupValuesByUserTypeId;
	}

	/**
	 */
	public void setAdLookupValuesByUserTypeId(
			AdLookupValues adLookupValuesByUserTypeId) {
		this.adLookupValuesByUserTypeId = adLookupValuesByUserTypeId;
	}
	
	/**
	 */
	public void setTrPaymentAuthSubmits(Set<TrPaymentAuthSubmit> trPaymentAuthSubmits) {
		this.trPaymentAuthSubmits = trPaymentAuthSubmits;
	}
	
	/**
	 */
	public AdUsers() {
	}
	
	
	

	public BigDecimal getAdminRating() {
		return adminRating;
	}

	public void setAdminRating(BigDecimal adminRating) {
		this.adminRating = adminRating;
	}

	/**
	 * Copies the contents of the specified bean into this bean.
	 *
	 */
	public void copy(AdUsers that) {
		setUserId(that.getUserId());
		setUserName(that.getUserName());
		setPassword(that.getPassword());
		setFirstname(that.getFirstname());
		setProfilename(that.getProfilename());
		setLastname(that.getLastname());
		setCompanyName(that.getCompanyName());
		setAboutYou(that.getAboutYou());
		setCompanyWebsite(that.getCompanyWebsite());
		setLogoImageUrl(that.getLogoImageUrl());
		setSchoolAwards(that.getSchoolAwards());
		setActiveStatus(that.getActiveStatus());
		setSecurityAnswer1(that.getSecurityAnswer1());
		setSecurityAnswer2(that.getSecurityAnswer2());
		setSecurityAnswer3(that.getSecurityAnswer3());
		setTaxId(that.getTaxId());
		setOverallRating(that.getOverallRating());
		setCreationDate(that.getCreationDate());
		setCreatedBy(that.getCreatedBy());
		setLastUpdateDate(that.getLastUpdateDate());
		setLastUpdatedBy(that.getLastUpdatedBy());
		setLangCode(that.getLangCode());
		setAdLookupValuesByRegStatusId(that.getAdLookupValuesByRegStatusId());
		setAdLookupValuesBySecurityQuestion1Id(that.getAdLookupValuesBySecurityQuestion1Id());
		setAdLookupValuesBySecurityQuestion2Id(that.getAdLookupValuesBySecurityQuestion2Id());
		setAdLookupValuesBySecurityQuestion3Id(that.getAdLookupValuesBySecurityQuestion3Id());
		setAdLookupValuesByUserTypeId(that.getAdLookupValuesByUserTypeId());
		setTrRatingses(new java.util.LinkedHashSet<com.f9g4.domain.TrRatings>(that.getTrRatingses()));
		setAdActiveUserses(new java.util.LinkedHashSet<com.f9g4.domain.AdActiveUsers>(that.getAdActiveUserses()));
		setTrSalesTransactionDetailses(new java.util.LinkedHashSet<com.f9g4.domain.TrSalesTransactionDetails>(that.getTrSalesTransactionDetailses()));
		setTrPaymentAuthSubmits(new java.util.LinkedHashSet<com.f9g4.domain.TrPaymentAuthSubmit>(that.getTrPaymentAuthSubmits()));
		setTrReferralses(new java.util.LinkedHashSet<com.f9g4.domain.TrReferrals>(that.getTrReferralses()));
		setTrBoardsForOriginalUserId(new java.util.LinkedHashSet<com.f9g4.domain.TrBoard>(that.getTrBoardsForOriginalUserId()));
		setTrRecentlyVieweds(new java.util.LinkedHashSet<com.f9g4.domain.TrRecentlyViewed>(that.getTrRecentlyVieweds()));
		setAdAcceptTermses(new java.util.LinkedHashSet<com.f9g4.domain.AdAcceptTerms>(that.getAdAcceptTermses()));
		setAdUserLanguageses(new java.util.LinkedHashSet<com.f9g4.domain.AdUserLanguages>(that.getAdUserLanguageses()));
		setAdUserSkillses(new java.util.LinkedHashSet<com.f9g4.domain.AdUserSkills>(that.getAdUserSkillses()));
		setTrBoardsForCurrentUserId(new java.util.LinkedHashSet<com.f9g4.domain.TrBoard>(that.getTrBoardsForCurrentUserId()));
		setTrMessagesesForToUserId(new java.util.LinkedHashSet<com.f9g4.domain.TrMessages>(that.getTrMessagesesForToUserId()));
		setAdAddresseses(new java.util.LinkedHashSet<com.f9g4.domain.AdAddresses>(that.getAdAddresseses()));
		setAdContactses(new java.util.LinkedHashSet<com.f9g4.domain.AdContacts>(that.getAdContactses()));
		setAdUserMembershipset(new java.util.LinkedHashSet<com.f9g4.domain.AdUserMemberships>(that.getAdUserMembershipset()));
		setTrPortfolios(new java.util.LinkedHashSet<com.f9g4.domain.TrPortfolio>(that.getTrPortfolios()));
		setTrMessagesesForFromUserId(new java.util.LinkedHashSet<com.f9g4.domain.TrMessages>(that.getTrMessagesesForFromUserId()));
		setAdUserEducations(new java.util.LinkedHashSet<com.f9g4.domain.AdUserEducations>(that.getAdUserEducations()));
		setAdUserSpecialities(new java.util.LinkedHashSet<com.f9g4.domain.AdUserSpecialities>(that.getAdUserSpecialities()));
		setAdUserDegaccs(new java.util.LinkedHashSet<com.f9g4.domain.AdUserDegaccs>(that.getAdUserDegaccs()));
		setAdUserExpertises(new java.util.LinkedHashSet<com.f9g4.domain.AdUserExpertises>(that.getAdUserExpertises()));
		setYrsExpId(that.getYrsExpId());
		setHowDidYouHearAboutUs(that.getHowDidYouHearAboutUs());
		setCompaniesWorked(that.getCompaniesWorked());
		setApproverComments(that.getApproverComments());
		setAdminRating(that.getAdminRating());
	}

	/**
	 * Returns a textual representation of a bean.
	 *
	 */
	public String toString() {

		StringBuilder buffer = new StringBuilder();

		buffer.append("userId=[").append(userId).append("] ");
		buffer.append("userName=[").append(userName).append("] ");
		buffer.append("password=[").append(password).append("] ");
		buffer.append("firstname=[").append(firstname).append("] ");
		buffer.append("profilename=[").append(profilename).append("] ");
		buffer.append("lastname=[").append(lastname).append("] ");
		buffer.append("companyName=[").append(companyName).append("] ");
		buffer.append("aboutYou=[").append(aboutYou).append("] ");
		buffer.append("companyWebsite=[").append(companyWebsite).append("] ");
		buffer.append("logoImageUrl=[").append(logoImageUrl).append("] ");
		buffer.append("schoolAwards=[").append(schoolAwards).append("] ");
		buffer.append("activeStatus=[").append(activeStatus).append("] ");
		buffer.append("securityAnswer1=[").append(securityAnswer1).append("] ");
		buffer.append("securityAnswer2=[").append(securityAnswer2).append("] ");
		buffer.append("securityAnswer3=[").append(securityAnswer3).append("] ");
		buffer.append("taxId=[").append(taxId).append("] ");
		buffer.append("overallRating=[").append(overallRating).append("] ");
		buffer.append("creationDate=[").append(creationDate).append("] ");
		buffer.append("createdBy=[").append(createdBy).append("] ");
		buffer.append("lastUpdateDate=[").append(lastUpdateDate).append("] ");
		buffer.append("lastUpdatedBy=[").append(lastUpdatedBy).append("] ");
		buffer.append("langCode=[").append(langCode).append("] ");
		buffer.append("tempPassword=[").append(tempPassword).append("] ");

		buffer.append("userId=[").append(yrsExpId.toString()).append("] ");
		buffer.append("howDidYouHearAboutUs=[").append(howDidYouHearAboutUs).append("] ");
		buffer.append("companiesWorked=[").append(companiesWorked).append("] ");
		buffer.append("approverComments=[").append(approverComments).append("] ");
		buffer.append("adminRating=[").append(adminRating).append("] ");
		return buffer.toString();
	}

	/**
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = (int) (prime * result + ((userId == null) ? 0 : userId.hashCode()));
		return result;
	}

	/**
	 */
	public boolean equals(Object obj) {
		if (obj == this)
			return true;
		if (!(obj instanceof AdUsers))
			return false;
		AdUsers equalCheck = (AdUsers) obj;
		if ((userId == null && equalCheck.userId != null) || (userId != null && equalCheck.userId == null))
			return false;
		if (userId != null && !userId.equals(equalCheck.userId))
			return false;
		return true;
	}
}
